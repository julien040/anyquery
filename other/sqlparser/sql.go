// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

import "vitess.io/vitess/go/ptr"

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const INTERSECT = 57354
const SELECT = 57355
const STREAM = 57356
const VSTREAM = 57357
const INSERT = 57358
const UPDATE = 57359
const DELETE = 57360
const FROM = 57361
const WHERE = 57362
const GROUP = 57363
const HAVING = 57364
const ORDER = 57365
const BY = 57366
const LIMIT = 57367
const OFFSET = 57368
const FOR = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const INTO = 57375
const DUPLICATE = 57376
const DEFAULT = 57377
const SET = 57378
const LOCK = 57379
const UNLOCK = 57380
const KEYS = 57381
const DO = 57382
const CALL = 57383
const ALL = 57384
const ANY = 57385
const SOME = 57386
const DISTINCTROW = 57387
const PARSER = 57388
const GENERATED = 57389
const ALWAYS = 57390
const OUTFILE = 57391
const S3 = 57392
const DATA = 57393
const LOAD = 57394
const LINES = 57395
const TERMINATED = 57396
const ESCAPED = 57397
const ENCLOSED = 57398
const DUMPFILE = 57399
const CSV = 57400
const HEADER = 57401
const MANIFEST = 57402
const OVERWRITE = 57403
const STARTING = 57404
const OPTIONALLY = 57405
const VALUES = 57406
const LAST_INSERT_ID = 57407
const NEXT = 57408
const VALUE = 57409
const SHARE = 57410
const MODE = 57411
const SQL_NO_CACHE = 57412
const SQL_CACHE = 57413
const SQL_CALC_FOUND_ROWS = 57414
const SQL_SMALL_RESULT = 57415
const SQL_BIG_RESULT = 57416
const HIGH_PRIORITY = 57417
const JOIN = 57418
const STRAIGHT_JOIN = 57419
const LEFT = 57420
const RIGHT = 57421
const INNER = 57422
const OUTER = 57423
const CROSS = 57424
const NATURAL = 57425
const USE = 57426
const FORCE = 57427
const ON = 57428
const USING = 57429
const INPLACE = 57430
const COPY = 57431
const INSTANT = 57432
const ALGORITHM = 57433
const NONE = 57434
const SHARED = 57435
const EXCLUSIVE = 57436
const SUBQUERY_AS_EXPR = 57437
const STRING = 57438
const SQL_BUFFER_RESULT = 57439
const ID = 57440
const AT_ID = 57441
const AT_AT_ID = 57442
const HEX = 57443
const NCHAR_STRING = 57444
const INTEGRAL = 57445
const FLOAT = 57446
const DECIMAL = 57447
const HEXNUM = 57448
const COMMENT = 57449
const COMMENT_KEYWORD = 57450
const BITNUM = 57451
const BIT_LITERAL = 57452
const COMPRESSION = 57453
const VALUE_ARG = 57454
const LIST_ARG = 57455
const OFFSET_ARG = 57456
const JSON_PRETTY = 57457
const JSON_STORAGE_SIZE = 57458
const JSON_STORAGE_FREE = 57459
const JSON_CONTAINS = 57460
const JSON_CONTAINS_PATH = 57461
const JSON_EXTRACT = 57462
const JSON_KEYS = 57463
const JSON_OVERLAPS = 57464
const JSON_SEARCH = 57465
const JSON_VALUE = 57466
const JSON_ARRAYAGG = 57467
const JSON_OBJECTAGG = 57468
const EXTRACT = 57469
const NULL = 57470
const UNKNOWN = 57471
const TRUE = 57472
const FALSE = 57473
const OFF = 57474
const DISCARD = 57475
const IMPORT = 57476
const ENABLE = 57477
const DISABLE = 57478
const TABLESPACE = 57479
const VIRTUAL = 57480
const STORED = 57481
const BOTH = 57482
const LEADING = 57483
const TRAILING = 57484
const KILL = 57485
const TRACE = 57486
const EMPTY_FROM_CLAUSE = 57487
const LOWER_THAN_CHARSET = 57488
const CHARSET = 57489
const UNIQUE = 57490
const KEY = 57491
const EXPRESSION_PREC_SETTER = 57492
const OR = 57493
const XOR = 57494
const AND = 57495
const NOT = 57496
const BETWEEN = 57497
const CASE = 57498
const WHEN = 57499
const THEN = 57500
const ELSE = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const SCHEMA = 57578
const TABLE = 57579
const INDEX = 57580
const VIEW = 57581
const TO = 57582
const IGNORE = 57583
const IF = 57584
const PRIMARY = 57585
const COLUMN = 57586
const SPATIAL = 57587
const FULLTEXT = 57588
const KEY_BLOCK_SIZE = 57589
const CHECK = 57590
const INDEXES = 57591
const ACTION = 57592
const CASCADE = 57593
const CONSTRAINT = 57594
const FOREIGN = 57595
const NO = 57596
const REFERENCES = 57597
const RESTRICT = 57598
const SHOW = 57599
const DESCRIBE = 57600
const EXPLAIN = 57601
const DATE = 57602
const ESCAPE = 57603
const REPAIR = 57604
const OPTIMIZE = 57605
const TRUNCATE = 57606
const COALESCE = 57607
const EXCHANGE = 57608
const REBUILD = 57609
const PARTITIONING = 57610
const REMOVE = 57611
const PREPARE = 57612
const EXECUTE = 57613
const MAXVALUE = 57614
const PARTITION = 57615
const REORGANIZE = 57616
const LESS = 57617
const THAN = 57618
const PROCEDURE = 57619
const TRIGGER = 57620
const VINDEX = 57621
const VINDEXES = 57622
const DIRECTORY = 57623
const NAME = 57624
const UPGRADE = 57625
const STATUS = 57626
const VARIABLES = 57627
const WARNINGS = 57628
const CASCADED = 57629
const DEFINER = 57630
const OPTION = 57631
const SQL = 57632
const UNDEFINED = 57633
const SEQUENCE = 57634
const MERGE = 57635
const TEMPORARY = 57636
const TEMPTABLE = 57637
const INVOKER = 57638
const SECURITY = 57639
const FIRST = 57640
const AFTER = 57641
const LAST = 57642
const VITESS_MIGRATION = 57643
const CANCEL = 57644
const RETRY = 57645
const LAUNCH = 57646
const COMPLETE = 57647
const CLEANUP = 57648
const THROTTLE = 57649
const UNTHROTTLE = 57650
const FORCE_CUTOVER = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const FORMAT_BYTES = 58016
const FORMAT_PICO_TIME = 58017
const PS_CURRENT_THREAD_ID = 58018
const PS_THREAD_ID = 58019
const GTID_SUBSET = 58020
const GTID_SUBTRACT = 58021
const WAIT_FOR_EXECUTED_GTID_SET = 58022
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58023
const FORMAT = 58024
const TREE = 58025
const VITESS = 58026
const TRADITIONAL = 58027
const VTEXPLAIN = 58028
const VEXPLAIN = 58029
const PLAN = 58030
const LOCAL = 58031
const LOW_PRIORITY = 58032
const NO_WRITE_TO_BINLOG = 58033
const LOGS = 58034
const ERROR = 58035
const GENERAL = 58036
const HOSTS = 58037
const OPTIMIZER_COSTS = 58038
const USER_RESOURCES = 58039
const SLOW = 58040
const CHANNEL = 58041
const RELAY = 58042
const EXPORT = 58043
const CURRENT = 58044
const ROW = 58045
const ROWS = 58046
const AVG_ROW_LENGTH = 58047
const CONNECTION = 58048
const CHECKSUM = 58049
const DELAY_KEY_WRITE = 58050
const ENCRYPTION = 58051
const ENGINE = 58052
const INSERT_METHOD = 58053
const MAX_ROWS = 58054
const MIN_ROWS = 58055
const PACK_KEYS = 58056
const PASSWORD = 58057
const FIXED = 58058
const DYNAMIC = 58059
const COMPRESSED = 58060
const REDUNDANT = 58061
const COMPACT = 58062
const ROW_FORMAT = 58063
const STATS_AUTO_RECALC = 58064
const STATS_PERSISTENT = 58065
const STATS_SAMPLE_PAGES = 58066
const STORAGE = 58067
const MEMORY = 58068
const DISK = 58069
const PARTITIONS = 58070
const LINEAR = 58071
const RANGE = 58072
const LIST = 58073
const SUBPARTITION = 58074
const SUBPARTITIONS = 58075
const HASH = 58076

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	17, 47,
	18, 47,
	-2, 38,
	-1, 48,
	1, 155,
	752, 155,
	-2, 163,
	-1, 49,
	150, 163,
	192, 163,
	364, 163,
	-2, 522,
	-1, 57,
	39, 782,
	255, 782,
	266, 782,
	301, 796,
	302, 796,
	-2, 784,
	-1, 62,
	257, 820,
	-2, 818,
	-1, 119,
	254, 1624,
	-2, 129,
	-1, 121,
	1, 156,
	752, 156,
	-2, 163,
	-1, 132,
	151, 407,
	260, 407,
	-2, 511,
	-1, 151,
	150, 163,
	192, 163,
	364, 163,
	-2, 531,
	-1, 745,
	178, 39,
	-2, 41,
	-1, 954,
	96, 1641,
	-2, 1485,
	-1, 955,
	96, 1642,
	237, 1646,
	-2, 1486,
	-1, 956,
	237, 1645,
	-2, 40,
	-1, 1040,
	66, 896,
	-2, 909,
	-1, 1125,
	265, 1112,
	270, 1112,
	-2, 418,
	-1, 1210,
	1, 579,
	752, 579,
	-2, 163,
	-1, 1521,
	237, 1646,
	-2, 1486,
	-1, 1735,
	66, 897,
	-2, 913,
	-1, 1736,
	66, 898,
	-2, 914,
	-1, 1787,
	150, 163,
	192, 163,
	364, 163,
	-2, 457,
	-1, 1870,
	151, 407,
	260, 407,
	-2, 511,
	-1, 1879,
	265, 1113,
	270, 1113,
	-2, 419,
	-1, 2328,
	237, 1650,
	-2, 1644,
	-1, 2329,
	237, 1646,
	-2, 1642,
	-1, 2407,
	1, 943,
	11, 943,
	12, 943,
	20, 943,
	21, 943,
	22, 943,
	23, 943,
	25, 943,
	27, 943,
	33, 943,
	36, 943,
	37, 943,
	76, 943,
	77, 943,
	78, 943,
	79, 943,
	80, 943,
	82, 943,
	83, 943,
	86, 943,
	87, 943,
	97, 943,
	98, 943,
	597, 943,
	610, 943,
	628, 943,
	752, 943,
	-2, 975,
	-1, 2431,
	150, 163,
	192, 163,
	364, 163,
	-2, 458,
	-1, 2438,
	29, 184,
	-2, 186,
	-1, 2908,
	87, 92,
	97, 92,
	-2, 994,
	-1, 2975,
	727, 700,
	-2, 674,
	-1, 3204,
	56, 1589,
	-2, 1583,
	-1, 4038,
	727, 700,
	-2, 688,
	-1, 4129,
	99, 632,
	105, 632,
	115, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	226, 632,
	227, 632,
	228, 632,
	229, 632,
	230, 632,
	231, 632,
	232, 632,
	233, 632,
	234, 632,
	235, 632,
	-2, 2021,
}

const yyPrivate = 57344

const yyLast = 56539

var yyAct = [...]int{
	970, 3689, 3691, 83, 3690, 4204, 4217, 4020, 4172, 1790,
	2428, 4070, 965, 3352, 4108, 4096, 957, 3253, 3260, 4002,
	4127, 958, 3925, 3310, 3301, 3315, 3312, 4171, 3311, 2121,
	2357, 1276, 3309, 3214, 4000, 3314, 3065, 3313, 3488, 3626,
	2059, 3150, 2133, 5, 101, 2358, 1033, 3330, 3268, 2503,
	749, 3329, 3215, 1278, 3536, 2000, 3218, 3639, 3733, 3528,
	3039, 3064, 743, 2388, 3212, 919, 3205, 3558, 3518, 2869,
	777, 2466, 744, 2941, 918, 3332, 3021, 2972, 3359, 2490,
	1755, 2471, 1038, 2942, 83, 2943, 160, 2416, 2534, 2402,
	1087, 2891, 1847, 1895, 2404, 2860, 39, 41, 1157, 2875,
	2403, 2854, 2374, 1038, 923, 2313, 2837, 40, 2281, 2155,
	3013, 2067, 2117, 2512, 146, 2489, 1038, 1877, 2396, 1097,
	2280, 2473, 2551, 2934, 1115, 1035, 1779, 1120, 2909, 1717,
	1768, 2406, 96, 1715, 1534, 2092, 2161, 2081, 1459, 1442,
	1996, 100, 1057, 3192, 3217, 1094, 759, 1884, 1091, 1126,
	1976, 1856, 2462, 1095, 1121, 1123, 1122, 2463, 1778, 1070,
	1047, 1072, 1738, 2188, 1133, 1493, 747, 1044, 2058, 3727,
	81, 2835, 95, 103, 2389, 754, 1517, 3719, 1266, 2008,
	1042, 1043, 2169, 124, 164, 122, 1037, 746, 1041, 123,
	3489, 1869, 129, 130, 1206, 753, 1065, 3547, 89, 736,
	920, 1543, 1538, 1045, 94, 4205, 3627, 1060, 80, 3298,
	1252, 4054, 1083, 2505, 2506, 2507, 2505, 2995, 2994, 2549,
	1084, 1274, 102, 2963, 1460, 3619, 1032, 4154, 1050, 3029,
	3030, 4050, 679, 125, 2354, 2355, 4049, 4055, 1162, 3582,
	2074, 131, 2073, 1058, 1088, 2072, 2071, 1159, 2, 2070,
	2069, 2039, 1222, 676, 2833, 677, 4148, 2602, 3201, 1961,
	1176, 1177, 1178, 3154, 1181, 1182, 1183, 1184, 737, 1051,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1080, 1079, 1136,
	1036, 109, 1759, 112, 2871, 3320, 119, 91, 1137, 188,
	1112, 1059, 671, 1034, 1476, 1111, 125, 1110, 1163, 1166,
	1167, 1109, 4028, 3694, 734, 735, 3320, 1104, 1757, 2538,
	1170, 2965, 1760, 4175, 1026, 1027, 1028, 1029, 721, 3317,
	721, 1040, 1470, 3694, 1078, 1082, 922, 4050, 91, 1179,
	4210, 4158, 91, 715, 4156, 2382, 1099, 1223, 1758, 4227,
	4170, 1031, 4195, 3492, 1456, 3318, 3491, 1453, 924, 1067,
	1068, 91, 2095, 2537, 2385, 4209, 4157, 2985, 2384, 4155,
	1078, 1082, 922, 187, 125, 2988, 3318, 4003, 2798, 715,
	2079, 106, 108, 715, 3324, 1113, 973, 974, 975, 973,
	974, 975, 3378, 105, 4123, 104, 1749, 126, 106, 108,
	3921, 3632, 3920, 99, 3633, 3324, 106, 108, 1161, 3693,
	105, 1160, 104, 169, 4185, 3931, 4152, 82, 105, 715,
	104, 2609, 710, 106, 108, 3651, 106, 108, 99, 3693,
	2536, 1444, 3640, 4097, 4105, 105, 2531, 104, 105, 3930,
	4109, 2126, 4132, 82, 1466, 1858, 3404, 1458, 3250, 3251,
	2423, 2424, 82, 1780, 1473, 1781, 1474, 1475, 715, 2923,
	2051, 2052, 1455, 2834, 1472, 2422, 2882, 3249, 1749, 3028,
	695, 2918, 2606, 166, 2917, 3650, 167, 2919, 1108, 3012,
	1215, 1216, 1242, 693, 1024, 1749, 1023, 1247, 1248, 1271,
	4033, 2607, 1230, 4021, 2883, 1460, 2930, 1231, 1243, 3321,
	91, 2392, 186, 3747, 2004, 3356, 1205, 2356, 1236, 2441,
	2440, 3386, 1218, 715, 2482, 3354, 4113, 2878, 2879, 4113,
	3321, 715, 715, 690, 82, 3384, 91, 84, 1230, 1437,
	2600, 729, 705, 1231, 3086, 91, 1106, 2050, 2476, 1951,
	4137, 1229, 1776, 1228, 727, 2054, 733, 700, 3360, 3014,
	3973, 1263, 3974, 2973, 1720, 2513, 2392, 716, 703, 2998,
	4135, 713, 2197, 1180, 3347, 1071, 4207, 1454, 2552, 714,
	4141, 4142, 3348, 2558, 2576, 1977, 2577, 4176, 2578, 1211,
	3270, 3271, 2603, 1952, 2604, 1953, 1436, 4136, 2556, 1245,
	1246, 1268, 1251, 716, 1443, 1249, 1244, 716, 4177, 2554,
	3016, 3357, 1270, 1470, 3621, 1250, 1237, 91, 1269, 3620,
	2579, 3355, 1186, 3002, 1185, 3003, 3905, 170, 2565, 2561,
	2563, 2564, 2562, 2566, 2567, 2568, 176, 2516, 2559, 680,
	2555, 682, 696, 716, 718, 2966, 717, 686, 3617, 684,
	688, 697, 689, 2557, 683, 2005, 694, 3698, 1117, 685,
	698, 699, 702, 706, 707, 708, 704, 701, 4149, 692,
	719, 2189, 1081, 1075, 1073, 2400, 2191, 1155, 1107, 3533,
	2196, 2192, 716, 1154, 2193, 2194, 2195, 3153, 1153, 2190,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 3269,
	1152, 2475, 1494, 1151, 1723, 1150, 2390, 2391, 1081, 1075,
	1073, 3272, 3087, 1116, 1149, 1862, 1148, 1117, 1143, 1156,
	1275, 4228, 1275, 1275, 3375, 1466, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1503, 1502, 1504, 1505, 716, 3272, 1092,
	4182, 1092, 1128, 1092, 1129, 716, 716, 1090, 1997, 1857,
	1465, 1462, 1463, 1464, 1469, 1471, 1468, 1066, 1467, 1165,
	3017, 2390, 2391, 3616, 161, 1128, 2542, 2541, 1461, 1164,
	1993, 1445, 1038, 1518, 1523, 1524, 1173, 1527, 1529, 1530,
	1531, 1532, 1533, 1777, 1536, 1537, 1539, 1539, 3292, 1539,
	1539, 1544, 1544, 1544, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1515, 2535,
	1264, 4027, 1671, 2932, 1673, 1674, 1675, 1676, 1677, 1114,
	2964, 971, 1511, 1512, 1513, 1514, 1544, 1544, 1544, 1544,
	1544, 1544, 1525, 1434, 1435, 720, 1433, 3580, 3581, 1074,
	2967, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1528, 711, 1963, 1962, 1964,
	1965, 1966, 971, 1519, 4073, 1135, 971, 4111, 3000, 2361,
	4111, 712, 1712, 3322, 3323, 1074, 1227, 2987, 3534, 1540,
	107, 1541, 1542, 1545, 1546, 1508, 3326, 3649, 3692, 1217,
	3476, 2608, 1240, 162, 3322, 3323, 1146, 107, 85, 4110,
	174, 90, 4110, 1144, 1135, 107, 2607, 3326, 3692, 1209,
	1883, 1465, 1462, 1463, 1464, 1469, 1471, 1468, 1214, 1467,
	1452, 2986, 107, 1135, 2479, 107, 1719, 90, 1226, 1461,
	1232, 1233, 1234, 1235, 4221, 1038, 90, 1508, 1259, 1038,
	1261, 182, 2838, 2840, 2997, 1038, 1103, 1855, 1135, 1105,
	1748, 1854, 3020, 1853, 1272, 1273, 2983, 1994, 1851, 1221,
	670, 1509, 1510, 3011, 3256, 2480, 3010, 1710, 1134, 2533,
	4150, 3033, 2478, 4016, 4140, 1709, 3571, 3554, 1258, 1260,
	1982, 1035, 1730, 1728, 163, 168, 165, 171, 172, 173,
	175, 177, 178, 179, 180, 2876, 187, 1981, 3531, 2914,
	181, 183, 184, 185, 2864, 2810, 2481, 1134, 90, 3181,
	678, 2129, 1138, 1128, 1672, 3257, 2477, 1140, 4139, 1882,
	126, 1141, 1139, 2624, 1220, 3162, 1134, 1678, 1679, 1680,
	1681, 1682, 1683, 3161, 3376, 1710, 169, 2429, 1508, 1727,
	3259, 1505, 1142, 1731, 3248, 1749, 1147, 1172, 1108, 1037,
	1100, 1134, 121, 1145, 2635, 1716, 1253, 1102, 1101, 1054,
	3254, 1703, 1488, 2360, 115, 1267, 4041, 3179, 1158, 2097,
	3612, 1108, 1204, 3546, 103, 1058, 1725, 3023, 2009, 1729,
	3270, 3271, 3022, 2098, 1506, 1507, 2096, 3255, 1256, 1225,
	2553, 2063, 1257, 1990, 1782, 3060, 166, 2162, 2162, 167,
	2644, 2495, 1262, 2170, 1474, 1475, 1106, 4186, 1239, 1475,
	3742, 1859, 1860, 1861, 1875, 1751, 2839, 3587, 2153, 1241,
	2171, 3261, 1713, 3023, 3040, 186, 3586, 1255, 3022, 2635,
	2520, 116, 1892, 1726, 1868, 1946, 1208, 1897, 1135, 1898,
	1891, 1900, 1902, 1881, 2525, 1906, 1908, 1910, 1912, 1914,
	1754, 1887, 1978, 1036, 1979, 4178, 2530, 1980, 1928, 1034,
	1476, 2528, 1146, 1275, 1773, 1774, 4219, 1135, 2156, 4220,
	1135, 4218, 1144, 3572, 2002, 4229, 2532, 1049, 1936, 1937,
	1886, 1842, 4223, 1749, 1942, 1943, 2318, 2529, 1732, 3269,
	2315, 2167, 3646, 1850, 3647, 1971, 1885, 1885, 1135, 2317,
	1986, 3272, 1984, 1985, 1983, 1987, 1988, 1989, 3042, 117,
	1865, 1866, 1864, 4074, 1254, 969, 1878, 2145, 2134, 2135,
	2136, 2137, 2147, 2138, 2139, 2140, 2152, 2148, 2141, 2142,
	2149, 2150, 2151, 2143, 2144, 2146, 2010, 1889, 1107, 739,
	170, 1134, 1210, 1224, 2525, 1207, 1138, 1128, 1932, 176,
	4008, 1140, 973, 974, 975, 1141, 1139, 3913, 1998, 2168,
	3912, 1107, 4075, 1476, 1924, 1969, 1970, 1927, 3903, 1929,
	1134, 4230, 3663, 1134, 3662, 1171, 1128, 1131, 1132, 1168,
	1092, 3052, 3051, 3050, 1125, 1129, 3044, 2527, 3048, 3594,
	3043, 3593, 3041, 1958, 1111, 125, 1110, 3046, 3583, 4009,
	1109, 1134, 3299, 3288, 2939, 1124, 3045, 1128, 1131, 1132,
	1473, 1092, 1474, 1475, 2938, 1125, 1129, 2318, 2015, 3062,
	2937, 3258, 2485, 1972, 1956, 3047, 3049, 1500, 1501, 1503,
	1502, 1504, 1505, 1275, 1275, 1476, 1968, 1955, 1954, 2011,
	2012, 1944, 2037, 2085, 2086, 2083, 2084, 1938, 3351, 83,
	1935, 1934, 83, 2016, 1933, 1904, 4191, 1749, 1724, 1439,
	2023, 2024, 2025, 3577, 1957, 721, 1494, 721, 1776, 1490,
	2082, 1491, 1476, 2085, 2086, 2614, 2615, 161, 1494, 2921,
	3032, 721, 1762, 4179, 2036, 1492, 1506, 1507, 1489, 4036,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1502, 1504,
	1505, 4035, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503,
	1502, 1504, 1505, 1473, 2683, 1474, 1475, 1494, 3545, 2501,
	1476, 2500, 2124, 2124, 1472, 1749, 2122, 2122, 4189, 1749,
	91, 1763, 2499, 1494, 2498, 2623, 2497, 4012, 2496, 2685,
	2125, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1502,
	1504, 1505, 2087, 40, 2867, 4206, 40, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1503, 1502, 1504, 1505, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1503, 1502, 1504, 1505, 4166,
	1749, 1749, 97, 4011, 2013, 1473, 1476, 1474, 1475, 4010,
	1476, 2017, 98, 2019, 2020, 2021, 2022, 2867, 1749, 4029,
	2026, 1498, 1499, 1500, 1501, 1503, 1502, 1504, 1505, 2208,
	1472, 1749, 2038, 4119, 1749, 2671, 81, 1476, 1494, 81,
	2064, 3908, 1473, 1476, 1474, 1475, 1710, 1476, 3892, 97,
	2867, 4104, 2867, 4083, 1709, 99, 2094, 3891, 2681, 98,
	3741, 2157, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503,
	1502, 1504, 1505, 1749, 2044, 2045, 2099, 2867, 4080, 2101,
	3993, 1749, 3940, 3262, 3630, 4026, 3939, 3266, 3739, 1476,
	1473, 3659, 1474, 1475, 3265, 3916, 1749, 3896, 1476, 2100,
	1749, 2102, 2103, 2104, 2105, 2106, 2107, 2109, 2111, 2112,
	2113, 2114, 2115, 2116, 2631, 2128, 2232, 2867, 3904, 1476,
	1749, 1472, 1708, 1476, 2326, 1707, 1706, 3591, 3267, 1476,
	4117, 1749, 3895, 3263, 3630, 1749, 162, 1749, 3264, 1519,
	4115, 1749, 3638, 174, 2867, 3628, 2328, 2316, 2327, 2207,
	2314, 2172, 2173, 2174, 2175, 3576, 1473, 2163, 1474, 1475,
	1473, 3361, 1474, 1475, 1476, 2186, 1496, 1497, 1498, 1499,
	1500, 1501, 1503, 1502, 1504, 1505, 1482, 1483, 1484, 1485,
	1486, 1487, 1481, 1478, 182, 3358, 2224, 1473, 3291, 1474,
	1475, 3986, 1749, 1473, 2408, 1474, 1475, 1473, 3290, 1474,
	1475, 2325, 2525, 1749, 2331, 2332, 3552, 1749, 2974, 1476,
	2765, 1749, 3984, 1749, 3281, 3280, 3981, 1749, 3278, 3279,
	3193, 2438, 3963, 1749, 2640, 1476, 2948, 163, 168, 165,
	171, 172, 173, 175, 177, 178, 179, 180, 1476, 1473,
	2935, 1474, 1475, 181, 183, 184, 185, 1476, 1473, 2362,
	1474, 1475, 1705, 1476, 3276, 3277, 2953, 3517, 1749, 3276,
	3275, 2888, 1749, 1472, 3184, 2607, 2996, 1097, 2093, 1473,
	2910, 1474, 1475, 1473, 1698, 1474, 1475, 1846, 2977, 1473,
	1476, 1474, 1475, 2970, 2971, 2447, 2448, 2449, 2450, 1476,
	1058, 2368, 1058, 2369, 2432, 2867, 2866, 2888, 2410, 2433,
	1476, 1097, 2639, 2349, 1050, 2597, 2414, 2589, 2442, 2588,
	2443, 2444, 2445, 2446, 1473, 2547, 1474, 1475, 3510, 1749,
	2378, 2127, 1749, 1476, 2452, 2546, 2387, 2454, 2455, 2456,
	2457, 3507, 1749, 2468, 2380, 1476, 2436, 99, 2911, 2363,
	3505, 1749, 1476, 2040, 2514, 2474, 3468, 1749, 2913, 2006,
	3549, 1476, 1967, 2857, 1959, 2419, 2420, 2418, 1949, 1473,
	1945, 1474, 1475, 2435, 1941, 2434, 1476, 99, 1940, 1939,
	1080, 1079, 1764, 3466, 1749, 1473, 1265, 1474, 1475, 3193,
	1476, 3213, 3462, 1749, 1476, 2511, 2484, 105, 1473, 1476,
	1474, 1475, 3545, 3459, 1749, 2437, 1476, 1473, 4068, 1474,
	1475, 4145, 1749, 1473, 1476, 1474, 1475, 2397, 2398, 1846,
	1845, 2469, 2465, 2458, 2460, 2461, 3457, 1749, 3548, 2519,
	2483, 2487, 2522, 2488, 2523, 1788, 1787, 1476, 3455, 1749,
	1473, 2855, 1474, 1475, 1476, 3453, 1749, 2910, 2539, 1473,
	4040, 1474, 1475, 2867, 3451, 1749, 2518, 2469, 2517, 1136,
	1473, 2521, 1474, 1475, 3243, 2888, 3545, 3496, 1137, 3449,
	1749, 1472, 2540, 2887, 2607, 2543, 1476, 3278, 1885, 2544,
	2545, 2526, 3185, 1473, 2421, 1474, 1475, 3447, 1749, 1476,
	2765, 2668, 3445, 1749, 1476, 1473, 2667, 1474, 1475, 3443,
	1749, 2525, 1473, 2508, 1474, 1475, 1476, 3441, 1749, 2395,
	2612, 1473, 1753, 1474, 1475, 2911, 2550, 3393, 1476, 1038,
	1038, 1038, 2352, 1750, 1752, 2607, 1473, 1476, 1474, 1475,
	3439, 1749, 2127, 2065, 2888, 2049, 1992, 3437, 1749, 1529,
	1473, 1529, 1474, 1475, 1473, 2525, 1474, 1475, 3595, 1473,
	1775, 1474, 1475, 1119, 1118, 1476, 1473, 2627, 1474, 1475,
	1476, 4086, 1039, 3927, 1473, 2582, 1474, 1475, 4201, 3435,
	1749, 1756, 3893, 3754, 3611, 3608, 3589, 3409, 1920, 3408,
	1848, 1476, 3433, 1749, 2467, 3349, 3302, 1473, 1749, 1474,
	1475, 2630, 1476, 3304, 1473, 3300, 1474, 1475, 1476, 3431,
	1749, 2361, 2978, 1476, 2464, 3596, 3597, 3598, 2459, 1476,
	2944, 3429, 1749, 2328, 2453, 2327, 2451, 1974, 1880, 2599,
	3415, 1749, 1876, 1844, 118, 2945, 1473, 1476, 1474, 1475,
	1209, 1476, 3559, 3560, 2605, 1921, 1922, 1923, 4199, 1473,
	3353, 1474, 1475, 1476, 1473, 91, 1474, 1475, 3391, 1749,
	2613, 3928, 2482, 2830, 1749, 2366, 1473, 4173, 1474, 1475,
	4048, 3968, 2619, 2042, 2945, 2616, 2617, 2618, 1473, 1711,
	1474, 1475, 3562, 2094, 2828, 1749, 1476, 1473, 3296, 1474,
	1475, 3295, 3294, 3213, 2957, 2803, 1749, 2583, 3235, 3565,
	3564, 2780, 1749, 3236, 1476, 2621, 2772, 1749, 3232, 1476,
	3231, 3233, 2763, 1749, 675, 1473, 3234, 1474, 1475, 4044,
	1473, 1476, 1474, 1475, 3929, 2620, 1476, 2622, 2386, 1761,
	2761, 1749, 1476, 2372, 2748, 1749, 2625, 2643, 2626, 3553,
	2043, 1473, 3190, 1474, 1475, 3189, 2746, 1749, 3237, 1476,
	2897, 2898, 1473, 1476, 1474, 1475, 3599, 1476, 1473, 4007,
	1474, 1475, 3732, 1473, 3541, 1474, 1475, 2809, 2628, 1473,
	1476, 1474, 1475, 1052, 1916, 1476, 3718, 3538, 3717, 2744,
	1749, 1991, 3203, 1476, 738, 3537, 3734, 1473, 2797, 1474,
	1475, 1473, 2679, 1474, 1475, 1022, 3274, 2742, 1749, 2591,
	2592, 2842, 3935, 1473, 2594, 1474, 1475, 1476, 1055, 3600,
	3601, 3602, 2928, 2595, 2740, 1749, 1056, 2124, 2949, 2738,
	1749, 2122, 1038, 1476, 1053, 2736, 1749, 1917, 1918, 1919,
	1064, 3716, 2575, 2574, 2845, 2573, 1473, 2572, 1474, 1475,
	2885, 2886, 2734, 1749, 1063, 2841, 2732, 1749, 2170, 2408,
	2730, 1749, 1038, 2905, 1473, 2571, 1474, 1475, 1476, 1473,
	2570, 1474, 1475, 2728, 1749, 2171, 2569, 2846, 3567, 2848,
	1175, 1473, 3369, 1474, 1475, 1174, 1473, 4180, 1474, 1475,
	2884, 2944, 1473, 3026, 1474, 1475, 1476, 3206, 3208, 1438,
	2633, 2868, 2090, 2088, 2089, 2093, 3209, 2984, 126, 1473,
	2632, 1474, 1475, 1473, 1476, 1474, 1475, 1473, 97, 1474,
	1475, 97, 1476, 3543, 99, 4215, 2726, 1749, 98, 1476,
	1473, 98, 1474, 1475, 1716, 1473, 2832, 1474, 1475, 99,
	1476, 2877, 2961, 1473, 1476, 1474, 1475, 2586, 2903, 1476,
	2397, 2398, 4122, 4025, 40, 1710, 2853, 2931, 2933, 1476,
	3923, 2724, 1749, 2902, 3273, 3188, 2904, 1473, 2924, 1474,
	1475, 2901, 2381, 3187, 3519, 2907, 2880, 2982, 2865, 2611,
	2048, 2047, 104, 1473, 3992, 1474, 1475, 1476, 3991, 2722,
	1749, 3971, 3740, 2906, 2912, 3738, 3737, 1476, 2915, 3729,
	3609, 1476, 2474, 3542, 2993, 2922, 1476, 2720, 1749, 1766,
	3540, 2925, 3305, 2509, 1863, 2718, 1749, 105, 1473, 1062,
	1474, 1475, 2716, 1749, 2947, 3728, 3529, 2936, 1476, 2950,
	2951, 3193, 1476, 2714, 1749, 3702, 1476, 2709, 1749, 2857,
	2165, 3090, 2705, 1749, 2946, 2166, 1473, 1476, 1474, 1475,
	4203, 4202, 2703, 1749, 2669, 2954, 2364, 2958, 2959, 2960,
	2955, 110, 111, 4202, 1473, 4203, 1474, 1475, 2990, 4013,
	3575, 1476, 1473, 1868, 1474, 1475, 3, 93, 1, 1473,
	1765, 1474, 1475, 2228, 1476, 1030, 1441, 1440, 2979, 2980,
	1473, 4024, 1474, 1475, 1473, 3900, 1474, 1475, 3579, 1473,
	3613, 1474, 1475, 2989, 2062, 1476, 4134, 8, 691, 1473,
	1476, 1474, 1475, 2060, 1476, 2353, 7, 2061, 3036, 3037,
	6, 2696, 1749, 1714, 1476, 2694, 1749, 4174, 4130, 3512,
	4131, 1960, 1476, 1950, 3015, 3641, 1476, 1473, 2279, 1474,
	1475, 2940, 3924, 3053, 3018, 3308, 3034, 1473, 2515, 1474,
	1475, 1473, 3607, 1474, 1475, 2472, 1473, 1476, 1474, 1475,
	1035, 1127, 3081, 2311, 3508, 151, 2430, 3071, 3072, 3073,
	3074, 3075, 3076, 3077, 3078, 3079, 3080, 3474, 1473, 1476,
	1474, 1475, 1473, 2431, 1474, 1475, 1473, 3088, 1474, 1475,
	4099, 114, 2991, 2343, 1085, 113, 3054, 1473, 3470, 1474,
	1475, 1130, 1238, 3406, 2510, 3631, 2929, 3405, 2439, 1794,
	1792, 1750, 2350, 1793, 1791, 1796, 1795, 3397, 4072, 3377,
	2670, 1473, 3475, 1474, 1475, 3395, 2053, 728, 2900, 2826,
	1476, 722, 189, 1783, 1473, 1476, 1474, 1475, 2858, 2046,
	1169, 3035, 681, 3282, 2548, 687, 3092, 1526, 1711, 3148,
	2825, 3024, 2379, 2041, 3025, 1473, 3186, 1474, 1475, 2916,
	1473, 1077, 1474, 1475, 1473, 3038, 1474, 1475, 1069, 2399,
	2365, 2847, 2821, 3055, 1473, 1076, 1474, 1475, 3901, 3221,
	3535, 3202, 1473, 3204, 1474, 1475, 1473, 3155, 1474, 1475,
	2870, 3207, 3166, 3200, 3157, 2222, 2893, 2896, 2897, 2898,
	2894, 4006, 2895, 2899, 3731, 2969, 1476, 1473, 2408, 1474,
	1475, 4084, 2926, 1476, 2316, 1767, 2316, 2314, 1476, 2314,
	3495, 2642, 1476, 2820, 3128, 2160, 1516, 2407, 2819, 1473,
	3697, 1474, 1475, 2080, 3220, 1476, 83, 751, 750, 2408,
	2408, 2408, 2408, 2408, 748, 1476, 2326, 2849, 2881, 1480,
	2486, 1479, 3138, 3139, 3140, 3141, 3142, 3156, 959, 3158,
	2408, 2836, 1770, 2408, 2892, 2890, 2889, 2584, 2328, 3165,
	3198, 3225, 2415, 3561, 3557, 2305, 2306, 2307, 2308, 2309,
	1473, 4126, 1474, 1475, 2409, 1473, 3183, 1474, 1475, 1476,
	2405, 2856, 2330, 3177, 910, 2333, 2334, 3195, 1476, 2818,
	909, 760, 752, 742, 972, 3191, 2817, 3196, 3194, 1476,
	908, 2816, 2410, 907, 3335, 2807, 3336, 2999, 2002, 1476,
	3350, 3001, 3210, 3211, 2927, 3346, 3325, 1457, 2806, 1734,
	3224, 2351, 1042, 1043, 3227, 3228, 3333, 3230, 2805, 3226,
	1041, 3238, 3229, 2410, 2410, 2410, 2410, 2410, 1737, 3244,
	2373, 3246, 3245, 3178, 3180, 3182, 1473, 1098, 1474, 1475,
	3252, 3374, 4031, 1473, 2410, 1474, 1475, 2410, 1473, 2610,
	1474, 1475, 1473, 3403, 1474, 1475, 1733, 3285, 3284, 3283,
	4038, 3316, 2804, 3625, 3297, 1473, 2975, 1474, 1475, 2502,
	65, 2801, 42, 3286, 3287, 1473, 4001, 1474, 1475, 1476,
	3242, 3337, 2796, 4069, 902, 899, 3334, 2474, 3699, 3327,
	3338, 3306, 2789, 1476, 3700, 3701, 3151, 3344, 3152, 4051,
	1476, 2893, 2896, 2897, 2898, 2894, 4052, 2895, 2899, 898,
	4053, 3559, 3560, 3216, 2217, 1451, 1448, 4147, 3216, 1473,
	2055, 1474, 1475, 3365, 3362, 3364, 92, 34, 1473, 33,
	1474, 1475, 1476, 1739, 32, 3372, 31, 30, 24, 1473,
	23, 1474, 1475, 22, 21, 20, 3382, 1747, 27, 1473,
	1740, 1474, 1475, 17, 19, 18, 16, 3319, 3398, 3399,
	3400, 3401, 3402, 3379, 3380, 4169, 3381, 4214, 120, 3383,
	51, 3385, 2788, 3387, 48, 2370, 2371, 1746, 1744, 1745,
	1741, 46, 1742, 128, 127, 49, 2787, 45, 1212, 43,
	1529, 29, 28, 2786, 1529, 15, 14, 13, 12, 11,
	10, 9, 37, 36, 3307, 1743, 35, 26, 25, 2629,
	3520, 38, 3522, 2634, 4, 2962, 2504, 3490, 0, 0,
	0, 0, 0, 0, 3494, 2785, 0, 0, 0, 1473,
	3373, 1474, 1475, 0, 0, 0, 2637, 0, 2638, 0,
	0, 0, 0, 1473, 2646, 1474, 1475, 0, 2648, 2649,
	1473, 0, 1474, 1475, 0, 0, 0, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 0, 2666, 0,
	0, 0, 3219, 0, 2408, 0, 0, 0, 3525, 3521,
	0, 3523, 1473, 1476, 1474, 1475, 0, 3573, 0, 1476,
	0, 2672, 2673, 2674, 2675, 0, 2677, 2678, 0, 2680,
	3532, 3539, 0, 2682, 0, 1476, 0, 2687, 2688, 3544,
	2689, 1476, 0, 2692, 2693, 2695, 2697, 2698, 2699, 2700,
	2701, 2702, 2704, 2706, 2707, 2708, 2710, 3563, 2712, 2713,
	2715, 2717, 2719, 2721, 2723, 2725, 2727, 2729, 2731, 2733,
	2735, 2737, 2739, 2741, 2743, 2745, 2747, 2749, 2750, 2751,
	3566, 2753, 3337, 2755, 3328, 2757, 2758, 3334, 2760, 2762,
	2764, 3338, 3574, 3568, 2767, 3527, 0, 740, 2771, 3590,
	0, 3592, 2776, 2777, 2778, 2779, 2784, 3497, 2410, 3499,
	3500, 3501, 2783, 0, 0, 2790, 2791, 2792, 2793, 2794,
	2795, 3635, 3636, 2799, 2800, 3584, 3585, 0, 2782, 3556,
	0, 2802, 3367, 3368, 2781, 1476, 2808, 0, 0, 0,
	1020, 2811, 2812, 2813, 2814, 2815, 1021, 0, 3569, 3570,
	0, 0, 2822, 2823, 0, 2824, 2123, 0, 2827, 2829,
	2379, 0, 2831, 1473, 0, 1474, 1475, 0, 0, 1473,
	0, 1474, 1475, 2844, 0, 0, 0, 3618, 0, 0,
	0, 3622, 3623, 3624, 1476, 1473, 3637, 1474, 1475, 0,
	0, 1473, 0, 1474, 1475, 0, 1476, 0, 2650, 0,
	0, 0, 1061, 0, 3653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1476, 2665, 0, 0, 1476, 0,
	0, 0, 0, 1476, 0, 0, 0, 1476, 2775, 0,
	0, 1476, 3664, 0, 0, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 2774, 0, 3715,
	0, 1476, 3722, 0, 3724, 1473, 0, 1474, 1475, 2773,
	0, 0, 0, 0, 0, 1476, 0, 3695, 0, 0,
	3705, 0, 3706, 3707, 3708, 1058, 3658, 2770, 0, 3220,
	0, 2769, 83, 0, 3220, 3725, 2768, 0, 0, 0,
	2766, 0, 0, 3166, 2759, 0, 0, 0, 0, 0,
	0, 0, 0, 1476, 1473, 0, 1474, 1475, 0, 0,
	2124, 0, 1476, 0, 2122, 0, 1473, 3726, 1474, 1475,
	3736, 0, 3748, 3735, 0, 3746, 0, 3756, 3743, 0,
	1476, 1035, 0, 3752, 1473, 3745, 1474, 1475, 1473, 0,
	1474, 1475, 0, 1473, 2756, 1474, 1475, 1473, 3907, 1474,
	1475, 1473, 0, 1474, 1475, 0, 3759, 0, 2754, 0,
	2843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3614, 3615, 0, 0, 0, 0, 40, 0, 0, 3899,
	3898, 0, 0, 0, 0, 0, 2752, 0, 0, 0,
	3914, 1473, 3926, 1474, 1475, 2711, 0, 3918, 3919, 0,
	0, 0, 0, 0, 3897, 1473, 0, 1474, 1475, 0,
	0, 0, 3966, 2691, 3965, 0, 0, 0, 3750, 0,
	3723, 3066, 3067, 3068, 3069, 3070, 0, 2124, 0, 0,
	0, 2122, 3757, 0, 0, 0, 0, 0, 3909, 3910,
	3911, 3085, 0, 1473, 3969, 1474, 1475, 0, 0, 0,
	0, 0, 1473, 0, 1474, 1475, 0, 0, 0, 0,
	0, 3972, 1035, 0, 3970, 3975, 3216, 4014, 3220, 0,
	1473, 0, 1474, 1475, 0, 0, 0, 0, 0, 0,
	0, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1667, 1668, 1669, 1670, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 4015, 3989, 1058, 4018, 3999, 3998, 1476, 0,
	3995, 0, 3997, 0, 0, 3056, 4032, 3219, 0, 0,
	0, 0, 3219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 0, 0, 0, 1476, 0,
	0, 0, 0, 0, 1476, 1739, 3222, 0, 0, 1476,
	0, 0, 0, 1476, 0, 0, 0, 0, 4017, 1747,
	0, 0, 1740, 0, 3240, 4034, 4037, 3902, 0, 0,
	0, 1476, 0, 0, 4039, 0, 0, 1476, 0, 0,
	0, 0, 0, 0, 0, 0, 3906, 1735, 1736, 1746,
	1744, 1745, 1741, 0, 1742, 0, 0, 0, 0, 0,
	0, 2690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 0, 4057,
	0, 0, 4058, 0, 0, 0, 0, 0, 0, 0,
	0, 2686, 4082, 0, 0, 0, 83, 2684, 40, 0,
	0, 0, 2676, 0, 4067, 0, 2647, 3130, 0, 3132,
	0, 0, 0, 0, 0, 0, 0, 4076, 1473, 0,
	1474, 1475, 0, 4087, 2641, 3143, 3144, 3145, 3146, 0,
	2636, 0, 4090, 4098, 4095, 4092, 4085, 4091, 0, 0,
	0, 4089, 3926, 4101, 4094, 4112, 4093, 0, 1473, 1477,
	1474, 1475, 3371, 0, 1473, 0, 1474, 1475, 4120, 1473,
	0, 1474, 1475, 1473, 0, 1474, 1475, 0, 0, 0,
	4019, 4143, 4133, 4138, 3388, 3389, 3219, 3390, 3392, 3394,
	1535, 1473, 4125, 1474, 1475, 0, 0, 1473, 4151, 1474,
	1475, 0, 0, 4164, 4153, 4167, 0, 0, 0, 0,
	40, 4112, 0, 4163, 1812, 3407, 0, 0, 4168, 0,
	3410, 0, 3412, 3413, 3414, 3416, 3417, 3418, 3419, 3420,
	3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 3430, 3432,
	3434, 3436, 3438, 3440, 3442, 3444, 3446, 3448, 3450, 3452,
	3454, 3456, 3458, 3460, 3461, 3463, 3464, 3465, 3467, 4196,
	4198, 3469, 2124, 3471, 3472, 3473, 2122, 4194, 3477, 3478,
	3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 4197,
	4200, 4208, 4187, 4193, 2002, 4216, 4183, 3493, 4112, 4184,
	4222, 3498, 4224, 4078, 3216, 3502, 3503, 0, 3504, 3506,
	0, 3509, 3511, 0, 3513, 3514, 3515, 3516, 0, 0,
	0, 0, 0, 4232, 3524, 3966, 4233, 4234, 0, 4023,
	2124, 0, 0, 0, 2122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4231, 0, 0,
	0, 0, 0, 0, 4030, 0, 0, 0, 0, 0,
	0, 3550, 3551, 4042, 0, 3555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1494, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4159, 0, 82, 0, 0, 84, 0, 0, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1503, 1502, 1504, 1505,
	0, 0, 88, 0, 0, 0, 44, 72, 73, 0,
	70, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 1813, 0, 0, 0, 0,
	3629, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3648, 0, 0, 3652, 0,
	0, 0, 0, 0, 0, 1849, 79, 0, 0, 0,
	1826, 1829, 1830, 1831, 1832, 1833, 1834, 0, 1835, 1836,
	1838, 1839, 1837, 1840, 1841, 1814, 1815, 1816, 1817, 1797,
	1798, 1827, 3665, 1800, 0, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 0, 0, 1810, 1818, 1819, 1820,
	1821, 0, 1822, 1823, 1824, 1825, 0, 0, 1811, 1711,
	2153, 4181, 0, 1718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3688, 0, 0, 0,
	0, 47, 50, 53, 52, 55, 0, 69, 0, 3696,
	78, 75, 0, 0, 0, 0, 3703, 0, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 57, 87, 86, 0, 1025, 67,
	68, 54, 0, 0, 0, 0, 0, 76, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2145,
	2134, 2135, 2136, 2137, 2147, 2138, 2139, 2140, 2152, 2148,
	2141, 2142, 2149, 2150, 2151, 2143, 2144, 2146, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 60, 0, 61, 62, 63, 64, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3915, 0, 0, 0,
	0, 0, 0, 0, 0, 3922, 0, 56, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3932, 3933, 3934, 0, 3936,
	0, 3937, 3938, 0, 0, 0, 0, 3941, 3942, 3943,
	3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953,
	3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3686,
	3964, 3967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3976, 3977, 3978, 3979,
	3980, 3982, 3983, 3985, 3987, 3988, 3990, 0, 0, 0,
	3994, 0, 0, 0, 3996, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4022,
	2075, 2076, 2077, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2130, 2131, 0, 0, 0, 0, 2154, 0, 0,
	2158, 2159, 0, 0, 0, 2164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	0, 2187, 0, 0, 0, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2218, 0, 2223, 0, 2225, 2226, 2227,
	0, 2229, 2230, 2231, 0, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 66, 0, 0, 0, 4005, 2310,
	0, 2312, 0, 2319, 2320, 2321, 2322, 2323, 2324, 0,
	0, 0, 0, 0, 0, 0, 4047, 0, 0, 0,
	0, 0, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	0, 2344, 2345, 2346, 2347, 2348, 0, 0, 0, 0,
	4062, 0, 0, 0, 0, 0, 4065, 0, 4066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 1812, 0, 0,
	0, 4081, 2376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 148, 0,
	0, 0, 0, 0, 0, 0, 4106, 4107, 0, 0,
	0, 0, 169, 2393, 2394, 0, 0, 0, 0, 0,
	4114, 4116, 4118, 0, 0, 0, 0, 0, 0, 0,
	2427, 0, 0, 0, 0, 0, 0, 0, 4124, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 4146,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 1213, 167, 1219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1711, 4165, 0, 0,
	0, 0, 2470, 0, 0, 0, 955, 135, 136, 158,
	157, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4188, 4190, 4192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 1447, 0,
	0, 0, 4046, 0, 0, 0, 0, 0, 192, 0,
	4056, 192, 0, 187, 4213, 726, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 2968, 0, 0, 0, 0,
	0, 192, 4225, 4226, 0, 0, 0, 126, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 133, 155, 140, 132, 0, 153,
	154, 1711, 0, 732, 192, 732, 170, 0, 1813, 0,
	0, 0, 0, 0, 0, 176, 141, 159, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 0, 0,
	144, 142, 137, 138, 139, 143, 0, 0, 0, 0,
	0, 0, 134, 166, 0, 0, 167, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 1872,
	158, 157, 186, 1826, 1829, 1830, 1831, 1832, 1833, 1834,
	0, 1835, 1836, 1838, 1839, 1837, 1840, 1841, 1814, 1815,
	1816, 1817, 1797, 1798, 1827, 0, 1800, 0, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 0, 0, 1810,
	1818, 1819, 1820, 1821, 0, 1822, 1823, 1824, 1825, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 1873, 155, 0, 1870, 0,
	153, 154, 0, 0, 0, 0, 1020, 170, 0, 2318,
	0, 0, 1021, 0, 0, 0, 176, 0, 0, 0,
	2645, 0, 2123, 0, 0, 0, 0, 0, 0, 0,
	2651, 2652, 2653, 2654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 0, 161, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 2014, 0, 1769, 0, 0, 0, 0, 2018, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 168, 165, 171, 172, 173, 175,
	177, 178, 179, 180, 0, 0, 0, 0, 0, 181,
	183, 184, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 192,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 732, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	3031, 0, 2068, 0, 163, 168, 165, 171, 172, 173,
	175, 177, 178, 179, 180, 0, 0, 0, 0, 0,
	181, 183, 184, 185, 0, 0, 0, 3057, 3058, 3059,
	0, 0, 3061, 0, 0, 3063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3082, 3083, 3084, 0, 0,
	0, 0, 0, 0, 3089, 0, 0, 0, 0, 3091,
	0, 0, 3093, 3094, 3095, 0, 0, 0, 3096, 3097,
	0, 0, 3098, 0, 3099, 0, 0, 0, 0, 0,
	0, 3100, 0, 3101, 0, 0, 0, 3102, 0, 3103,
	0, 0, 3104, 0, 3105, 0, 3106, 0, 3107, 0,
	3108, 0, 3109, 0, 3110, 0, 3111, 0, 3112, 0,
	3113, 0, 3114, 0, 3115, 0, 3116, 0, 3117, 0,
	3118, 0, 3119, 0, 3120, 0, 3121, 0, 0, 0,
	3122, 0, 3123, 0, 3124, 0, 0, 3125, 0, 3126,
	0, 3127, 0, 2282, 3129, 0, 0, 3131, 0, 0,
	3133, 3134, 3135, 3136, 0, 0, 0, 0, 3137, 2282,
	2282, 2282, 2282, 2282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3147, 0, 0, 0, 0, 0,
	0, 0, 3160, 0, 0, 3164, 0, 0, 0, 0,
	0, 0, 1521, 0, 3167, 3168, 3169, 3170, 3171, 3172,
	0, 0, 0, 3173, 3174, 0, 3175, 0, 3176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 732, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3241, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 2401, 0, 0, 2068, 0,
	0, 0, 0, 192, 0, 0, 0, 732, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 3303, 0, 0, 0, 0, 126,
	732, 148, 732, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 1521, 732, 169, 0, 732, 732, 732,
	732, 0, 732, 0, 732, 732, 0, 732, 732, 732,
	732, 732, 732, 0, 0, 0, 0, 0, 0, 0,
	1521, 732, 732, 1521, 732, 1521, 192, 732, 0, 159,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 167, 732,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	3396, 0, 732, 0, 0, 732, 0, 192, 192, 0,
	1871, 1872, 158, 157, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 3411, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 2560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2580, 2581, 0, 0,
	2585, 0, 0, 0, 0, 954, 0, 0, 0, 0,
	0, 0, 2590, 0, 0, 0, 0, 0, 0, 2593,
	0, 0, 0, 0, 0, 0, 152, 1873, 155, 0,
	1870, 0, 153, 154, 0, 0, 0, 0, 0, 170,
	0, 3530, 0, 0, 0, 2596, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 731, 0, 0, 0, 0, 732,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 3610, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 3634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 3654,
	0, 3655, 0, 3656, 0, 3657, 0, 0, 0, 0,
	0, 0, 0, 3660, 3661, 0, 0, 0, 0, 0,
	0, 0, 0, 3666, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 3667, 0, 3668,
	0, 3669, 0, 3670, 0, 3671, 0, 3672, 0, 3673,
	0, 3674, 0, 3675, 0, 3676, 0, 3677, 0, 3678,
	0, 3679, 0, 3680, 0, 3681, 0, 3682, 0, 0,
	3683, 0, 0, 0, 3684, 0, 3685, 0, 0, 0,
	0, 0, 3687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3704, 0, 0, 0, 0, 0,
	0, 0, 0, 3709, 0, 3710, 3711, 0, 3712, 0,
	3713, 0, 0, 0, 0, 3714, 0, 0, 0, 2329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3753, 0, 0,
	3755, 0, 0, 0, 192, 162, 0, 2908, 0, 0,
	732, 3758, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 192, 0,
	192, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 2956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 168, 165, 171,
	172, 173, 175, 177, 178, 179, 180, 0, 0, 0,
	0, 0, 181, 183, 184, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	732, 732, 732, 192, 0, 0, 0, 0, 3004, 3005,
	3006, 3007, 3008, 3009, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 4004, 732, 732, 0,
	0, 732, 0, 732, 0, 0, 2068, 3019, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3027, 911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 732,
	0, 0, 0, 732, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 730, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	192, 0, 0, 192, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 731, 1432, 731, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 1096, 0, 0, 0, 0, 0, 0, 192, 731,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 0, 0, 1020, 0, 0, 0, 1520, 960,
	1021, 973, 974, 975, 961, 0, 0, 962, 963, 0,
	964, 0, 0, 4045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 976, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 2329, 0, 0, 4059,
	0, 0, 4060, 0, 4061, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3339, 3340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4144, 0, 0, 0, 0, 0,
	0, 0, 3341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3293, 0, 4160, 0, 4161, 0, 4162, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3363, 3342, 3343, 3366, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 731, 0, 0, 4211, 0, 4212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 731, 925, 0, 0,
	192, 0, 0, 929, 0, 0, 0, 926, 927, 0,
	0, 0, 928, 930, 0, 0, 0, 0, 0, 731,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 1520, 731, 0, 0, 731, 731, 731, 731,
	0, 731, 0, 731, 731, 0, 731, 731, 731, 731,
	731, 731, 0, 0, 0, 0, 0, 0, 0, 1520,
	731, 731, 1520, 731, 1520, 0, 731, 0, 0, 732,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	3526, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 731, 0,
	0, 0, 0, 732, 0, 0, 0, 732, 732, 0,
	0, 731, 732, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 192, 192, 192, 192, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 3588, 0, 0, 192,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3603, 0, 3604, 3605,
	3606, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 1277, 1277, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 731,
	0, 0, 0, 0, 190, 0, 0, 674, 0, 0,
	0, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 0,
	674, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 2132, 0, 0, 0, 0, 0, 732,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 732, 0,
	0, 2329, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 732, 732, 1521, 192, 192, 192, 192, 192,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 192,
	192, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 1722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 0,
	1521, 0, 0, 0, 0, 732, 0, 0, 731, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 192, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 1089, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 1888, 0, 0, 0,
	1890, 0, 0, 1893, 1894, 1896, 1896, 0, 1896, 0,
	1896, 1896, 731, 1905, 1896, 1896, 1896, 1896, 1896, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 1926, 0,
	1089, 0, 0, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1995, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 731,
	731, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	731, 0, 0, 192, 0, 0, 731, 731, 0, 0,
	731, 0, 731, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4043, 731, 0, 0, 0, 0, 731, 0,
	192, 0, 731, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 192, 192, 192, 0, 0, 0, 0, 0, 0,
	0, 732, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 1277, 0, 0, 0,
	732, 732, 732, 732, 0, 0, 0, 0, 0, 731,
	2056, 0, 0, 674, 0, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2118, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 0, 1520, 0, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 732,
	0, 192, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 192, 0, 0, 732,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2367, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2383,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 674, 0, 0, 732,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2920, 0, 0, 0, 1048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 674, 1096,
	0, 0, 0, 0, 0, 0, 2491, 2492, 2493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 1089, 731, 0,
	0, 0, 0, 1096, 1888, 0, 0, 1888, 0, 1888,
	0, 0, 0, 0, 0, 2524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	0, 0, 731, 0, 0, 0, 731, 731, 0, 1522,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 2118, 0, 1520, 731, 2118,
	2118, 0, 0, 0, 0, 0, 1522, 0, 0, 1522,
	0, 1522, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 2001, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 192, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 674, 0, 731,
	0, 0, 0, 0, 0, 0, 2027, 2028, 674, 674,
	674, 674, 674, 674, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 732, 0, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 2329, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 192, 731, 0,
	0, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 732, 0, 0, 0, 731, 0, 0,
	731, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1520, 0,
	0, 731, 731, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 1520,
	0, 0, 0, 0, 731, 2850, 0, 0, 0, 2862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3370, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2383, 0, 0, 0, 0, 2377, 0, 2976,
	0, 0, 0, 1888, 1888, 0, 0, 0, 2981, 0,
	0, 0, 0, 0, 0, 0, 1048, 0, 0, 0,
	0, 0, 0, 0, 731, 2992, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 0, 674, 2417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 2494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3578, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	731, 731, 731, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 674, 0, 0, 674,
	0, 2587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 3149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 0, 0, 0, 0, 0,
	0, 2598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2862, 0, 0, 1277, 0, 0,
	3199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3223, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 2001, 0, 0, 0, 731, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 731, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 0, 0,
	0, 2383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 731, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	731, 1843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 0, 0, 0, 0, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2383, 2383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 674, 674, 674,
	674, 674, 674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3642, 3643, 3644, 3645,
	0, 0, 0, 0, 0, 674, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	731, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 3720, 0, 3720, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3749, 0, 3751, 0, 0,
	731, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3917, 0, 0, 0, 0, 0, 0, 0, 2377, 0,
	674, 0, 0, 1277, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 0,
	1522, 674, 674, 674, 674, 674, 0, 0, 0, 0,
	0, 0, 0, 3239, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 0, 0, 674, 3247, 2001, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3720, 0,
	0, 0, 0, 0, 0, 3720, 0, 3720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 2383, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 674, 3780, 3782, 3781, 3847, 3848, 3849,
	3850, 3851, 3852, 3853, 3783, 3784, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2383, 0, 4079,
	0, 0, 0, 0, 0, 0, 674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1277, 0, 0, 3788, 0, 0,
	0, 0, 0, 0, 0, 674, 0, 0, 0, 0,
	0, 0, 3796, 3797, 0, 0, 3872, 3871, 3870, 0,
	0, 3868, 3869, 3867, 0, 674, 0, 674, 674, 674,
	0, 0, 0, 0, 0, 4128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4071, 0, 0, 3873, 925, 0,
	778, 779, 3874, 3875, 929, 3876, 781, 782, 926, 927,
	0, 776, 780, 928, 930, 0, 0, 0, 2383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 0, 4128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3777, 3778, 3779, 3785, 3786, 3787, 3798, 3845, 3846, 3854,
	3856, 881, 3855, 3857, 3858, 3859, 3862, 3863, 3864, 3865,
	3860, 3861, 3866, 3760, 3764, 3761, 3762, 3763, 3775, 3765,
	3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3776,
	3877, 3878, 3879, 3880, 3881, 3882, 3791, 3795, 3794, 3792,
	3793, 3789, 3790, 3817, 3816, 3818, 3819, 3820, 3821, 3822,
	3823, 3825, 3824, 3826, 3827, 3828, 3829, 3830, 3831, 3799,
	3800, 3803, 3804, 3802, 3801, 3805, 3814, 3815, 3806, 3807,
	3808, 3809, 3810, 3811, 3813, 3812, 3832, 3833, 3834, 3835,
	3836, 3838, 3837, 3841, 3842, 3840, 3839, 3844, 3843, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 931, 0, 932, 0, 0, 936, 0, 0,
	0, 938, 937, 0, 939, 901, 900, 1947, 0, 933,
	934, 0, 935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3883, 3884, 3885,
	3886, 3887, 3888, 3889, 3890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1947, 393, 0, 0, 0, 0,
	0, 0, 1415, 0, 1399, 525, 0, 1341, 1418, 1309,
	1328, 1428, 1331, 1334, 1378, 1287, 1356, 413, 1325, 1313,
	1282, 1320, 1283, 1311, 1343, 267, 1308, 1401, 1360, 1417,
	363, 264, 1289, 1280, 201, 502, 1314, 427, 1330, 200,
	1380, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 1424, 367, 1366, 0, 494,
	398, 0, 0, 2001, 1405, 1404, 1335, 1345, 1407, 1354,
	1392, 1340, 1379, 1297, 1365, 1419, 1326, 1375, 1420, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	4102, 504, 956, 0, 0, 0, 0, 4103, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 1322, 1372, 606, 1414, 1323, 1374, 262, 318, 269,
	261, 577, 1425, 1406, 1286, 1353, 1413, 1348, 593, 0,
	0, 226, 1416, 1347, 0, 1377, 0, 1431, 1281, 1368,
	0, 1284, 1288, 1427, 1411, 1317, 272, 0, 0, 0,
	0, 0, 0, 0, 1344, 1355, 1389, 1393, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 1364,
	0, 0, 0, 1293, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 1296, 0, 1316, 1390, 0, 1279, 294, 1290,
	399, 254, 0, 450, 1397, 1410, 1339, 626, 1412, 1337,
	1336, 1384, 1294, 1403, 1329, 362, 1292, 327, 194, 222,
	0, 1327, 409, 458, 470, 1402, 1312, 1321, 250, 1319,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	1363, 1382, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 1291, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 1307, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 1398, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 1387, 1430, 422, 469, 237,
	603, 493, 196, 1301, 1306, 1299, 0, 251, 252, 1369,
	572, 1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 1391, 1295,
	0, 1304, 1305, 395, 1400, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 1362, 193, 218, 365, 1426, 451,
	285, 647, 615, 481, 610, 203, 220, 1298, 259, 1310,
	1318, 0, 1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352,
	1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 1361, 1367,
	378, 278, 302, 317, 1376, 614, 499, 224, 463, 287,
	248, 1394, 1396, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 1357, 1385, 373,
	573, 574, 313, 393, 0, 0, 0, 0, 0, 0,
	1415, 0, 1399, 525, 0, 1341, 1418, 1309, 1328, 1428,
	1331, 1334, 1378, 1287, 1356, 413, 1325, 1313, 1282, 1320,
	1283, 1311, 1343, 267, 1308, 1401, 1360, 1417, 363, 264,
	1289, 1280, 201, 502, 1314, 427, 1330, 200, 1380, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 1424, 367, 1366, 0, 494, 398, 0,
	0, 0, 1405, 1404, 1335, 1345, 1407, 1354, 1392, 1340,
	1379, 1297, 1365, 1419, 1326, 1375, 1420, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 0, 504,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 1322,
	1372, 606, 1414, 1323, 1374, 262, 318, 269, 261, 577,
	1425, 1406, 1286, 1353, 1413, 1348, 593, 0, 0, 226,
	1416, 1347, 0, 1377, 0, 1431, 1281, 1368, 0, 1284,
	1288, 1427, 1411, 1317, 272, 0, 0, 0, 0, 0,
	0, 0, 1344, 1355, 1389, 1393, 1338, 0, 0, 0,
	0, 0, 0, 3730, 0, 1315, 0, 1364, 0, 0,
	0, 1293, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	1296, 0, 1316, 1390, 0, 1279, 294, 1290, 399, 254,
	0, 450, 1397, 1410, 1339, 626, 1412, 1337, 1336, 1384,
	1294, 1403, 1329, 362, 1292, 327, 194, 222, 0, 1327,
	409, 458, 470, 1402, 1312, 1321, 250, 1319, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 1363, 1382,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 1291, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 1307, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 1398, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 1387, 1430, 422, 469, 237, 603, 493,
	196, 1301, 1306, 1299, 0, 251, 252, 1369, 572, 1302,
	1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 1391, 1295, 0, 1304,
	1305, 395, 1400, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 1362, 193, 218, 365, 1426, 451, 285, 647,
	615, 481, 610, 203, 220, 1298, 259, 1310, 1318, 0,
	1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371,
	1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 1361, 1367, 378, 278,
	302, 317, 1376, 614, 499, 224, 463, 287, 248, 1394,
	1396, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 1357, 1385, 373, 573, 574,
	313, 393, 0, 0, 0, 0, 0, 0, 1415, 0,
	1399, 525, 0, 1341, 1418, 1309, 1328, 1428, 1331, 1334,
	1378, 1287, 1356, 413, 1325, 1313, 1282, 1320, 1283, 1311,
	1343, 267, 1308, 1401, 1360, 1417, 363, 264, 1289, 1280,
	201, 502, 1314, 427, 1330, 200, 1380, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 1424, 367, 1366, 0, 494, 398, 0, 0, 0,
	1405, 1404, 1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297,
	1365, 1419, 1326, 1375, 1420, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 1322, 1372, 606,
	1414, 1323, 1374, 262, 318, 269, 261, 577, 1425, 1406,
	1286, 1353, 1413, 1348, 593, 0, 0, 226, 1416, 1347,
	0, 1377, 0, 1431, 1281, 1368, 0, 1284, 1288, 1427,
	1411, 1317, 272, 0, 0, 0, 0, 0, 0, 0,
	1344, 1355, 1389, 1393, 1338, 0, 0, 0, 0, 0,
	0, 3248, 0, 1315, 0, 1364, 0, 0, 0, 1293,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 1296, 0,
	1316, 1390, 0, 1279, 294, 1290, 399, 254, 0, 450,
	1397, 1410, 1339, 626, 1412, 1337, 1336, 1384, 1294, 1403,
	1329, 362, 1292, 327, 194, 222, 0, 1327, 409, 458,
	470, 1402, 1312, 1321, 250, 1319, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 1363, 1382, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 1291, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 1307,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 1398, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 1387, 1430, 422, 469, 237, 603, 493, 196, 1301,
	1306, 1299, 0, 251, 252, 1369, 572, 1302, 1300, 1358,
	1359, 1303, 1421, 1422, 1423, 1408, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 1391, 1295, 0, 1304, 1305, 395,
	1400, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	1362, 193, 218, 365, 1426, 451, 285, 647, 615, 481,
	610, 203, 220, 1298, 259, 1310, 1318, 0, 1324, 1332,
	1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381,
	1383, 1386, 1388, 1395, 1409, 1429, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 1361, 1367, 378, 278, 302, 317,
	1376, 614, 499, 224, 463, 287, 248, 1394, 1396, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 1357, 1385, 373, 573, 574, 313, 393,
	0, 0, 0, 0, 0, 0, 1415, 0, 1399, 525,
	0, 1341, 1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287,
	1356, 413, 1325, 1313, 1282, 1320, 1283, 1311, 1343, 267,
	1308, 1401, 1360, 1417, 363, 264, 1289, 1280, 201, 502,
	1314, 427, 1330, 200, 1380, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 1424,
	367, 1366, 0, 494, 398, 0, 0, 0, 1405, 1404,
	1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419,
	1326, 1375, 1420, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 0, 504, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 1322, 1372, 606, 1414, 1323,
	1374, 262, 318, 269, 261, 577, 1425, 1406, 1286, 1353,
	1413, 1348, 593, 0, 0, 226, 1416, 1347, 0, 1377,
	0, 1431, 1281, 1368, 0, 1284, 1288, 1427, 1411, 1317,
	272, 0, 0, 0, 0, 0, 0, 0, 1344, 1355,
	1389, 1393, 1338, 0, 0, 0, 0, 0, 0, 3197,
	0, 1315, 0, 1364, 0, 0, 0, 1293, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 0, 0, 0, 1296, 0, 1316, 1390,
	0, 1279, 294, 1290, 399, 254, 0, 450, 1397, 1410,
	1339, 626, 1412, 1337, 1336, 1384, 1294, 1403, 1329, 362,
	1292, 327, 194, 222, 0, 1327, 409, 458, 470, 1402,
	1312, 1321, 250, 1319, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 1363, 1382, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 1291,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 1307, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	1398, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 1387,
	1430, 422, 469, 237, 603, 493, 196, 1301, 1306, 1299,
	0, 251, 252, 1369, 572, 1302, 1300, 1358, 1359, 1303,
	1421, 1422, 1423, 1408, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 1391, 1295, 0, 1304, 1305, 395, 1400, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 1362, 193,
	218, 365, 1426, 451, 285, 647, 615, 481, 610, 203,
	220, 1298, 259, 1310, 1318, 0, 1324, 1332, 1333, 1346,
	1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386,
	1388, 1395, 1409, 1429, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 1361, 1367, 378, 278, 302, 317, 1376, 614,
	499, 224, 463, 287, 248, 1394, 1396, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 1357, 1385, 373, 573, 574, 313, 393, 0, 0,
	0, 0, 0, 0, 1415, 0, 1399, 525, 0, 1341,
	1418, 1309, 1328, 1428, 1331, 1334, 1378, 1287, 1356, 413,
	1325, 1313, 1282, 1320, 1283, 1311, 1343, 267, 1308, 1401,
	1360, 1417, 363, 264, 1289, 1280, 201, 502, 1314, 427,
	1330, 200, 1380, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 1424, 367, 1366,
	0, 494, 398, 0, 0, 0, 1405, 1404, 1335, 1345,
	1407, 1354, 1392, 1340, 1379, 1297, 1365, 1419, 1326, 1375,
	1420, 320, 245, 322, 199, 410, 495, 283, 0, 91,
	0, 0, 0, 504, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 1322, 1372, 606, 1414, 1323, 1374, 262,
	318, 269, 261, 577, 1425, 1406, 1286, 1353, 1413, 1348,
	593, 0, 0, 226, 1416, 1347, 0, 1377, 0, 1431,
	1281, 1368, 0, 1284, 1288, 1427, 1411, 1317, 272, 0,
	0, 0, 0, 0, 0, 0, 1344, 1355, 1389, 1393,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 1364, 0, 0, 0, 1293, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 0, 0, 0, 1296, 0, 1316, 1390, 0, 1279,
	294, 1290, 399, 254, 0, 450, 1397, 1410, 1339, 626,
	1412, 1337, 1336, 1384, 1294, 1403, 1329, 362, 1292, 327,
	194, 222, 0, 1327, 409, 458, 470, 1402, 1312, 1321,
	250, 1319, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 1363, 1382, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 1291, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 1307, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 1398, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 1387, 1430, 422,
	469, 237, 603, 493, 196, 1301, 1306, 1299, 0, 251,
	252, 1369, 572, 1302, 1300, 1358, 1359, 1303, 1421, 1422,
	1423, 1408, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1391, 1295, 0, 1304, 1305, 395, 1400, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1362, 193, 218, 365,
	1426, 451, 285, 647, 615, 481, 610, 203, 220, 1298,
	259, 1310, 1318, 0, 1324, 1332, 1333, 1346, 1349, 1350,
	1351, 1352, 1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395,
	1409, 1429, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	1361, 1367, 378, 278, 302, 317, 1376, 614, 499, 224,
	463, 287, 248, 1394, 1396, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 1357,
	1385, 373, 573, 574, 313, 393, 0, 0, 0, 0,
	0, 0, 1415, 0, 1399, 525, 0, 1341, 1418, 1309,
	1328, 1428, 1331, 1334, 1378, 1287, 1356, 413, 1325, 1313,
	1282, 1320, 1283, 1311, 1343, 267, 1308, 1401, 1360, 1417,
	363, 264, 1289, 1280, 201, 502, 1314, 427, 1330, 200,
	1380, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 1424, 367, 1366, 0, 494,
	398, 0, 0, 0, 1405, 1404, 1335, 1345, 1407, 1354,
	1392, 1340, 1379, 1297, 1365, 1419, 1326, 1375, 1420, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 1322, 1372, 606, 1414, 1323, 1374, 262, 318, 269,
	261, 577, 1425, 1406, 1286, 1353, 1413, 1348, 593, 0,
	0, 226, 1416, 1347, 0, 1377, 0, 1431, 1281, 1368,
	0, 1284, 1288, 1427, 1411, 1317, 272, 0, 0, 0,
	0, 0, 0, 0, 1344, 1355, 1389, 1393, 1338, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 1364,
	0, 0, 0, 1293, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 1296, 0, 1316, 1390, 0, 1279, 294, 1290,
	399, 254, 0, 450, 1397, 1410, 1339, 626, 1412, 1337,
	1336, 1384, 1294, 1403, 1329, 362, 1292, 327, 194, 222,
	0, 1327, 409, 458, 470, 1402, 1312, 1321, 250, 1319,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	1363, 1382, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 1291, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 1307, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 1398, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 1387, 1430, 422, 469, 237,
	603, 493, 196, 1301, 1306, 1299, 0, 251, 252, 1369,
	572, 1302, 1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 1391, 1295,
	0, 1304, 1305, 395, 1400, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 1362, 193, 218, 365, 1426, 451,
	285, 647, 615, 481, 610, 203, 220, 1298, 259, 1310,
	1318, 0, 1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352,
	1370, 1371, 1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 1361, 1367,
	378, 278, 302, 317, 1376, 614, 499, 224, 463, 287,
	248, 1394, 1396, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 1357, 1385, 373,
	573, 574, 313, 393, 0, 0, 0, 0, 0, 0,
	1415, 0, 1399, 525, 0, 1341, 1418, 1309, 1328, 1428,
	1331, 1334, 1378, 1287, 1356, 413, 1325, 1313, 1282, 1320,
	1283, 1311, 1343, 267, 1308, 1401, 1360, 1417, 363, 264,
	1289, 1280, 201, 502, 1314, 427, 1330, 200, 1380, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 1424, 367, 1366, 0, 494, 398, 0,
	0, 0, 1405, 1404, 1335, 1345, 1407, 1354, 1392, 1340,
	1379, 1297, 1365, 1419, 1326, 1375, 1420, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 0, 504,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 1322,
	1372, 606, 1414, 1323, 1374, 262, 318, 269, 261, 577,
	1425, 1406, 1286, 1353, 1413, 1348, 593, 0, 0, 226,
	1416, 1347, 0, 1377, 0, 1431, 1281, 1368, 0, 1284,
	1288, 1427, 1411, 1317, 272, 0, 0, 0, 0, 0,
	0, 0, 1344, 1355, 1389, 1393, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 0, 1364, 0, 0,
	0, 1293, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	1296, 0, 1316, 1390, 0, 1279, 294, 1290, 399, 254,
	0, 450, 1397, 1410, 1339, 626, 1412, 1337, 1336, 1384,
	1294, 1403, 1329, 362, 1292, 327, 194, 222, 0, 1327,
	409, 458, 470, 1402, 1312, 1321, 250, 1319, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 1363, 1382,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 1291, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 1307, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 1398, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 1387, 1430, 422, 469, 237, 603, 493,
	196, 1301, 1306, 1299, 0, 251, 252, 1369, 572, 1302,
	1300, 1358, 1359, 1303, 1421, 1422, 1423, 1408, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 1391, 1295, 0, 1304,
	1305, 395, 1400, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 1362, 193, 218, 365, 1426, 451, 285, 647,
	615, 481, 610, 203, 220, 1298, 259, 1310, 1318, 0,
	1324, 1332, 1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371,
	1373, 1381, 1383, 1386, 1388, 1395, 1409, 1429, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 1361, 1367, 378, 278,
	302, 317, 1376, 614, 499, 224, 463, 287, 248, 1394,
	1396, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 1357, 1385, 373, 573, 574,
	313, 393, 0, 0, 0, 0, 0, 0, 1415, 0,
	1399, 525, 0, 1341, 1418, 1309, 1328, 1428, 1331, 1334,
	1378, 1287, 1356, 413, 1325, 1313, 1282, 1320, 1283, 1311,
	1343, 267, 1308, 1401, 1360, 1417, 363, 264, 1289, 1280,
	201, 502, 1314, 427, 1330, 200, 1380, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 1424, 367, 1366, 0, 494, 398, 0, 0, 0,
	1405, 1404, 1335, 1345, 1407, 1354, 1392, 1340, 1379, 1297,
	1365, 1419, 1326, 1375, 1420, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 1322, 1372, 606,
	1414, 1323, 1374, 262, 318, 269, 261, 577, 1425, 1406,
	1286, 1353, 1413, 1348, 593, 0, 0, 226, 1416, 1347,
	0, 1377, 0, 1431, 1281, 1368, 0, 1284, 1288, 1427,
	1411, 1317, 272, 0, 0, 0, 0, 0, 0, 0,
	1344, 1355, 1389, 1393, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 1364, 0, 0, 0, 1293,
	1285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 1296, 0,
	1316, 1390, 0, 1279, 294, 1290, 399, 254, 0, 450,
	1397, 1410, 1339, 626, 1412, 1337, 1336, 1384, 1294, 1403,
	1329, 362, 1292, 327, 194, 222, 0, 1327, 409, 458,
	470, 1402, 1312, 1321, 250, 1319, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 1363, 1382, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 1291, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 1307,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 1398, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 1387, 1430, 422, 469, 237, 603, 493, 196, 1301,
	1306, 1299, 0, 251, 252, 1369, 572, 1302, 1300, 1358,
	1359, 1303, 1421, 1422, 1423, 1408, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 1391, 1295, 0, 1304, 1305, 395,
	1400, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	1362, 193, 218, 365, 1426, 451, 285, 647, 615, 481,
	610, 203, 220, 1298, 259, 1310, 1318, 0, 1324, 1332,
	1333, 1346, 1349, 1350, 1351, 1352, 1370, 1371, 1373, 1381,
	1383, 1386, 1388, 1395, 1409, 1429, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 1361, 1367, 378, 278, 302, 317,
	1376, 614, 499, 224, 463, 287, 248, 1394, 1396, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 1357, 1385, 373, 573, 574, 313, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 761, 0, 0, 0, 267,
	766, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 773,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 91, 0, 0, 1020, 504, 956, 745, 922, 960,
	1021, 973, 974, 975, 961, 0, 235, 962, 963, 242,
	964, 0, 921, 804, 806, 805, 871, 872, 873, 874,
	875, 876, 877, 807, 808, 802, 969, 606, 976, 977,
	0, 262, 318, 269, 261, 577, 0, 0, 2219, 2220,
	2221, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 741, 758, 0, 772, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 756, 0,
	0, 0, 0, 916, 0, 757, 0, 0, 765, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 915, 0,
	0, 626, 0, 0, 913, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 966, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 967, 968, 253, 649, 812, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 820, 821, 277, 304, 897, 896, 895, 303, 305,
	893, 894, 892, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 903, 925, 914, 778,
	779, 904, 905, 929, 906, 781, 782, 926, 927, 775,
	776, 780, 928, 930, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 917, 764, 763, 0, 770, 771, 0, 800,
	801, 803, 809, 810, 811, 822, 869, 870, 878, 880,
	881, 879, 882, 883, 884, 887, 888, 889, 890, 885,
	886, 891, 783, 787, 784, 785, 786, 798, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 799, 940,
	941, 942, 943, 944, 945, 815, 819, 818, 816, 817,
	813, 814, 841, 840, 842, 843, 844, 845, 846, 847,
	849, 848, 850, 851, 852, 853, 854, 855, 823, 824,
	827, 828, 826, 825, 829, 838, 839, 830, 831, 832,
	833, 834, 835, 837, 836, 856, 857, 858, 859, 860,
	862, 861, 865, 866, 864, 863, 868, 867, 762, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 931, 259, 932, 0, 0, 936, 0, 0, 0,
	938, 937, 0, 939, 901, 900, 0, 0, 933, 934,
	0, 935, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 946, 947, 948, 949,
	950, 951, 952, 953, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 971, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 761, 0, 0,
	0, 267, 766, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 773, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 769, 0, 0, 0,
	0, 0, 0, 2425, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 91, 0, 0, 1020, 504, 956, 745,
	922, 960, 1021, 973, 974, 975, 961, 0, 235, 962,
	963, 242, 964, 0, 921, 804, 806, 805, 871, 872,
	873, 874, 875, 876, 877, 807, 808, 802, 969, 606,
	976, 977, 2426, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 741, 758, 0, 772, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	756, 0, 0, 0, 0, 916, 0, 757, 0, 0,
	765, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	915, 0, 0, 626, 0, 0, 913, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 966, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 967, 968, 253, 649, 812, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 820, 821, 277, 304, 897, 896, 895,
	303, 305, 893, 894, 892, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 903, 925,
	914, 778, 779, 904, 905, 929, 906, 781, 782, 926,
	927, 775, 776, 780, 928, 930, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 917, 764, 763, 0, 770, 771,
	0, 800, 801, 803, 809, 810, 811, 822, 869, 870,
	878, 880, 881, 879, 882, 883, 884, 887, 888, 889,
	890, 885, 886, 891, 783, 787, 784, 785, 786, 798,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	799, 940, 941, 942, 943, 944, 945, 815, 819, 818,
	816, 817, 813, 814, 841, 840, 842, 843, 844, 845,
	846, 847, 849, 848, 850, 851, 852, 853, 854, 855,
	823, 824, 827, 828, 826, 825, 829, 838, 839, 830,
	831, 832, 833, 834, 835, 837, 836, 856, 857, 858,
	859, 860, 862, 861, 865, 866, 864, 863, 868, 867,
	762, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 931, 259, 932, 0, 0, 936, 0,
	0, 0, 938, 937, 0, 939, 901, 900, 0, 0,
	933, 934, 0, 935, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 946, 947,
	948, 949, 950, 951, 952, 953, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 971, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 82, 525, 0, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 761,
	0, 0, 0, 267, 766, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 773, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 769, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 91, 0, 0, 1020, 504,
	956, 745, 922, 960, 1021, 973, 974, 975, 961, 0,
	235, 962, 963, 242, 964, 0, 921, 804, 806, 805,
	871, 872, 873, 874, 875, 876, 877, 807, 808, 802,
	969, 606, 976, 977, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 741, 758, 0,
	772, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 756, 0, 0, 0, 0, 916, 0, 757,
	0, 0, 765, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 915, 0, 0, 626, 0, 0, 913, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 966, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 967, 968, 253, 649,
	812, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 820, 821, 277, 304, 897,
	896, 895, 303, 305, 893, 894, 892, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	903, 925, 914, 778, 779, 904, 905, 929, 906, 781,
	782, 926, 927, 775, 776, 780, 928, 930, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 917, 764, 763, 0,
	770, 771, 0, 800, 801, 803, 809, 810, 811, 822,
	869, 870, 878, 880, 881, 879, 882, 883, 884, 887,
	888, 889, 890, 885, 886, 891, 783, 787, 784, 785,
	786, 798, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 799, 940, 941, 942, 943, 944, 945, 815,
	819, 818, 816, 817, 813, 814, 841, 840, 842, 843,
	844, 845, 846, 847, 849, 848, 850, 851, 852, 853,
	854, 855, 823, 824, 827, 828, 826, 825, 829, 838,
	839, 830, 831, 832, 833, 834, 835, 837, 836, 856,
	857, 858, 859, 860, 862, 861, 865, 866, 864, 863,
	868, 867, 762, 193, 218, 365, 90, 451, 285, 647,
	615, 481, 610, 203, 220, 931, 259, 932, 0, 0,
	936, 0, 0, 0, 938, 937, 0, 939, 901, 900,
	0, 0, 933, 934, 0, 935, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	946, 947, 948, 949, 950, 951, 952, 953, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 971,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 761, 0, 0, 0, 267, 766, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 773, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	769, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 91, 0, 0,
	1020, 504, 956, 745, 922, 960, 1021, 973, 974, 975,
	961, 0, 235, 962, 963, 242, 964, 0, 921, 804,
	806, 805, 871, 872, 873, 874, 875, 876, 877, 807,
	808, 802, 969, 606, 976, 977, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 741,
	758, 0, 772, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 756, 0, 0, 0, 0, 916,
	0, 757, 0, 0, 765, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 915, 0, 0, 626, 0, 0,
	913, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 966, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	4088, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 967, 968,
	253, 649, 812, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 820, 821, 277,
	304, 897, 896, 895, 303, 305, 893, 894, 892, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 903, 925, 914, 778, 779, 904, 905, 929,
	906, 781, 782, 926, 927, 775, 776, 780, 928, 930,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 917, 764,
	763, 0, 770, 771, 0, 800, 801, 803, 809, 810,
	811, 822, 869, 870, 878, 880, 881, 879, 882, 883,
	884, 887, 888, 889, 890, 885, 886, 891, 783, 787,
	784, 785, 786, 798, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 799, 940, 941, 942, 943, 944,
	945, 815, 819, 818, 816, 817, 813, 814, 841, 840,
	842, 843, 844, 845, 846, 847, 849, 848, 850, 851,
	852, 853, 854, 855, 823, 824, 827, 828, 826, 825,
	829, 838, 839, 830, 831, 832, 833, 834, 835, 837,
	836, 856, 857, 858, 859, 860, 862, 861, 865, 866,
	864, 863, 868, 867, 762, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 931, 259, 932,
	0, 0, 936, 0, 0, 0, 938, 937, 0, 939,
	901, 900, 0, 0, 933, 934, 0, 935, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 946, 947, 948, 949, 950, 951, 952, 953,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 971, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 761, 0, 0, 0, 267, 766, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 773, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 769, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 91,
	0, 1749, 1020, 504, 956, 745, 922, 960, 1021, 973,
	974, 975, 961, 0, 235, 962, 963, 242, 964, 0,
	921, 804, 806, 805, 871, 872, 873, 874, 875, 876,
	877, 807, 808, 802, 969, 606, 976, 977, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 741, 758, 0, 772, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 756, 0, 0, 0,
	0, 916, 0, 757, 0, 0, 765, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 915, 0, 0, 626,
	0, 0, 913, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	966, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	967, 968, 253, 649, 812, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 820,
	821, 277, 304, 897, 896, 895, 303, 305, 893, 894,
	892, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 903, 925, 914, 778, 779, 904,
	905, 929, 906, 781, 782, 926, 927, 775, 776, 780,
	928, 930, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	917, 764, 763, 0, 770, 771, 0, 800, 801, 803,
	809, 810, 811, 822, 869, 870, 878, 880, 881, 879,
	882, 883, 884, 887, 888, 889, 890, 885, 886, 891,
	783, 787, 784, 785, 786, 798, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 799, 940, 941, 942,
	943, 944, 945, 815, 819, 818, 816, 817, 813, 814,
	841, 840, 842, 843, 844, 845, 846, 847, 849, 848,
	850, 851, 852, 853, 854, 855, 823, 824, 827, 828,
	826, 825, 829, 838, 839, 830, 831, 832, 833, 834,
	835, 837, 836, 856, 857, 858, 859, 860, 862, 861,
	865, 866, 864, 863, 868, 867, 762, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 931,
	259, 932, 0, 0, 936, 0, 0, 0, 938, 937,
	0, 939, 901, 900, 0, 0, 933, 934, 0, 935,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 946, 947, 948, 949, 950, 951,
	952, 953, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 971, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 761, 0, 0, 0, 267,
	766, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 773,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 91, 0, 0, 1020, 504, 956, 745, 922, 960,
	1021, 973, 974, 975, 961, 0, 235, 962, 963, 242,
	964, 0, 921, 804, 806, 805, 871, 872, 873, 874,
	875, 876, 877, 807, 808, 802, 969, 606, 976, 977,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 741, 758, 0, 772, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 756, 2375,
	0, 0, 0, 916, 0, 757, 0, 0, 765, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 915, 0,
	0, 626, 0, 0, 913, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 966, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 967, 968, 253, 649, 812, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 820, 821, 277, 304, 897, 896, 895, 303, 305,
	893, 894, 892, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 903, 925, 914, 778,
	779, 904, 905, 929, 906, 781, 782, 926, 927, 775,
	776, 780, 928, 930, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 917, 764, 763, 0, 770, 771, 0, 800,
	801, 803, 809, 810, 811, 822, 869, 870, 878, 880,
	881, 879, 882, 883, 884, 887, 888, 889, 890, 885,
	886, 891, 783, 787, 784, 785, 786, 798, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 799, 940,
	941, 942, 943, 944, 945, 815, 819, 818, 816, 817,
	813, 814, 841, 840, 842, 843, 844, 845, 846, 847,
	849, 848, 850, 851, 852, 853, 854, 855, 823, 824,
	827, 828, 826, 825, 829, 838, 839, 830, 831, 832,
	833, 834, 835, 837, 836, 856, 857, 858, 859, 860,
	862, 861, 865, 866, 864, 863, 868, 867, 762, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 931, 259, 932, 0, 0, 936, 0, 0, 0,
	938, 937, 0, 939, 901, 900, 0, 0, 933, 934,
	0, 935, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 946, 947, 948, 949,
	950, 951, 952, 953, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 971, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 761, 0, 0,
	0, 267, 766, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 773, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 769, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 91, 0, 0, 1020, 504, 956, 745,
	922, 960, 1021, 973, 974, 975, 961, 0, 235, 962,
	963, 242, 964, 0, 921, 804, 806, 805, 871, 872,
	873, 874, 875, 876, 877, 807, 808, 802, 969, 606,
	976, 977, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 741, 758, 0, 772, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	756, 0, 0, 0, 0, 916, 0, 757, 0, 0,
	765, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	915, 0, 0, 626, 0, 0, 913, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 966, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 967, 968, 253, 649, 812, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 820, 821, 277, 304, 897, 896, 895,
	303, 305, 893, 894, 892, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 903, 925,
	914, 778, 779, 904, 905, 929, 906, 781, 782, 926,
	927, 775, 776, 780, 928, 930, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 917, 764, 763, 0, 770, 771,
	0, 800, 801, 803, 809, 810, 811, 822, 869, 870,
	878, 880, 881, 879, 882, 883, 884, 887, 888, 889,
	890, 885, 886, 891, 783, 787, 784, 785, 786, 798,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	799, 940, 941, 942, 943, 944, 945, 815, 819, 818,
	816, 817, 813, 814, 841, 840, 842, 843, 844, 845,
	846, 847, 849, 848, 850, 851, 852, 853, 854, 855,
	823, 824, 827, 828, 826, 825, 829, 838, 839, 830,
	831, 832, 833, 834, 835, 837, 836, 856, 857, 858,
	859, 860, 862, 861, 865, 866, 864, 863, 868, 867,
	762, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 931, 259, 932, 0, 0, 936, 0,
	0, 0, 938, 937, 0, 939, 901, 900, 0, 0,
	933, 934, 0, 935, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 946, 947,
	948, 949, 950, 951, 952, 953, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 971, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 761,
	0, 0, 0, 267, 766, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 773, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 769, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 91, 0, 0, 1020, 504,
	956, 745, 922, 960, 1021, 973, 974, 975, 961, 0,
	235, 962, 963, 242, 964, 0, 921, 804, 806, 805,
	871, 872, 873, 874, 875, 876, 877, 807, 808, 802,
	969, 606, 976, 977, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 741, 758, 0,
	772, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 756, 0, 0, 0, 0, 916, 0, 757,
	0, 0, 765, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 3163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 915, 0, 0, 626, 0, 0, 913, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 966, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 967, 968, 253, 649,
	812, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 820, 821, 277, 304, 897,
	896, 895, 303, 305, 893, 894, 892, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	903, 925, 914, 778, 779, 904, 905, 929, 906, 781,
	782, 926, 927, 775, 776, 780, 928, 930, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 917, 764, 763, 0,
	770, 771, 0, 800, 801, 803, 809, 810, 811, 822,
	869, 870, 878, 880, 881, 879, 882, 883, 884, 887,
	888, 889, 890, 885, 886, 891, 783, 787, 784, 785,
	786, 798, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 799, 940, 941, 942, 943, 944, 945, 815,
	819, 818, 816, 817, 813, 814, 841, 840, 842, 843,
	844, 845, 846, 847, 849, 848, 850, 851, 852, 853,
	854, 855, 823, 824, 827, 828, 826, 825, 829, 838,
	839, 830, 831, 832, 833, 834, 835, 837, 836, 856,
	857, 858, 859, 860, 862, 861, 865, 866, 864, 863,
	868, 867, 762, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 931, 259, 932, 0, 0,
	936, 0, 0, 0, 938, 937, 0, 939, 901, 900,
	0, 0, 933, 934, 0, 935, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	946, 947, 948, 949, 950, 951, 952, 953, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 971,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 761, 0, 0, 0, 267, 766, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 773, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 768,
	769, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 91, 0, 0,
	1020, 504, 956, 745, 922, 960, 1021, 973, 974, 975,
	961, 0, 235, 962, 963, 242, 964, 0, 921, 804,
	806, 805, 871, 872, 873, 874, 875, 876, 877, 807,
	808, 802, 969, 606, 976, 977, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 741,
	758, 0, 772, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 756, 0, 0, 0, 0, 916,
	0, 757, 0, 0, 765, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 3159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 915, 0, 0, 626, 0, 0,
	913, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 966, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 967, 968,
	253, 649, 812, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 820, 821, 277,
	304, 897, 896, 895, 303, 305, 893, 894, 892, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 903, 925, 914, 778, 779, 904, 905, 929,
	906, 781, 782, 926, 927, 775, 776, 780, 928, 930,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 917, 764,
	763, 0, 770, 771, 0, 800, 801, 803, 809, 810,
	811, 822, 869, 870, 878, 880, 881, 879, 882, 883,
	884, 887, 888, 889, 890, 885, 886, 891, 783, 787,
	784, 785, 786, 798, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 799, 940, 941, 942, 943, 944,
	945, 815, 819, 818, 816, 817, 813, 814, 841, 840,
	842, 843, 844, 845, 846, 847, 849, 848, 850, 851,
	852, 853, 854, 855, 823, 824, 827, 828, 826, 825,
	829, 838, 839, 830, 831, 832, 833, 834, 835, 837,
	836, 856, 857, 858, 859, 860, 862, 861, 865, 866,
	864, 863, 868, 867, 762, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 931, 259, 932,
	0, 0, 936, 0, 0, 0, 938, 937, 0, 939,
	901, 900, 0, 0, 933, 934, 0, 935, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 946, 947, 948, 949, 950, 951, 952, 953,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 971, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 761, 0, 0, 0, 267, 766, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 773, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 769, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 91,
	0, 0, 1020, 504, 956, 1082, 922, 960, 1021, 973,
	974, 975, 961, 0, 235, 962, 963, 242, 964, 0,
	921, 804, 806, 805, 871, 872, 873, 874, 875, 876,
	877, 807, 808, 802, 969, 606, 976, 977, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 772, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 756, 0, 0, 0,
	0, 916, 0, 757, 0, 0, 765, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 915, 0, 0, 626,
	0, 0, 913, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	966, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	967, 968, 253, 649, 812, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 820,
	821, 277, 304, 897, 896, 895, 303, 305, 893, 894,
	892, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 903, 925, 914, 778, 779, 904,
	905, 929, 906, 781, 782, 926, 927, 775, 776, 780,
	928, 930, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	917, 764, 763, 0, 770, 771, 0, 800, 801, 803,
	809, 810, 811, 822, 869, 870, 878, 880, 881, 879,
	882, 883, 884, 887, 888, 889, 890, 885, 886, 891,
	783, 787, 784, 785, 786, 798, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 799, 940, 941, 942,
	943, 944, 945, 815, 819, 818, 816, 817, 813, 814,
	841, 840, 842, 843, 844, 845, 846, 847, 849, 848,
	850, 851, 852, 853, 854, 855, 823, 824, 827, 828,
	826, 825, 829, 838, 839, 830, 831, 832, 833, 834,
	835, 837, 836, 856, 857, 858, 859, 860, 862, 861,
	865, 866, 864, 863, 868, 867, 762, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 931,
	259, 932, 0, 0, 936, 0, 0, 0, 938, 937,
	0, 939, 901, 900, 0, 0, 933, 934, 0, 935,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 946, 947, 948, 949, 950, 951,
	952, 953, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 971, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 761, 0, 0, 0, 267,
	766, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 773,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 91, 0, 0, 1020, 504, 956, 1082, 922, 960,
	1021, 973, 974, 975, 961, 0, 235, 962, 963, 242,
	964, 0, 921, 804, 806, 805, 871, 872, 873, 874,
	875, 876, 877, 807, 808, 802, 969, 606, 976, 977,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 758, 0, 772, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 756, 0,
	0, 0, 0, 916, 0, 757, 0, 0, 765, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 2110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 915, 0,
	0, 626, 0, 0, 913, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 966, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 967, 968, 253, 649, 812, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 820, 821, 277, 304, 897, 896, 895, 303, 305,
	893, 894, 892, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 903, 925, 914, 778,
	779, 904, 905, 929, 906, 781, 782, 926, 927, 775,
	776, 780, 928, 930, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 917, 764, 763, 0, 770, 771, 0, 800,
	801, 803, 809, 810, 811, 822, 869, 870, 878, 880,
	881, 879, 882, 883, 884, 887, 888, 889, 890, 885,
	886, 891, 783, 787, 784, 785, 786, 798, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 799, 940,
	941, 942, 943, 944, 945, 815, 819, 818, 816, 817,
	813, 814, 841, 840, 842, 843, 844, 845, 846, 847,
	849, 848, 850, 851, 852, 853, 854, 855, 823, 824,
	827, 828, 826, 825, 829, 838, 839, 830, 831, 832,
	833, 834, 835, 837, 836, 856, 857, 858, 859, 860,
	862, 861, 865, 866, 864, 863, 868, 867, 762, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 931, 259, 932, 0, 0, 936, 0, 0, 0,
	938, 937, 0, 939, 901, 900, 0, 0, 933, 934,
	0, 935, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 946, 947, 948, 949,
	950, 951, 952, 953, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 971, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 761, 0, 0,
	0, 267, 766, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 773, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 769, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 91, 0, 0, 1020, 504, 956, 1082,
	922, 960, 1021, 973, 974, 975, 961, 0, 235, 962,
	963, 242, 964, 0, 921, 804, 806, 805, 871, 872,
	873, 874, 875, 876, 877, 807, 808, 802, 969, 606,
	976, 977, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 758, 0, 772, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	756, 0, 0, 0, 0, 916, 0, 757, 0, 0,
	765, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	915, 0, 0, 626, 0, 0, 913, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 966, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 967, 968, 253, 649, 812, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 820, 821, 277, 304, 897, 896, 895,
	303, 305, 893, 894, 892, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 903, 925,
	914, 778, 779, 904, 905, 929, 906, 781, 782, 926,
	927, 775, 776, 780, 928, 930, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 917, 764, 763, 0, 770, 771,
	0, 800, 801, 803, 809, 810, 811, 822, 869, 870,
	878, 880, 881, 879, 882, 883, 884, 887, 888, 889,
	890, 885, 886, 891, 783, 787, 784, 785, 786, 798,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	799, 940, 941, 942, 943, 944, 945, 815, 819, 818,
	816, 817, 813, 814, 841, 840, 842, 843, 844, 845,
	846, 847, 849, 848, 850, 851, 852, 853, 854, 855,
	823, 824, 827, 828, 826, 825, 829, 838, 839, 830,
	831, 832, 833, 834, 835, 837, 836, 856, 857, 858,
	859, 860, 862, 861, 865, 866, 864, 863, 868, 867,
	762, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 931, 259, 932, 0, 0, 936, 0,
	0, 0, 938, 937, 0, 939, 901, 900, 0, 0,
	933, 934, 0, 935, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 946, 947,
	948, 949, 950, 951, 952, 953, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 971, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 0, 504,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 1134, 626, 0, 0, 0, 0,
	0, 1131, 1132, 362, 1092, 327, 194, 222, 1125, 1129,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	1705, 504, 956, 0, 0, 1702, 0, 0, 0, 0,
	1700, 0, 235, 1701, 1699, 242, 1704, 0, 921, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 82, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 91,
	0, 0, 0, 504, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	90, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 2412, 0, 0,
	2411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 2859,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 2861, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 2863, 504, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 1473,
	0, 1474, 1475, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	82, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 91, 0, 1749, 0, 504, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 90, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 91, 0, 0, 0, 504,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 2412, 0, 0, 2411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 1092, 327, 194, 222,
	1090, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 2359, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 0,
	0, 0, 1948, 504, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 1749, 0, 504, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 3721, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 2119, 504, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 2873, 504,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 721, 0, 0, 0, 0, 2851, 0, 0,
	0, 0, 235, 0, 0, 242, 2852, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 1786, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 0,
	0, 0, 1785, 504, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 0, 504, 723, 724, 725, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 4064, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 1948, 504,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 3721, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 0,
	0, 0, 2863, 504, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 91, 0, 0, 0, 504, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 2413, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 0, 504,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 2066, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	2057, 504, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 1915, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 0,
	0, 0, 0, 504, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 1913, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 0, 504, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 1911,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 1909, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 0, 504,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 1907, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 1903, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 0,
	0, 0, 0, 504, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 1901, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 0, 504, 721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 1899,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 1874, 0, 0, 0, 504,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 0, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 1771, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 91,
	0, 0, 0, 504, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 0, 504, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1450, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 1449, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 393, 0, 373, 573, 574, 313, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 363, 264,
	0, 0, 201, 502, 0, 427, 0, 200, 0, 484,
	249, 374, 371, 580, 279, 270, 266, 247, 314, 382,
	425, 515, 419, 0, 367, 0, 0, 494, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 320, 245, 322,
	199, 410, 495, 283, 0, 0, 0, 0, 0, 504,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 242, 0, 0, 0, 348, 357, 356,
	336, 337, 339, 341, 347, 354, 360, 333, 342, 0,
	0, 606, 0, 0, 0, 262, 318, 269, 261, 577,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 399, 254,
	0, 450, 0, 672, 0, 626, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 327, 194, 222, 0, 0,
	409, 458, 470, 0, 0, 0, 250, 0, 468, 423,
	601, 230, 281, 455, 429, 466, 437, 284, 0, 0,
	467, 369, 582, 447, 598, 627, 628, 260, 403, 612,
	519, 620, 645, 223, 257, 417, 503, 604, 491, 394,
	578, 579, 326, 490, 292, 198, 366, 633, 221, 476,
	368, 239, 228, 584, 609, 296, 286, 453, 640, 210,
	514, 595, 236, 480, 0, 0, 648, 244, 501, 607,
	596, 212, 591, 500, 390, 323, 324, 211, 0, 454,
	265, 290, 0, 0, 255, 412, 586, 587, 253, 649,
	225, 619, 217, 0, 618, 405, 581, 592, 391, 380,
	216, 590, 389, 379, 331, 352, 353, 277, 304, 444,
	372, 445, 303, 305, 401, 400, 402, 204, 605, 623,
	0, 205, 0, 496, 608, 650, 449, 209, 231, 232,
	234, 0, 276, 280, 288, 291, 300, 301, 310, 364,
	416, 443, 439, 448, 0, 576, 599, 613, 625, 631,
	632, 634, 635, 636, 637, 638, 641, 639, 404, 308,
	492, 330, 370, 0, 0, 422, 469, 237, 603, 493,
	196, 0, 0, 0, 0, 251, 252, 0, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 646, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 0, 0, 0, 0,
	0, 395, 0, 588, 589, 669, 381, 483, 600, 332,
	346, 349, 338, 358, 0, 359, 334, 335, 340, 343,
	344, 345, 350, 351, 355, 361, 246, 207, 387, 396,
	575, 309, 213, 214, 215, 521, 522, 523, 524, 616,
	617, 621, 202, 459, 460, 461, 462, 289, 611, 306,
	465, 464, 328, 329, 376, 446, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 0, 193, 218, 365, 0, 451, 285, 647,
	615, 481, 610, 203, 220, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 197,
	206, 219, 229, 233, 240, 258, 273, 275, 282, 295,
	307, 315, 316, 319, 325, 377, 383, 384, 385, 386,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 485, 486, 487, 488,
	489, 497, 498, 513, 583, 585, 602, 622, 629, 477,
	298, 299, 441, 442, 311, 312, 643, 644, 297, 597,
	630, 594, 642, 624, 435, 375, 0, 0, 378, 278,
	302, 317, 0, 614, 499, 224, 463, 287, 248, 0,
	0, 208, 243, 227, 256, 271, 274, 321, 388, 397,
	426, 431, 293, 268, 241, 456, 238, 482, 516, 517,
	518, 520, 392, 263, 430, 393, 0, 373, 573, 574,
	313, 0, 0, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	363, 264, 0, 0, 201, 502, 0, 427, 0, 200,
	0, 484, 249, 374, 371, 580, 279, 270, 266, 247,
	314, 382, 425, 515, 419, 0, 367, 0, 0, 494,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 320,
	245, 322, 199, 410, 495, 283, 0, 0, 0, 0,
	0, 504, 721, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 242, 0, 0, 0, 348,
	357, 356, 336, 337, 339, 341, 347, 354, 360, 333,
	342, 0, 0, 606, 0, 0, 0, 262, 318, 269,
	261, 577, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	399, 254, 0, 450, 0, 0, 0, 626, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 327, 194, 222,
	0, 0, 409, 458, 470, 0, 0, 0, 250, 0,
	468, 423, 601, 230, 281, 455, 429, 466, 437, 284,
	0, 0, 467, 369, 582, 447, 598, 627, 628, 260,
	403, 612, 519, 620, 645, 223, 257, 417, 503, 604,
	491, 394, 578, 579, 326, 490, 292, 198, 366, 633,
	221, 476, 368, 239, 228, 584, 609, 296, 286, 453,
	640, 210, 514, 595, 236, 480, 0, 0, 648, 244,
	501, 607, 596, 212, 591, 500, 390, 323, 324, 211,
	0, 454, 265, 290, 0, 0, 255, 412, 586, 587,
	253, 649, 225, 619, 217, 0, 618, 405, 581, 592,
	391, 380, 216, 590, 389, 379, 331, 352, 353, 277,
	304, 444, 372, 445, 303, 305, 401, 400, 402, 204,
	605, 623, 0, 205, 0, 496, 608, 650, 449, 209,
	231, 232, 234, 0, 276, 280, 288, 291, 300, 301,
	310, 364, 416, 443, 439, 448, 0, 576, 599, 613,
	625, 631, 632, 634, 635, 636, 637, 638, 641, 639,
	404, 308, 492, 330, 370, 0, 0, 422, 469, 237,
	603, 493, 196, 0, 0, 0, 0, 251, 252, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 646, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 395, 0, 588, 589, 669, 381, 483,
	600, 332, 346, 349, 338, 358, 0, 359, 334, 335,
	340, 343, 344, 345, 350, 351, 355, 361, 246, 207,
	387, 396, 575, 309, 213, 214, 215, 521, 522, 523,
	524, 616, 617, 621, 202, 459, 460, 461, 462, 289,
	611, 306, 465, 464, 328, 329, 376, 446, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 193, 218, 365, 0, 451,
	285, 647, 615, 481, 610, 203, 220, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 197, 206, 219, 229, 233, 240, 258, 273, 275,
	282, 295, 307, 315, 316, 319, 325, 377, 383, 384,
	385, 386, 4129, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 485, 486,
	487, 488, 489, 497, 498, 513, 583, 585, 602, 622,
	629, 477, 298, 299, 441, 442, 311, 312, 643, 644,
	297, 597, 630, 594, 642, 624, 435, 375, 0, 0,
	378, 278, 302, 317, 0, 614, 499, 224, 463, 287,
	248, 0, 0, 208, 243, 227, 256, 271, 274, 321,
	388, 397, 426, 431, 293, 268, 241, 456, 238, 482,
	516, 517, 518, 520, 392, 263, 430, 393, 0, 373,
	573, 574, 313, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 363, 264, 0, 0, 201, 502, 0, 427,
	0, 200, 0, 484, 249, 374, 371, 580, 279, 270,
	266, 247, 314, 382, 425, 515, 419, 0, 367, 0,
	0, 494, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 245, 322, 199, 410, 495, 283, 0, 0,
	0, 0, 0, 504, 721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 242, 0, 0,
	0, 348, 357, 356, 336, 337, 339, 341, 347, 354,
	360, 333, 342, 0, 0, 606, 0, 0, 0, 262,
	318, 269, 261, 577, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 399, 254, 0, 450, 0, 0, 0, 626,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 327,
	194, 222, 0, 0, 409, 458, 470, 0, 0, 0,
	250, 0, 468, 423, 601, 230, 281, 455, 429, 466,
	437, 284, 0, 0, 467, 369, 582, 447, 598, 627,
	628, 260, 403, 612, 519, 620, 645, 223, 257, 417,
	503, 604, 491, 394, 578, 579, 326, 490, 292, 198,
	366, 633, 221, 476, 368, 239, 228, 584, 609, 296,
	286, 453, 640, 210, 514, 595, 236, 480, 0, 0,
	648, 244, 501, 607, 596, 212, 591, 500, 390, 323,
	324, 211, 0, 454, 265, 290, 0, 0, 255, 412,
	586, 587, 253, 649, 225, 619, 217, 0, 618, 405,
	581, 592, 391, 380, 216, 590, 389, 379, 331, 352,
	353, 277, 304, 444, 372, 445, 303, 305, 401, 400,
	402, 204, 605, 623, 0, 205, 0, 496, 608, 650,
	449, 209, 231, 232, 234, 0, 276, 280, 288, 291,
	300, 301, 310, 364, 416, 443, 439, 448, 0, 576,
	599, 613, 625, 631, 632, 634, 635, 636, 637, 638,
	641, 639, 404, 308, 492, 330, 370, 0, 0, 422,
	469, 237, 603, 493, 196, 0, 0, 0, 0, 251,
	252, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	646, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	0, 0, 0, 0, 0, 395, 0, 588, 589, 669,
	381, 483, 600, 332, 346, 349, 338, 358, 0, 359,
	334, 335, 340, 343, 344, 345, 350, 351, 355, 361,
	246, 207, 387, 396, 575, 309, 213, 214, 215, 521,
	522, 523, 524, 616, 617, 621, 202, 459, 460, 461,
	462, 289, 611, 306, 465, 464, 328, 329, 376, 446,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 0, 193, 218, 365,
	0, 451, 285, 647, 615, 481, 610, 203, 220, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 197, 206, 219, 229, 233, 240, 258,
	273, 275, 282, 295, 307, 315, 316, 319, 325, 377,
	383, 384, 385, 386, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	485, 486, 487, 488, 489, 497, 498, 513, 583, 585,
	602, 622, 629, 477, 298, 299, 441, 442, 311, 312,
	643, 644, 297, 597, 630, 594, 642, 624, 435, 375,
	0, 0, 378, 278, 302, 317, 0, 614, 499, 224,
	463, 287, 248, 0, 0, 208, 243, 227, 256, 271,
	274, 321, 388, 397, 426, 431, 293, 268, 241, 456,
	238, 482, 516, 517, 518, 520, 392, 263, 430, 393,
	0, 373, 573, 574, 313, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 363, 264, 0, 0, 201, 502,
	0, 427, 0, 200, 0, 484, 249, 374, 371, 580,
	279, 270, 266, 247, 314, 382, 425, 515, 419, 0,
	367, 0, 0, 494, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 320, 245, 322, 199, 410, 495, 283,
	0, 0, 0, 0, 0, 504, 956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 242,
	0, 0, 0, 348, 357, 356, 336, 337, 339, 341,
	347, 354, 360, 333, 342, 0, 0, 606, 0, 0,
	0, 262, 318, 269, 261, 577, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 0, 399, 254, 0, 450, 0, 0,
	0, 626, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 327, 194, 222, 0, 0, 409, 458, 470, 0,
	0, 0, 250, 0, 468, 423, 601, 230, 281, 455,
	429, 466, 437, 284, 0, 0, 467, 369, 582, 447,
	598, 627, 628, 260, 403, 612, 519, 620, 645, 223,
	257, 417, 503, 604, 491, 394, 578, 579, 326, 490,
	292, 198, 366, 633, 221, 476, 368, 239, 228, 584,
	609, 296, 286, 453, 640, 210, 514, 595, 236, 480,
	0, 0, 648, 244, 501, 607, 596, 212, 591, 500,
	390, 323, 324, 211, 0, 454, 265, 290, 0, 0,
	255, 412, 586, 587, 253, 649, 225, 619, 217, 0,
	618, 405, 581, 592, 391, 380, 216, 590, 389, 379,
	331, 352, 353, 277, 304, 444, 372, 445, 303, 305,
	401, 400, 402, 204, 605, 623, 0, 205, 0, 496,
	608, 650, 449, 209, 231, 232, 234, 0, 276, 280,
	288, 291, 300, 301, 310, 364, 416, 443, 439, 448,
	0, 576, 599, 613, 625, 631, 632, 634, 635, 636,
	637, 638, 641, 639, 404, 308, 492, 330, 370, 0,
	0, 422, 469, 237, 603, 493, 196, 0, 0, 0,
	0, 251, 252, 0, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 646, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 0, 0, 0, 0, 0, 395, 0, 588,
	589, 669, 381, 483, 600, 332, 346, 349, 338, 358,
	0, 359, 334, 335, 340, 343, 344, 345, 350, 351,
	355, 361, 246, 207, 387, 396, 575, 309, 213, 214,
	215, 521, 522, 523, 524, 616, 617, 621, 202, 459,
	460, 461, 462, 289, 611, 306, 465, 464, 328, 329,
	376, 446, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 0, 193,
	218, 365, 0, 451, 285, 647, 615, 481, 610, 203,
	220, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 197, 206, 219, 229, 233,
	240, 258, 273, 275, 282, 295, 307, 315, 316, 319,
	325, 377, 383, 384, 385, 386, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 485, 486, 487, 488, 489, 497, 498, 513,
	583, 585, 602, 622, 629, 477, 298, 299, 441, 442,
	311, 312, 643, 644, 297, 597, 630, 594, 642, 624,
	435, 375, 0, 0, 378, 278, 302, 317, 0, 614,
	499, 224, 463, 287, 248, 0, 0, 208, 243, 227,
	256, 271, 274, 321, 388, 397, 426, 431, 293, 268,
	241, 456, 238, 482, 516, 517, 518, 520, 392, 263,
	430, 393, 0, 373, 573, 574, 313, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 363, 264, 0, 0,
	201, 502, 0, 427, 0, 200, 0, 484, 249, 374,
	371, 580, 279, 270, 266, 247, 314, 382, 425, 515,
	419, 0, 367, 0, 0, 494, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 245, 322, 199, 410,
	495, 283, 0, 0, 0, 0, 0, 504, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 242, 0, 0, 0, 348, 357, 356, 336, 337,
	339, 341, 347, 354, 360, 333, 342, 0, 0, 606,
	0, 0, 0, 262, 318, 269, 261, 577, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 0, 399, 254, 0, 450,
	0, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 327, 194, 222, 0, 0, 409, 458,
	470, 0, 0, 0, 250, 0, 468, 423, 601, 230,
	281, 455, 429, 466, 437, 284, 0, 0, 467, 369,
	582, 447, 598, 627, 628, 260, 403, 612, 519, 620,
	645, 223, 257, 417, 503, 604, 491, 394, 578, 579,
	326, 490, 292, 198, 366, 633, 221, 476, 368, 239,
	228, 584, 609, 296, 286, 453, 640, 210, 514, 595,
	236, 480, 0, 0, 648, 244, 501, 607, 596, 212,
	591, 500, 390, 323, 324, 211, 0, 454, 265, 290,
	0, 0, 255, 412, 586, 587, 253, 649, 225, 619,
	217, 0, 618, 405, 581, 592, 391, 380, 216, 590,
	389, 379, 331, 352, 353, 277, 304, 444, 372, 445,
	303, 305, 401, 400, 402, 204, 605, 623, 0, 205,
	0, 496, 608, 650, 449, 209, 231, 232, 234, 0,
	276, 280, 288, 291, 300, 301, 310, 364, 416, 443,
	439, 448, 0, 576, 599, 613, 625, 631, 632, 634,
	635, 636, 637, 638, 641, 639, 404, 308, 492, 330,
	370, 0, 0, 422, 469, 237, 603, 493, 196, 0,
	0, 0, 0, 251, 252, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 646, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 0, 0, 0, 0, 0, 395,
	0, 588, 589, 669, 381, 483, 600, 332, 346, 349,
	338, 358, 0, 359, 334, 335, 340, 343, 344, 345,
	350, 351, 355, 361, 246, 207, 387, 396, 575, 309,
	213, 214, 215, 521, 522, 523, 524, 616, 617, 621,
	202, 459, 460, 461, 462, 289, 611, 306, 465, 464,
	328, 329, 376, 446, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	0, 193, 218, 365, 0, 451, 285, 647, 615, 481,
	610, 203, 220, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 197, 206, 219,
	229, 233, 240, 258, 273, 275, 282, 295, 307, 315,
	316, 319, 325, 377, 383, 384, 385, 386, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 485, 486, 487, 488, 489, 497,
	498, 513, 583, 585, 602, 622, 629, 477, 298, 299,
	441, 442, 311, 312, 643, 644, 297, 597, 630, 594,
	642, 624, 435, 375, 0, 0, 378, 278, 302, 317,
	0, 614, 499, 224, 463, 287, 248, 0, 0, 208,
	243, 227, 256, 271, 274, 321, 388, 397, 426, 431,
	293, 268, 241, 456, 238, 482, 516, 517, 518, 520,
	392, 263, 430, 0, 0, 373, 573, 574, 313,
}

var yyPact = [...]int{
	-1000, -1000, 4290, -1000, -548, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2441,
	395, -1000, -1000, 2594, -1000, 1135, 2098, -1000, 2423, 5051,
	-1000, 55787, 806, -1000, 52819, -453, 917, 229, 36495, -1000,
	212, -1000, 194, 54303, 211, -1000, -1000, -1000, -1000, -453,
	22397, 2304, 70, 68, 55787, -1000, -1000, -1000, -1000, -372,
	415, 2119, -1000, 404, -1000, -1000, -1000, -1000, -1000, -1000,
	52077, -1000, 1167, -1000, -1000, 2456, 2444, 2316, 982, 2319,
	-1000, 2507, 2119, -1000, 22397, 2545, 2362, -1000, -1000, 489,
	-1000, -1000, 233, -1000, -1000, 404, 31301, 55787, 40205, 895,
	-1000, 2423, -1000, -1000, -1000, 193, -1000, 417, 2027, -1000,
	2026, -1000, 1115, 852, 418, 863, 856, 416, 414, 405,
	403, 400, 388, 383, 377, 424, -1000, 1002, 1002, -190,
	-193, 1085, 494, 471, 471, 1118, 509, 2396, 2391, -1000,
	-1000, 1002, 1002, 1002, 371, 1002, 1002, 1002, 1002, 316,
	314, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
	1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 918, 2423,
	279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55787, 225, 55787, -1000, 887, 805, -1000, -1000, -457, 1169,
	1169, 127, 1169, 1169, 1169, 1169, 207, 953, 66, -1000,
	197, 288, 186, 291, 1137, 784, -1000, -1000, 249, 1137,
	1857, -1000, 991, 290, 192, -1000, 1169, 1169, -1000, 14953,
	227, 14953, 14953, 285, 188, -1000, 2413, -1000, -1000, -1000,
	-1000, -1000, 1357, -1000, -1000, -1000, -1000, -3, 504, -1000,
	-1000, -1000, -1000, 54303, 51335, 315, -1000, -1000, 31, 1604,
	1468, 22397, 1590, 984, -1000, -1000, 1311, 946, -1000, -1000,
	-1000, -1000, -1000, 822, -1000, 24623, 24623, 24623, 24623, -1000,
	-1000, 1434, 50593, 1434, 1434, 24623, 1434, 24623, 1434, 1434,
	1434, 1434, 22397, 1434, 1434, 1434, 1434, -1000, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, -1000, -1000, -1000,
	-1000, 1434, 877, 1434, 1434, 1434, 1434, 1434, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1434, 1434, 1434, 1434, 1434,
	1434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, -1000, -1000, -1000, 1755, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27591, 1607, 1606, 1603, -1000,
	19429, 1434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 55787, -1000, 1434, 236, 54303, 54303, 407,
	1352, -1000, -1000, 2507, 2119, -1000, 415, 412, 404, -1000,
	3907, 370, 1602, 1483, 2119, 1985, 55787, -1000, 2045, -1000,
	-1000, -1000, -335, -361, 2221, 1432, 1853, -1000, -1000, -1000,
	-1000, 2533, 22397, -1000, -1000, 49851, -1000, 489, 489, 2023,
	441, 21, -1000, -1000, -1000, -1000, 1028, 35753, -1000, -1000,
	-1000, -1000, -1000, -1000, 412, 1908, 55787, -1000, -1000, 5031,
	54303, -1000, 2097, -1000, 1892, -1000, 2054, 22397, 2109, 804,
	54303, 798, 796, 792, 480, -42, -1000, -1000, -1000, -1000,
	-1000, -1000, 1002, 1002, 1002, -1000, 420, 2540, 5051, 6274,
	-1000, -1000, -1000, 49109, 2096, 54303, -1000, 2092, -1000, 1091,
	859, 896, 896, 54303, -1000, -1000, 55045, 54303, 1088, 1080,
	54303, 54303, 54303, 54303, -1000, 48367, -1000, 47625, 46883, 1349,
	54303, 46141, 45399, 44657, 43915, 43173, -1000, 2299, -1000, 2113,
	-1000, -1000, -1000, 55045, 54303, 54303, 55045, 54303, 55045, 55787,
	54303, -1000, -1000, 372, -1000, -1000, 1348, 1345, 1344, 1002,
	1002, 1341, 1850, 1849, 1845, 1002, 1002, 1335, 1841, 37979,
	1839, 268, 1332, 1331, 1318, 1358, 1835, 224, 1833, 1330,
	1260, 1317, 54303, 2091, 55787, -1000, 270, 1011, 981, 1027,
	2423, 2290, 2009, 503, 803, 54303, 479, 479, 54303, -1000,
	15701, 55787, 247, -1000, 1830, 22397, -1000, 1159, 1137, 1137,
	-1000, -1000, -1000, -1000, -1000, -1000, 1169, 55787, 1159, -1000,
	-1000, -1000, 1137, 1169, 55787, 1169, 1169, 1169, 1169, 1137,
	1137, 1137, 1169, 55787, 55787, 55787, 55787, 55787, 55787, 55787,
	55787, 55787, 14953, 991, 1169, -458, -1000, 1824, -1000, -1000,
	-1000, 2214, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14953, 14953, -1000, -1000, 2504, 2503, -1000, -1000,
	-1000, 2008, -1000, 199, 25, 210, -1000, 42431, 511, 1025,
	-1000, 511, -1000, -1000, -1000, -1000, -1000, 2006, 41689, -1000,
	-459, -460, -463, -464, -1000, -1000, -1000, -467, -469, -1000,
	-1000, -1000, 22397, 22397, 22397, 22397, -241, -1000, 1312, 24623,
	2410, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22397, 246,
	1009, 24623, 24623, 24623, 24623, 24623, 24623, 24623, 26107, 25365,
	24623, 24623, 24623, 24623, 24623, 24623, -1000, -1000, 33527, 3281,
	3281, 946, 946, 946, 946, -1000, -153, 2005, 55045, -1000,
	-1000, -1000, 874, 22397, 22397, 946, -1000, 1366, 4130, 19429,
	22397, 22397, 22397, 22397, 1035, 1468, 55045, 22397, -1000, 1483,
	-1000, -1000, -1000, -1000, 1185, -1000, -1000, 1175, 2380, 2380,
	2380, 2380, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 2380, 22397, 202, 202, 858, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 17945, 22397, 22397, 24623, 22397,
	22397, 22397, 1483, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 1483, 22397, 1184, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 17197, 22397, 22397, 22397, 22397, 22397, -1000, -1000,
	-1000, -1000, -1000, -1000, 22397, 22397, 22397, 22397, 22397, 22397,
	22397, 22397, 1483, 22397, 22397, 22397, 22397, 22397, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 387,
	1555, 1513, 22397, -1000, 1995, -1000, -200, 32043, 873, 22397,
	1820, 2587, 2138, 54303, -1000, -1000, -1000, -1000, 2507, -1000,
	2507, 387, 3075, 2227, 21655, -1000, -1000, 3075, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1884, -1000, 55787, 1985, 2493, 54303, -1000, -278, -1000,
	-282, 2219, 1807, 363, -1000, 22397, 22397, 1982, -1000, 1956,
	375, 55787, -1000, 30559, 40947, 269, -1000, 21, 1957, -1000,
	32, 15, 18687, 945, -1000, -1000, -1000, 1085, 26849, 1877,
	945, 115, -1000, -1000, -1000, 2054, -1000, 2054, 2054, 2054,
	2054, 363, 363, 363, 363, -1000, -1000, -1000, -1000, -1000,
	2090, 2054, 2088, -1000, 2054, 2054, 2054, 2054, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2082, 2082, 2082, 2078, 2078,
	2058, 2058, 466, -1000, 22397, 427, 40205, 2469, 1316, 1582,
	270, 480, 2135, 54303, 54303, 54303, 55787, 1043, -1000, 1437,
	1433, 1420, -1000, -533, 1976, -1000, -1000, 2539, -1000, -1000,
	1146, 1132, 1122, 1086, 54303, 240, 337, -1000, 464, -1000,
	40205, 54303, 1078, 896, 54303, -1000, 54303, -1000, -1000, -1000,
	-1000, -1000, 54303, -1000, -1000, 1974, -1000, 2018, 1247, 1121,
	1147, 1116, 1974, -1000, -1000, -161, 1974, -1000, 1974, -1000,
	1974, -1000, 1974, -1000, 1974, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1033, 272, -326, 54303, 240, 500,
	-1000, 499, 33527, -1000, -1000, -1000, 33527, 33527, -1000, -1000,
	-1000, -1000, 1806, 1796, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -523, 55787, -1000, 261, 1024, 303, 334,
	319, 55787, 299, 2384, 2378, 2373, 2355, 2353, 2351, 2350,
	266, 312, 55787, 55787, 479, 2171, 55787, 2467, 55787, -1000,
	-1000, -1000, -1000, -1000, 1790, 1788, -1000, 1468, 55787, -1000,
	-1000, 1169, 1169, -1000, -1000, 55787, 1169, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1169, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 55787, -1000, -1000, -1000, -1000, 1786, -1000, 55787, -3,
	191, -1000, -1000, 54303, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -118, -1000, 302, 38, 394, -1000, -1000,
	-1000, -1000, -1000, 2502, -1000, 1468, 1048, 1052, -1000, 1434,
	-1000, -1000, 1342, -1000, -1000, -1000, -1000, -1000, 1434, 1434,
	1434, -1000, -1000, -1000, -1000, -1000, 246, 24623, 24623, 24623,
	1378, 845, 1463, 1389, 1566, 1419, 1419, 1243, 24623, 1243,
	24623, 952, 952, 952, 952, 952, -1000, -1000, -1000, -1000,
	-1000, -1000, 1755, -1000, 1733, -1000, 1434, 55045, 1804, 17197,
	1665, 2363, 1483, 972, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3963, 1483, 1604, 1483, 1785, 3957,
	1036, -1000, 22397, 1483, 3939, -1000, -1000, 1483, 1483, 22397,
	-1000, -1000, 22397, 22397, 22397, 22397, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 22397, 1582, 1969, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1964, 2585, 1586,
	1582, 1582, 1582, 1582, 3935, 1582, 1582, 22397, 1619, -1000,
	-1000, -1000, 1427, 3930, 1362, 3924, 1582, 1582, -1000, 1582,
	3894, 3596, 1483, 2578, 2574, 1582, 1582, 1582, 1582, 1582,
	2505, 2495, 1582, 1582, 2490, 1582, 3578, 1582, 2486, 2475,
	2468, 2460, 2442, 2414, 2379, 2326, 2313, 2309, 2305, 2288,
	2282, 2277, 2260, 2242, 2209, 2197, 1582, 1582, 1582, 3569,
	1582, 3531, 1582, 3517, 1582, 1582, 3467, 2193, 2175, 1483,
	1963, -1000, 3463, 1582, 3459, 3454, 3450, 2169, 3432, 3420,
	3371, 1582, 1582, 1582, 2164, 3277, 3271, 3255, 3249, 3098,
	3066, 3059, 3045, 2965, 1582, 1513, 1513, 1513, 1513, 1513,
	2955, -244, 1582, 1483, -1000, -1000, -1000, -1000, -1000, 2944,
	2158, 2935, 2891, 2881, 2868, 1483, 1434, 868, -1000, -1000,
	1513, 1483, 1483, 1513, 1513, 2864, 2859, 2852, 2781, 2776,
	2725, 1582, 1582, -1000, 1582, 2703, 2682, 2147, 2126, 1483,
	-1000, 1513, 55787, -1000, -452, -1000, 28, 958, -1000, 37979,
	1434, 22397, 1483, -1000, 5387, -1000, 1315, -1000, -1000, -1000,
	-1000, -1000, 35011, 1914, -1000, -1000, 29075, 867, -1000, -1000,
	-1000, 1434, 1778, -1000, -1000, -1000, -1000, 363, 91, 34269,
	902, 902, 129, 1468, 1468, 22397, -1000, -1000, -1000, 430,
	1434, -1000, 2007, 2770, -1000, -1000, -1000, 2492, 28333, -1000,
	-1000, 1434, 1434, 55787, 1998, 1831, -1000, 862, -1000, 1367,
	1957, 21, 37, -1000, -1000, -1000, -1000, 1468, -1000, 1380,
	358, 362, -1000, 468, -1000, -1000, -1000, -1000, 2325, 100,
	-1000, -1000, -1000, 308, 363, -1000, -1000, -1000, -1000, -1000,
	-1000, 1721, -1000, 1721, -1000, -1000, -1000, -1000, -1000, 1314,
	-1000, -1000, -1000, -1000, 1308, -1000, -1000, 1298, -1000, -1000,
	2593, 2143, 427, -1000, -1000, 1002, 1707, -1000, -1000, 2332,
	1002, 1002, 54303, -1000, -1000, 1738, 2469, 261, 55787, 2168,
	-1000, 2135, 2135, 2135, -1000, 2462, -1000, -1000, -1000, -1000,
	-1000, -1000, -522, 169, 539, -1000, -1000, -1000, 5232, 54303,
	1766, -1000, 237, -1000, 1690, -1000, 54303, -1000, 1760, 2076,
	54303, 54303, -1000, -1000, -1000, 54303, 1434, -1000, -1000, -1000,
	-1000, 802, 2422, 332, -1000, -1000, -262, -1000, -1000, 240,
	237, 55045, 54303, 945, -1000, -1000, -1000, -1000, -1000, -526,
	1748, 788, 245, 514, 55787, 55787, 55787, 55787, 55787, 55787,
	820, -1000, -1000, 55, -1000, -1000, 222, -1000, -1000, -1000,
	-1000, -1000, -1000, 222, -1000, -1000, -1000, -1000, -1000, 301,
	493, -1000, 55787, 55787, 955, -1000, -1000, -1000, -1000, -1000,
	1137, -1000, -1000, 1137, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2406, 55787, 35, -489,
	-1000, -486, 22397, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1323, 793, 1463, 24623, 24623, 4130, 4130, 24623, -1000, -1000,
	-1000, 1031, 1031, 33527, -1000, 24623, 22397, -1000, -1000, 22397,
	22397, 22397, 1030, -1000, 22397, 1256, -1000, 22397, -1000, -244,
	1513, 1582, 1582, 1582, 1582, -244, -244, -244, -244, -244,
	-244, -244, -244, -244, -244, 1944, -1000, 22397, 22397, 22397,
	1483, 341, -1000, -1000, -1000, -244, 22397, -1000, -1000, 2572,
	-1000, 22397, -1000, 33527, 22397, 22397, 22397, -1000, -1000, -1000,
	22397, 22397, -1000, -1000, 22397, -1000, 22397, -1000, -1000, -1000,
	-1000, -1000, -1000, 22397, -1000, 22397, -1000, -1000, -1000, 22397,
	-1000, 22397, -1000, -1000, 22397, -1000, 22397, -1000, 22397, -1000,
	22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000,
	22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000,
	22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000,
	-1000, -1000, 22397, -1000, 22397, -1000, 22397, -1000, -1000, 22397,
	-1000, 22397, -1000, 22397, -1000, 22397, 22397, -1000, 22397, 22397,
	22397, -1000, 22397, 22397, 22397, 22397, -1000, -1000, -1000, -1000,
	22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397, 22397,
	-1000, -1000, -1000, -1000, -1000, -1000, 22397, -1000, 40205, 5,
	-244, 1184, 5, 1184, 23881, 897, 889, 23139, -1000, 22397,
	16449, -1000, -1000, -1000, -1000, -1000, 22397, 22397, 22397, 22397,
	22397, 22397, -1000, -1000, -1000, 22397, 22397, -1000, 22397, -1000,
	22397, -1000, -1000, -1000, -1000, -1000, 958, -1000, 871, 813,
	896, -1000, 54303, 1746, -1000, -1000, -1000, 1955, -1000, 2496,
	-1000, 2241, 2238, 2570, 2561, 21655, -1000, 30559, -1000, -241,
	-1000, 39463, -1000, -1000, 14205, -1000, -1000, 54303, -441, -1000,
	2289, 2393, 902, 902, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2167, 55045, 242, -1000, 29817, 54303, 55045, 30559, 30559,
	30559, 30559, 30559, -1000, 2194, 2192, -1000, 2195, 2182, 2232,
	55787, -1000, 387, 1744, -1000, 22397, 2561, 1947, 2075, 30559,
	-1000, -1000, 30559, 55787, 13457, -1000, -1000, 33, 10, -1000,
	-1000, -1000, -1000, 1085, -1000, -1000, 1029, 2485, 2308, -1000,
	-1000, -1000, -1000, -1000, 1742, -1000, 1737, 1950, 1701, 1697,
	272, -1000, 2104, 2404, 1002, 1002, -1000, 1297, -1000, 1366,
	1679, 1669, -1000, -1000, -1000, 522, -1000, 55787, 2166, 2165,
	2162, -1000, -540, 1296, 2069, 2065, 22397, 2067, 2538, 1926,
	54303, -1000, -1000, 55045, -1000, 265, -1000, 427, 54303, -1000,
	-1000, -1000, 337, 55787, -1000, 7155, -1000, -1000, -1000, 237,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55787, 259, -1000,
	2059, 1346, -1000, -1000, 2123, -1000, -1000, -1000, -1000, -1000,
	219, 209, 1666, 220, 1642, 220, -1000, 55787, 909, 2143,
	55787, -1000, -1000, -1000, 1169, 1169, -1000, -1000, 2395, -1000,
	1366, 1582, 24623, 24623, -1000, 946, -1000, -1000, 537, -212,
	2054, 2054, -1000, 2054, 2058, -1000, 2054, 178, 2054, 164,
	2054, -1000, -1000, 1483, 1483, -1000, 1513, 2121, 2060, 2678,
	-1000, 1468, 22397, 2670, -1000, -1000, -244, -244, -244, -244,
	-244, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -47, 2660, 2656, 1582, -1000, 2053, 2051, -1000, 1582,
	22397, 1582, 1483, 2093, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 2084, 2072, 2055, 2042,
	2010, 2003, 1980, 1972, 1965, 1960, 1942, 1927, 1918, 1911,
	1899, 1876, 1582, 1582, 1865, 1582, 1856, 1829, -1000, 1468,
	1513, 2651, 1513, 1582, 1582, 2630, 300, 1582, 1693, 1693,
	1693, 1693, 1693, 1513, 1513, 1513, 1513, 1582, 54303, -1000,
	-244, -1000, -1000, -298, -301, -1000, 1483, -244, 1940, 24623,
	1582, 24623, 24623, 24623, 1582, 1483, -1000, 1823, 1814, 2617,
	1801, 1582, 2582, 1582, 1582, 1582, 1740, -1000, 2497, 1434,
	2497, 1434, 2497, 1685, -1000, 1315, 55787, -1000, -1000, -1000,
	-1000, 2561, 2555, 22397, -1000, 1938, -1000, -1000, 861, -1000,
	91, 611, -1000, 2283, 2393, -1000, 2536, 2268, 2529, -1000,
	-1000, -1000, -1000, 2439, 1875, -1000, 1007, 1901, -1000, -1000,
	20913, 1689, 2235, 840, 1685, 1939, 2770, 2116, 2156, 2995,
	-1000, -1000, -1000, -1000, 2184, -1000, 2183, -1000, -1000, 2045,
	-1000, 2331, -1000, 30559, 1780, 1780, -1000, 839, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1142, 7155, 2603, -1000, 1636,
	-1000, 1364, 204, 1292, -1000, -1000, 1002, 1002, -1000, 1074,
	1065, -1000, 55787, 2050, -1000, 363, 1608, 363, 1285, -1000,
	-1000, 1283, -1000, -1000, -1000, -1000, 2083, 2281, -1000, -1000,
	-1000, -1000, 55787, -1000, 55787, 55787, 55787, 2049, 2526, -1000,
	22397, 2048, 1004, 2552, 54303, 54303, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 461, 1002, -502,
	311, 306, 1002, 1002, 1002, -543, -1000, -1000, 1627, 1617,
	-1000, -196, -1000, 22397, -1000, -1000, -1000, -1000, -1000, 1246,
	1246, 1607, 1606, 1603, -1000, 2045, -1000, -1000, -1000, 1624,
	-1000, -1000, -165, 54303, 54303, 54303, 54303, -1000, -1000, -1000,
	1186, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 946, 1483, 392, -173, 1483, -1000, -1000,
	363, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22397, -1000, 22397, -1000, 22397, 1468, 22397, -1000, -1000,
	-1000, -1000, -1000, 2507, 1572, 22397, 22397, -1000, 1268, 1266,
	-244, 1582, -1000, -1000, -1000, 22397, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22397,
	-1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397,
	-1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397,
	-1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397, -1000, 22397,
	-1000, -1000, 22397, -1000, -1000, -1000, 22397, -1000, 22397, -1000,
	22397, -1000, -1000, -1000, 22397, 298, 1031, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1483, 357,
	-1000, -1000, -1000, 2566, -1000, 1483, 22397, 4130, -1000, 4130,
	4130, 4130, -1000, -1000, -1000, 22397, -1000, 22397, 22397, -1000,
	22397, -1000, 22397, -1000, -1000, -1000, -1000, 22397, 1434, 2315,
	38721, 1434, 38721, 1434, 32043, -1000, -1000, 2555, 2553, 2525,
	1468, 12709, 2262, 2287, 2287, 2283, -1000, 2522, 2521, -1000,
	1569, 2518, 1541, 1058, -1000, 55045, 22397, -1000, 242, 37979,
	-1000, 439, 54303, 242, 54303, -1000, 2544, -1000, -1000, 22397,
	2047, -1000, 22397, -1000, -1000, -1000, -1000, 3281, 1780, -1000,
	-1000, 960, -1000, 22397, -1000, 10786, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1538, 1529, -1000, -1000, 2046, 22397,
	-1000, -1000, -1000, 1614, 1579, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2045, -1000, -1000, -1000, -1000, 337, -530,
	2547, 54303, 1262, -1000, 1600, 1926, 323, 242, 1522, 1002,
	1002, 1002, 1254, 1251, 37979, 1578, -1000, 54303, 456, -1000,
	337, -1000, -199, -201, 1582, -1000, -1000, 2481, -1000, -1000,
	16449, -1000, -1000, 2037, 2134, -1000, -1000, -1000, -1000, 2215,
	-157, -184, -1000, -1000, 1582, 1582, 1582, 2265, 1483, -1000,
	1582, 1582, 1568, 1564, -1000, -1000, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582, 1582,
	1582, 1582, 1582, 1582, 1582, 1582, 1513, 1705, -1000, 298,
	1483, 2145, -1000, -1000, 3281, -1000, -1000, 2544, 2517, 5,
	-1000, -1000, 235, 5, 1468, 1047, 1483, 1483, 1047, 1699,
	1582, 1695, 1674, 1582, 1582, 32785, -1000, 2514, 2510, 1563,
	-1000, -1000, 38721, 1563, 38721, 958, 2553, -251, 22397, 22397,
	-1000, 2258, 1264, -1000, -1000, -1000, -1000, 1490, 1484, -1000,
	1438, -1000, 2602, -1000, 1468, -1000, 1434, 242, -1000, 836,
	1901, -1000, 2507, 1468, 54303, 1468, 92, -1000, 1582, -1000,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434, 1434,
	1434, -1000, -1000, 54303, 2543, -1000, -1000, 2474, 1567, 160,
	-1000, 1501, 1926, -1000, -1000, 201, -1000, 22397, -1000, 37979,
	1402, 1390, -1000, -1000, -1000, -1000, -543, -1000, -1000, -1000,
	-1000, -1000, -1000, 404, 1923, -1000, 1000, 54303, 55787, -1000,
	2210, -1000, -1000, -1000, -1000, 22397, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22397, -1000, 1483, 2144, -1000, -373, -1000,
	-510, 22397, -244, -1000, -1000, -244, -1000, -1000, -1000, -1000,
	-1000, 22397, -1000, -1000, 22397, -1000, 22397, -1000, -1000, 1563,
	-1000, -1000, -1000, 37237, -1000, 1563, -1000, 1563, -1000, -251,
	-1000, 1881, -1000, 54303, 1468, 367, -1000, 1227, -1000, -1000,
	-1000, -1000, -1000, 55045, 54303, 1901, 54303, -1000, -1000, 1560,
	1483, 1434, -1000, 1535, -1000, 404, -1000, 2035, 2065, -1000,
	-1000, -1000, 20171, -1000, -1000, -1000, -1000, -1000, 244, -164,
	16449, 11961, 1533, -1000, -163, 1582, 1513, -1000, -479, -1000,
	-1000, -1000, -1000, 280, -1000, -1000, 1604, -1000, -1000, 1623,
	1613, 1516, -1000, -1000, -1000, -1000, -1000, -1000, -251, -1000,
	-1000, 2473, -1000, -208, -1000, -1000, 1421, 1500, -1000, -1000,
	-1000, 32043, 53561, -151, 429, -164, 22397, 1885, 1483, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -48, -1000, -1000,
	833, -1000, -1000, -1000, 2123, -182, -1000, -1000, -1000, 283,
	-493, -296, -299, 24623, -1000, 22397, -1000, 22397, -1000, 22397,
	-1000, 54303, 1434, -1000, -1000, -1000, 1482, -1000, 4098, -312,
	2141, -1000, -84, -1000, -1000, -1000, 1124, 1384, -1000, -1000,
	-1000, -1000, -1000, -1000, 2339, 54303, -1000, 465, -1000, -1000,
	15701, -165, -185, 1050, -1000, -1000, -1000, -1000, -1000, 4130,
	1431, 1359, 1582, -1000, 54303, -1000, 53561, -306, 945, 3281,
	-1000, 2122, 2052, 2583, -1000, -1000, -1000, -1000, -1000, -1000,
	-545, 1457, 260, -1000, -1000, -1000, 283, -300, -1000, 22397,
	-1000, 22397, -1000, 1483, -1000, -1000, 2445, 92, -1000, 2598,
	-1000, 2595, 998, 998, -1000, 1176, -545, -1000, -1000, -1000,
	-1000, 1582, 1582, -1000, -313, -1000, -1000, -1000, -1000, -1000,
	444, 1240, -1000, -1000, -1000, -1000, -1000, 3281, -1000, -1000,
	-1000, 278, 278, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3186, 3185, 24, 5, 37, 35, 3184, 3181, 3178,
	168, 3177, 3176, 3173, 3172, 2667, 2663, 2654, 3171, 3170,
	3169, 3168, 3167, 3166, 3165, 3162, 3161, 40, 97, 104,
	96, 208, 198, 3159, 167, 160, 203, 3158, 3157, 3155,
	114, 191, 83, 85, 193, 3154, 3153, 73, 3151, 3144,
	3140, 189, 185, 183, 1152, 3138, 184, 113, 49, 3137,
	3135, 3127, 3126, 3125, 3124, 3123, 3118, 3115, 3114, 3113,
	3110, 3108, 3107, 3106, 3104, 3099, 3097, 248, 3096, 3090,
	15, 3087, 76, 3086, 3085, 3084, 3080, 3079, 14, 3076,
	3069, 38, 36, 61, 3068, 3066, 41, 3065, 3064, 3058,
	3055, 3054, 11, 3053, 19, 3046, 34, 3042, 3040, 124,
	3039, 3036, 3034, 39, 3033, 3031, 3030, 42, 163, 3026,
	3023, 138, 3019, 3012, 3011, 182, 3007, 2274, 222, 3000,
	102, 2998, 2979, 2977, 162, 194, 2975, 122, 2974, 2971,
	2970, 150, 2967, 3337, 2966, 2964, 65, 75, 187, 2963,
	2960, 166, 74, 21, 2954, 16, 29, 2953, 2952, 70,
	72, 2951, 105, 2950, 2944, 101, 89, 2941, 100, 94,
	2940, 2934, 20, 7, 2931, 4, 1, 2, 67, 2924,
	2923, 111, 2922, 2917, 2916, 91, 2915, 2914, 4493, 2912,
	87, 129, 131, 106, 68, 2911, 171, 143, 2908, 2901,
	2899, 2898, 2897, 2894, 50, 2888, 2887, 2883, 135, 1268,
	109, 2880, 144, 358, 56, 146, 2877, 200, 77, 195,
	176, 2876, 2875, 136, 134, 2871, 2870, 59, 169, 46,
	2865, 44, 130, 118, 142, 141, 132, 2862, 2861, 58,
	69, 2854, 2851, 2843, 2841, 165, 2840, 2833, 66, 2831,
	54, 2830, 172, 2829, 345, 80, 2828, 177, 175, 2825,
	62, 2821, 2820, 2819, 93, 64, 33, 2818, 158, 161,
	126, 174, 2811, 2809, 52, 2806, 2803, 2797, 196, 294,
	2795, 2794, 347, 178, 140, 151, 88, 2793, 346, 2792,
	2790, 2789, 53, 5186, 7102, 190, 31, 95, 2788, 2783,
	7882, 55, 45, 30, 2782, 210, 2781, 197, 2778, 2777,
	2776, 199, 221, 112, 159, 60, 2772, 2770, 2769, 2768,
	9, 2766, 2765, 2764, 2763, 2760, 2759, 32, 28, 26,
	92, 201, 63, 10, 99, 157, 152, 71, 2758, 2756,
	2755, 123, 90, 2754, 156, 154, 127, 164, 2752, 179,
	147, 117, 2751, 98, 25, 2745, 2744, 2741, 2740, 86,
	2733, 2716, 2715, 2711, 153, 145, 121, 79, 2705, 81,
	115, 149, 148, 51, 2702, 47, 2698, 2695, 23, 192,
	22, 2692, 57, 108, 120, 2688, 6495, 2685, 13, 317,
	155, 2683, 2681, 6, 27, 8, 2680, 2678, 2677, 2673,
	133, 2665, 2658, 2656, 2648, 18, 48, 17, 12, 110,
	137, 78, 2637, 2636, 139, 2635, 2628, 2627, 0, 1050,
	128, 2626, 202,
}

//line sql.y:8792
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 260,
	386, 258, 258, 26, 72, 34, 34, 33, 33, 36,
	36, 35, 29, 29, 29, 30, 30, 30, 30, 30,
	30, 30, 30, 31, 31, 31, 31, 31, 27, 27,
	27, 27, 28, 28, 28, 28, 28, 32, 32, 15,
	15, 107, 107, 16, 17, 17, 17, 17, 420, 420,
	183, 183, 181, 181, 182, 182, 263, 263, 18, 267,
	267, 269, 269, 269, 269, 259, 259, 259, 19, 19,
	268, 268, 270, 270, 270, 273, 273, 273, 273, 314,
	314, 314, 20, 20, 20, 20, 20, 20, 20, 126,
	126, 388, 388, 387, 382, 382, 381, 381, 380, 385,
	385, 384, 384, 383, 38, 39, 48, 48, 48, 48,
	49, 50, 389, 389, 355, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 357, 357, 343, 343, 356, 356, 356, 356, 356,
	356, 356, 342, 342, 138, 138, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 404, 404, 404, 403, 403, 238, 238,
	238, 238, 238, 238, 238, 238, 147, 147, 159, 159,
	159, 159, 159, 159, 145, 145, 146, 144, 144, 144,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 158,
	158, 153, 153, 153, 155, 155, 154, 154, 154, 156,
	156, 405, 405, 405, 405, 320, 320, 320, 320, 323,
	323, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	322, 322, 322, 322, 322, 322, 322, 324, 324, 324,
	324, 324, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 326,
	326, 326, 326, 326, 326, 326, 326, 341, 341, 330,
	330, 335, 335, 336, 336, 337, 337, 337, 338, 338,
	338, 339, 339, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 334, 334, 333, 333, 333, 344, 369, 369,
	368, 368, 366, 366, 366, 366, 366, 366, 366, 366,
	353, 353, 363, 363, 363, 363, 363, 352, 352, 348,
	348, 348, 349, 349, 350, 350, 347, 347, 351, 351,
	365, 365, 364, 364, 345, 345, 346, 346, 371, 406,
	406, 406, 406, 406, 407, 407, 372, 396, 398, 398,
	398, 397, 397, 394, 395, 393, 393, 393, 393, 393,
	82, 82, 82, 286, 286, 287, 287, 361, 361, 360,
	360, 360, 362, 362, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 281, 281, 281, 392, 392,
	392, 392, 392, 392, 391, 391, 391, 358, 358, 358,
	358, 390, 390, 57, 57, 218, 218, 409, 409, 411,
	411, 411, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 46, 46, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 109, 109, 110,
	110, 110, 110, 112, 112, 112, 374, 374, 58, 58,
	3, 3, 171, 173, 174, 174, 172, 172, 172, 172,
	172, 172, 60, 60, 59, 59, 176, 175, 177, 177,
	177, 1, 1, 2, 2, 4, 4, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 340,
	340, 340, 373, 373, 375, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 115, 114, 114, 113, 116,
	116, 116, 116, 116, 116, 116, 116, 377, 377, 377,
	61, 61, 378, 327, 328, 329, 5, 6, 354, 376,
	123, 123, 22, 37, 37, 23, 23, 23, 23, 24,
	24, 62, 65, 65, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	291, 291, 280, 280, 289, 289, 279, 279, 305, 305,
	305, 282, 282, 282, 283, 283, 402, 402, 402, 276,
	276, 64, 64, 64, 306, 306, 306, 306, 67, 67,
	412, 412, 413, 413, 414, 414, 414, 68, 69, 69,
	309, 309, 310, 310, 70, 71, 83, 83, 83, 83,
	83, 84, 84, 84, 84, 84, 84, 108, 108, 108,
	10, 10, 10, 10, 79, 79, 79, 9, 9, 11,
	66, 66, 73, 399, 399, 400, 401, 401, 401, 401,
	74, 76, 25, 25, 25, 25, 25, 25, 133, 133,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 127, 127, 127, 122, 122, 421, 77, 78,
	78, 128, 128, 128, 128, 128, 119, 119, 119, 125,
	125, 125, 12, 12, 13, 262, 262, 14, 14, 132,
	132, 131, 131, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 129, 129, 130, 130, 130, 130,
	298, 298, 298, 297, 297, 165, 165, 167, 166, 166,
	168, 168, 169, 169, 169, 169, 169, 216, 216, 192,
	192, 255, 255, 256, 256, 254, 254, 261, 261, 257,
	257, 257, 257, 264, 264, 170, 170, 170, 170, 178,
	178, 179, 179, 180, 180, 308, 308, 303, 303, 303,
	302, 302, 184, 184, 184, 186, 185, 185, 185, 185,
	187, 187, 189, 189, 191, 191, 188, 188, 190, 196,
	196, 195, 195, 193, 193, 193, 193, 193, 193, 194,
	194, 194, 194, 197, 197, 143, 143, 143, 143, 143,
	143, 143, 143, 410, 410, 157, 157, 157, 157, 157,
	157, 157, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 245, 245, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 221, 221, 220, 220, 85,
	85, 85, 86, 86, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 90, 90, 89, 89,
	211, 211, 295, 295, 91, 92, 92, 93, 93, 96,
	96, 95, 94, 94, 100, 100, 97, 97, 99, 99,
	98, 101, 101, 102, 103, 103, 277, 277, 198, 198,
	207, 207, 207, 207, 199, 199, 200, 200, 200, 200,
	200, 200, 208, 208, 208, 215, 209, 209, 205, 205,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 162, 162, 162, 162, 226, 226,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 150, 150, 163, 163, 163,
	163, 164, 164, 164, 164, 164, 164, 164, 316, 316,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 422, 422,
	331, 331, 331, 206, 206, 206, 206, 206, 124, 124,
	124, 124, 124, 313, 313, 313, 317, 317, 317, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 318, 318, 224, 224, 120, 120,
	222, 222, 223, 225, 225, 217, 217, 217, 217, 219,
	219, 202, 202, 202, 227, 227, 319, 319, 228, 228,
	104, 105, 105, 106, 106, 229, 229, 231, 230, 230,
	232, 233, 233, 233, 234, 234, 235, 235, 235, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 43, 135, 135, 135, 135, 137, 137, 136, 136,
	80, 80, 81, 81, 81, 141, 141, 142, 142, 142,
	139, 139, 140, 140, 252, 252, 252, 252, 252, 252,
	252, 236, 236, 236, 243, 243, 243, 239, 239, 241,
	241, 241, 242, 242, 242, 240, 249, 249, 251, 251,
	250, 250, 246, 246, 247, 247, 248, 248, 248, 244,
	244, 201, 201, 201, 201, 201, 253, 253, 253, 253,
	307, 307, 307, 265, 265, 212, 212, 214, 214, 213,
	213, 161, 266, 266, 274, 271, 271, 272, 272, 299,
	299, 299, 275, 275, 288, 288, 284, 284, 285, 285,
	278, 278, 290, 290, 290, 75, 210, 210, 370, 370,
	367, 294, 294, 296, 296, 300, 300, 304, 304, 301,
	301, 8, 415, 415, 415, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 418, 419, 311, 312, 312,
	312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 10, 9, 7,
	8, 1, 1, 10, 7, 9, 8, 8, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 1,
	3, 3, 3, 3, 3, 1, 1, 2, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 3, 3, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	5, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 2, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 6, 10,
	7, 5, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 5, 3, 5,
	0, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 4, 4, 4,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 1, 1, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 4, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 5, 5, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 3, 6, 1, 1, 3, 4, 3, 4, 4,
	4, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 5, 5, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 7, 7, 6, 6, 2,
	2, 5, 6, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 4, 2, 4, 0, 1, 2, 5,
	0, 3, 0, 1, 4, 4, 2, 1, 0, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 8, 6, 8, 6, 5, 4, 10,
	2, 2, 1, 2, 2, 2, 2, 2, 5, 6,
	6, 6, 6, 6, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 8, 4, 8, 8, 6, 5,
	4, 4, 4, 5, 7, 4, 4, 7, 4, 4,
	6, 6, 6, 8, 6, 6, 4, 4, 3, 4,
	6, 6, 4, 4, 6, 4, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 4, 4, 4, 6,
	4, 6, 4, 4, 6, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 4, 4, 6, 4,
	6, 4, 8, 6, 4, 4, 6, 4, 6, 8,
	4, 6, 8, 4, 4, 6, 8, 6, 4, 6,
	6, 8, 10, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	5, 9, 6, 9, 8, 6, 8, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	6, 8, 10, 12, 14, 6, 8, 8, 10, 12,
	14, 6, 8, 10, 12, 6, 8, 4, 4, 3,
	4, 6, 6, 4, 6, 4, 6, 8, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 5, 1,
	1, 1, 2, 2, 0, 4, 0, 2, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 3, 4, 2, 3, 4,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 3, 1, 6, 5, 4, 1, 3, 3, 5,
	0, 2, 5, 0, 5, 1, 3, 1, 2, 3,
	4, 1, 1, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -416, -77, -421, -7, -27, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -62, -65, -63, -64,
	-67, -68, -69, -70, -71, -9, -11, -66, -25, -26,
	-72, -73, -74, -75, -76, -12, -13, -14, -8, -30,
	-29, -28, -107, -33, 36, -38, -48, 241, -49, -39,
	242, -50, 244, 243, 281, 245, 397, 274, 84, 330,
	331, 333, 334, 335, 336, -108, 704, 279, 280, 247,
	40, 52, 37, 38, 41, 251, 287, 288, 250, 146,
	-31, -34, 13, -418, 16, 487, 276, 275, 32, -32,
	597, 96, -78, -417, 752, -252, -236, 27, 37, 33,
	-235, -231, -128, -236, 25, 23, 11, 610, 12, -77,
	17, 18, -77, -355, -357, 29, 96, 174, 96, -77,
	-55, -54, -52, -51, -53, -56, 35, -45, -46, -379,
	-44, -41, 246, 243, 291, 136, 137, 281, 282, 283,
	245, 265, 280, 284, 279, 300, -40, 91, 37, 597,
	600, -362, 242, 248, 249, 244, 488, 139, 138, 85,
	-359, 392, 631, 722, -56, 724, 111, 114, 723, 51,
	255, 725, 726, 727, 638, 728, 264, 729, 730, 731,
	732, 738, 679, 739, 740, 741, 140, 11, -77, -304,
	-300, 101, -293, 594, 267, 629, 441, 630, 316, 91,
	48, 43, 533, 604, 388, 392, 631, 518, 722, 398,
	330, 348, 342, 523, 524, 525, 371, 363, 595, 632,
	605, 319, 268, 304, 716, 361, 150, 724, 323, 633,
	282, 399, 400, 634, 401, 111, 333, 438, 737, 322,
	635, 735, 114, 723, 338, 89, 517, 58, 719, 51,
	277, 446, 447, 359, 250, 355, 725, 305, 636, 607,
	298, 139, 136, 744, 40, 351, 57, 34, 734, 138,
	56, 726, 165, 637, 727, 638, 403, 378, 710, 55,
	404, 283, 639, 94, 288, 599, 327, 718, 405, 538,
	352, 406, 315, 733, 247, 640, 326, 699, 691, 692,
	407, 408, 711, 383, 379, 384, 540, 641, 430, 522,
	409, 695, 696, 751, 59, 642, 643, 712, 137, 644,
	88, 728, 90, 346, 347, 645, 313, 266, 543, 544,
	432, 375, 500, 128, 507, 508, 121, 122, 503, 123,
	509, 124, 129, 510, 511, 512, 501, 125, 118, 502,
	513, 514, 376, 377, 126, 515, 120, 119, 504, 506,
	127, 516, 264, 39, 410, 596, 317, 65, 321, 292,
	433, 53, 381, 748, 52, 706, 545, 646, 709, 374,
	370, 497, 60, 647, 648, 649, 650, 519, 729, 373,
	345, 369, 743, 4, 310, 492, 520, 730, 69, 249,
	386, 385, 387, 299, 429, 366, 651, 652, 653, 271,
	92, 654, 356, 26, 655, 656, 411, 306, 657, 63,
	658, 659, 436, 280, 660, 61, 731, 46, 661, 285,
	745, 732, 662, 663, 664, 705, 665, 287, 666, 413,
	667, 693, 694, 412, 380, 382, 546, 294, 414, 397,
	252, 598, 668, 328, 350, 284, 736, 669, 272, 534,
	535, 536, 537, 717, 542, 541, 286, 291, 279, 437,
	273, 670, 671, 672, 673, 674, 320, 690, 675, 676,
	334, 602, 738, 498, 50, 677, 678, 679, 680, 681,
	314, 309, 431, 440, 68, 93, 394, 682, 683, 715,
	344, 339, 44, 307, 100, 478, 480, 481, 482, 483,
	484, 479, 486, 684, 331, 62, 739, 740, 741, 301,
	742, 526, 527, 528, 529, 14, 580, 563, 591, 564,
	581, 565, 574, 566, 582, 590, 592, 547, 555, 548,
	556, 586, 569, 583, 575, 568, 567, 589, 572, 576,
	549, 557, 587, 573, 550, 558, 551, 559, 552, 560,
	585, 584, 577, 588, 553, 561, 579, 554, 562, 578,
	570, 571, 449, 749, 750, 521, 416, 140, 311, 312,
	54, 367, 293, 685, 324, 686, 357, 358, 494, 495,
	372, 343, 368, 147, 702, 332, 341, 700, 295, 417,
	499, 281, 687, 439, 308, 389, 132, 340, 395, 325,
	603, 539, 300, 418, 714, 601, 530, 531, 365, 362,
	302, 532, 688, 390, 704, 419, 256, 296, 297, 689,
	701, 420, 421, 318, 422, 423, 424, 425, 426, 428,
	329, 427, 703, 697, 698, 303, 477, 600, 337, 360,
	396, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 496,
	254, -77, 254, -188, -300, -127, 706, 708, 193, -271,
	400, -289, 402, 415, 410, 420, 408, -280, 411, 413,
	294, -402, 430, 254, 417, 241, 403, 412, 421, 422,
	318, 428, 423, 329, 427, 303, 424, 425, 426, -386,
	193, 727, 742, 332, 340, 150, 364, 407, 405, 431,
	706, 101, -306, 101, 102, 103, -293, 332, -309, 337,
	-294, -386, -293, 335, -77, -77, -311, -311, -127, -209,
	-143, 158, -157, -260, -160, 102, -148, -151, -203, -204,
	-205, -206, -158, -219, -258, 182, 183, 190, 159, -215,
	-161, 30, 593, 489, 488, 193, 35, 236, 78, 79,
	491, 492, 161, 64, 16, 454, 455, -159, 444, 445,
	456, 450, 451, 517, 519, 520, 521, 518, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 522, 533,
	494, 495, 130, 496, 118, 120, 119, 128, 129, 497,
	498, 499, 361, 545, 546, 540, 543, 544, 542, 541,
	376, 377, 500, 563, 564, 568, 567, 565, 566, 569,
	572, 573, 574, 575, 576, 577, 579, 578, 570, 571,
	548, 547, 549, 550, 551, 552, 553, 554, 556, 555,
	557, 558, 559, 560, 561, 562, 580, 581, 582, 583,
	584, 586, 585, 590, 589, 587, 588, 592, 591, 501,
	502, 121, 122, 123, 124, 125, 126, 127, 503, 506,
	504, 505, 507, 508, 509, 514, 515, 510, 511, 512,
	513, 516, 387, 385, 386, 382, 381, 380, -87, -100,
	620, 619, -101, 441, 446, 447, 449, -149, -150, -163,
	-164, -294, -300, 259, 443, 253, 188, 487, -152, -146,
	-217, 117, 103, -29, -213, 442, 452, 453, 457, 448,
	458, 606, 608, 623, 624, 626, 611, 616, 615, 618,
	534, 535, 536, 537, 538, 539, 691, 692, 693, 694,
	695, 696, 697, 698, -386, -293, 101, -155, -153, -198,
	104, 109, 112, 113, 115, -408, 277, 357, 358, 131,
	-418, 720, -154, 106, 107, 108, 133, 134, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	99, 105, 51, 416, 416, -188, -77, -77, -77, -77,
	-415, 723, 598, -229, -128, -231, -31, -29, -418, 13,
	-77, -29, -30, -28, -34, -36, 625, -35, -300, 110,
	-236, -252, 17, 68, 177, 49, 57, -234, -235, -32,
	-29, -143, 24, 42, 28, -278, 258, -77, -77, -267,
	-314, 332, -269, 431, 706, 430, -259, -272, 101, -258,
	-271, 429, 102, -30, -29, -356, 174, -342, -346, -294,
	269, -372, 265, -188, -365, -364, -294, -418, -126, -288,
	255, 263, 262, 151, -389, 154, 311, 443, 253, -51,
	-52, -53, -271, 192, 726, -109, 286, 290, 97, 97,
	-346, -345, -344, -390, 290, 269, -371, -363, 261, 270,
	-352, 262, 263, -347, 255, 152, -390, -347, 260, 270,
	265, 269, 290, 290, 140, 290, 140, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 285, -353, 166, -353,
	601, 601, -359, -390, 265, 255, -390, -390, 261, -290,
	-347, 257, 29, 257, 39, 39, -353, -353, -353, -271,
	192, -353, -353, -353, -353, 298, 298, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, 254, -389, -135, 427, 318, 91,
	-54, 300, -37, -188, -288, 255, 256, -389, 287, -188,
	237, 254, 709, -282, 174, 20, -282, -279, 416, 414,
	401, 406, -282, -282, -282, -282, 301, 399, -348, 255,
	39, 266, 416, 301, 399, 301, 302, 301, 302, 409,
	419, 301, -305, 19, 177, 443, 404, 408, 294, 254,
	295, 256, 418, 302, -305, 99, -283, 174, 301, 416,
	410, 297, -282, -282, -312, -418, -296, -294, -292, 246,
	42, 157, 29, 31, 160, 193, 143, 24, 161, 41,
	248, 364, 265, 192, 261, 488, 241, 82, 606, 444,
	451, 442, 450, 454, 490, 491, 443, 402, 35, 18,
	608, 32, 275, 28, 45, 186, 243, 164, 609, 278,
	30, 276, 130, 134, 611, 27, 85, 270, 19, 263,
	47, 21, 612, 613, 22, 75, 259, 258, 177, 255,
	80, 16, 236, 33, 173, 76, 614, 152, 146, 615,
	616, 617, 618, 144, 78, 174, 25, 746, 452, 453,
	37, 707, 593, 289, 188, 83, 66, 708, 158, 448,
	619, 620, 131, 621, 135, 86, 713, 154, 23, 81,
	49, 622, 290, 623, 260, 747, 624, 434, 625, 175,
	244, 487, 79, 176, 720, 626, 721, 253, 415, 13,
	493, 36, 274, 262, 74, 73, 142, 77, 458, 627,
	254, 163, 257, 145, 133, 11, 151, 38, 17, 84,
	87, 455, 456, 457, 64, 141, 597, 162, 20, 628,
	435, 156, -386, 709, -312, -312, 301, 341, 36, 102,
	-412, -413, -414, 597, 434, 257, -294, -188, -83, 699,
	245, -84, 705, 42, 252, 147, 39, -133, 416, -121,
	193, 727, 710, 711, 712, 709, 413, 717, 715, 713,
	301, 714, 97, 154, 156, 157, 4, -143, 173, -199,
	-200, 172, 166, 167, 168, 169, 170, 171, 178, 177,
	158, 160, 174, -245, 155, 179, 180, 181, 182, 183,
	184, 185, 187, 186, 188, 189, 175, 176, 192, 239,
	240, -151, -151, -151, -151, -215, -221, -220, -418, -217,
	-386, -293, -300, -418, -418, -151, -277, -418, -148, -418,
	-418, -418, -418, -418, -224, -143, -418, -418, -422, -418,
	-422, -422, -422, -331, -418, -331, -331, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, 237, -418, -418, -418, -418, -418, -331, -331,
	-331, -331, -331, -331, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, 99, 113,
	109, 112, 104, -219, 115, 99, 99, 99, 99, -29,
	-30, -209, -418, -311, -399, -400, -192, -191, -188, -418,
	318, -294, -294, 287, 106, -234, -32, -29, -229, -235,
	-231, -29, -77, -119, -132, 70, 71, -131, -134, 28,
	45, 75, 77, 100, 73, 74, 72, 42, -419, 98,
	-419, -252, -419, 97, -36, -255, 96, 653, 683, 653,
	683, 68, 50, 99, 99, 97, 26, -230, -232, -143,
	-189, 33, -188, -278, -278, 97, 101, 332, -268, -270,
	432, 434, 166, -299, -294, 99, 35, 98, 97, -188,
	-320, -323, -325, -324, -326, -321, -322, 361, 362, 193,
	365, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	378, 390, 36, 277, 357, 358, 359, 360, 379, 380,
	381, 382, 384, 385, 386, 387, 342, 363, 595, 343,
	344, 345, 346, 347, 348, 350, 351, 354, 352, 353,
	355, 356, -295, -294, 96, 98, 97, -330, 96, -143,
	-135, 254, -294, 255, 255, 255, -285, 259, 487, -353,
	-353, -353, 285, 24, -44, -41, -379, 23, -40, -41,
	246, 136, 137, 243, 96, -342, 96, -351, -295, -294,
	96, 152, 260, 151, -350, -347, -350, -351, -294, -217,
	-294, 152, 152, -294, -294, -264, -294, -264, -264, 42,
	-264, 42, -264, 42, 106, -294, -264, 42, -264, 42,
	-264, 42, -264, 42, -264, 42, 35, 88, 89, 90,
	35, 92, 93, 94, -217, -294, -294, -217, -342, -217,
	-188, -294, -271, 106, 106, 106, -353, -353, 106, 99,
	99, 99, -353, -353, 106, 99, -302, -300, 99, 99,
	-391, 271, 315, 317, 106, 106, 106, 106, 35, 99,
	-392, 35, 734, 733, 735, 736, 737, 99, 106, 35,
	106, 35, 106, -294, 96, -188, -141, 305, 241, 243,
	246, 86, 99, 323, 321, 322, 319, 324, 325, 326,
	166, 51, 97, 257, 254, -294, -284, 259, -284, -294,
	-301, -300, -292, -188, 257, 398, 99, -143, -349, 19,
	177, -305, -305, -282, -188, -349, -305, -282, -188, -282,
	-282, -282, -282, -305, -305, -305, -282, -300, -300, -188,
	-188, -188, -188, -188, -188, -188, -312, -283, -282, 709,
	99, -276, 19, 86, -312, -312, -291, 27, 27, 97,
	338, 435, 436, -310, 335, -79, -294, 99, -10, -27,
	-16, -15, -17, 166, -10, 97, 597, -181, -188, 709,
	709, 709, 709, 709, 709, -143, -143, -143, -143, 621,
	-207, -410, 158, 133, 134, 131, 132, -160, 43, 44,
	42, -143, -208, -213, -215, 116, 177, 160, 174, -245,
	-148, -151, -148, -148, -148, -148, -148, -148, 236, -148,
	236, -148, -148, -148, -148, -148, -148, -313, -294, 99,
	193, -156, -155, 115, -408, -156, 594, 97, -220, 237,
	-143, -143, -386, -117, 460, 461, 462, 463, 465, 466,
	467, 470, 471, 475, 476, 459, 477, 464, 469, 472,
	473, 474, 468, 360, -143, -210, -209, -210, -143, -143,
	-222, -223, 162, -217, -143, -419, -419, 106, 184, -125,
	28, 45, -125, -125, -125, -125, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -125, -143, -118, 459,
	477, 464, 469, 472, 473, 474, 468, 360, 478, 479,
	480, 481, 482, 483, 484, 485, 486, -118, -117, -143,
	-143, -143, -143, -143, -143, -143, -143, -85, -143, 143,
	144, 145, -209, -143, -148, -143, -143, -143, -419, -143,
	-143, -143, -210, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -385,
	-384, -383, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -209, -209, -209, -209, -209,
	-143, -419, -143, -162, -146, 106, -260, 115, 102, -143,
	-143, -143, -143, -143, -143, -210, -296, -301, -292, -293,
	-209, -210, -210, -209, -209, -143, -143, -143, -143, -143,
	-143, -143, -143, -419, -143, -143, -143, -143, -143, -252,
	-419, -209, 97, -401, 434, 435, 707, -303, -302, 29,
	290, 96, -210, 99, 19, -262, 87, -294, -234, -234,
	70, 71, 66, -129, -130, 184, -143, -300, -134, -419,
	-35, 29, -254, -294, 646, 646, 69, 99, -332, -271,
	388, 389, 193, -143, -143, 97, -233, 31, 32, -263,
	290, -188, -166, -168, -169, -170, -192, -216, -418, -171,
	-29, 617, 614, 19, -181, -182, -190, -300, -269, -314,
	-268, 97, 433, 435, 436, 86, 135, -143, -333, 192,
	-361, -360, -359, -342, -344, -345, -346, 98, -333, -338,
	395, 394, -330, -330, -330, -330, -330, -332, -332, -332,
	-332, 96, -330, 96, -330, -330, -330, -330, -335, 96,
	-335, -335, -336, -335, 96, -336, -337, 96, -337, -372,
	-143, -369, -368, -366, -367, 264, 111, 689, 645, 597,
	638, 679, 87, -364, -233, 106, -419, -141, -285, -370,
	-367, -294, -294, -294, -300, 158, 101, 99, 101, 99,
	101, 99, -110, -58, -1, 746, 747, 748, 97, 24,
	-343, -342, -57, 315, -375, -376, 290, -371, -365, -351,
	152, -350, -351, -351, -294, 97, 33, 140, 140, 140,
	140, 597, 243, 36, -286, 637, 158, 689, 645, -342,
	-57, 257, 257, -313, -313, -313, 99, 99, -281, 742,
	-181, -137, 307, 166, 296, 296, 254, 309, 254, 309,
	-188, 320, 323, 321, 322, 319, 324, 325, 326, 42,
	42, 42, 42, 42, 42, 42, 308, 310, 312, 298,
	-188, -188, -284, 86, -183, -188, 30, -300, 99, 99,
	-188, -282, -282, -188, -282, -282, -188, 99, -300, -414,
	339, -294, 375, 700, 702, -121, 434, 97, 597, 27,
	-122, 27, -418, -410, 133, 134, -215, -215, -215, -208,
	-148, -151, -148, 157, 278, -148, -148, -418, -217, -419,
	-296, 29, 97, 87, -419, 182, 97, -419, -419, 97,
	19, 97, -225, -223, 164, -143, -419, 97, -419, -419,
	-209, -143, -143, -143, -143, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -209, -419, 97, 97, 19,
	-317, 29, -419, -419, -419, -419, 97, -419, -419, -224,
	-419, 19, -419, 87, 97, 177, 97, -419, -419, -419,
	97, 97, -419, -419, 97, -419, 97, -419, -419, -419,
	-419, -419, -419, 97, -419, 97, -419, -419, -419, 97,
	-419, 97, -419, -419, 97, -419, 97, -419, 97, -419,
	97, -419, 97, -419, 97, -419, 97, -419, 97, -419,
	97, -419, 97, -419, 97, -419, 97, -419, 97, -419,
	97, -419, 97, -419, 97, -419, 97, -419, 97, -419,
	-419, -419, 97, -419, 97, -419, 97, -419, -419, 97,
	-419, 97, -419, 97, -419, 97, 97, -419, 97, 97,
	97, -419, 97, 97, 97, 97, -419, -419, -419, -419,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	-419, -419, -419, -419, -419, -419, 97, -92, 622, -419,
	-419, 97, -419, 97, 97, 97, 97, 97, -419, -418,
	237, -419, -419, -419, -419, -419, 97, 97, 97, 97,
	97, 97, -419, -419, -419, 97, 97, -419, 97, -419,
	97, -419, -400, 706, 435, -196, -195, -193, 84, 258,
	85, -302, -418, -209, -419, -156, -260, -261, -260, -202,
	-294, 106, 115, -236, -165, 97, -167, 19, -298, 4,
	-297, 29, -294, 99, 237, -215, 98, 97, -332, -240,
	-246, -279, -294, 99, 193, -334, 193, -334, 388, 389,
	-232, -201, 36, 64, -27, -418, -418, 36, 97, -184,
	-186, -185, -187, 76, 80, 82, 77, 78, 79, 83,
	-308, 29, -29, -166, -29, -418, -191, -181, -188, -420,
	19, 87, -420, 97, 237, -270, -273, 437, 434, 440,
	-386, 99, -109, 97, -359, -346, -237, -138, 47, -339,
	396, -332, 605, -332, -341, 99, -341, 106, 106, 106,
	98, -47, -42, -43, 37, 91, -366, -353, 99, 46,
	-353, -353, -294, 98, -233, -137, -188, 86, -370, -370,
	-370, 30, -2, 745, 751, 152, 96, 401, 23, -254,
	97, 98, -218, 316, 98, -111, -294, 98, 96, -351,
	-351, -294, -418, 254, 35, 35, 689, 645, 637, -57,
	-218, -217, -294, -333, 744, 743, 98, 256, 314, -142,
	454, -139, 99, 101, -188, -188, -188, -188, -188, -188,
	246, 243, 424, -409, 327, -409, 299, 257, -181, -188,
	97, -82, 273, 268, -305, -305, 37, -188, 434, 718,
	716, -143, 157, 278, -160, -151, -117, -117, -148, -315,
	193, 361, 277, 359, 355, 375, 366, 394, 357, 395,
	352, 351, 350, -315, -313, -148, -209, -143, -143, -143,
	165, -143, 163, -143, -93, -92, -419, -419, -419, -419,
	-419, -93, -93, -93, -93, -93, -93, -93, -93, -93,
	-93, -229, -143, -143, -143, -419, 193, 361, -93, -143,
	19, -143, -313, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -383, -143,
	-209, -143, -209, -143, -143, -143, -143, -143, -384, -384,
	-384, -384, -384, -209, -209, -209, -209, -143, -418, -294,
	-96, -95, -94, 672, 258, -92, -162, -96, -162, 236,
	-143, 236, 236, 236, -143, -210, -296, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -193, -347, 296,
	-347, 296, -347, -264, 98, 97, -275, 27, 19, 64,
	64, -165, -197, 20, -130, -166, -297, 184, -301, -294,
	-243, 699, -249, 53, -247, -248, 54, -244, 55, 63,
	-334, -334, -265, 86, -266, -274, -217, -212, -214, -213,
	-418, -253, -419, -294, -264, -266, -168, -169, -169, -168,
	-169, 76, 76, 76, 81, 76, 81, 76, -185, -300,
	-419, -143, -197, 87, -166, -166, -190, -300, 184, 434,
	438, 439, -359, -407, 131, 158, 35, 86, 392, 111,
	-405, 192, 634, 684, 689, 645, 638, 679, -406, 260,
	151, 152, 272, 29, 48, 98, 97, 98, 97, 98,
	98, 97, -287, -286, -43, -42, -353, -353, 106, -386,
	99, 99, 256, -188, 86, 86, 86, -112, 749, 106,
	96, -3, 91, -143, 96, 24, -342, -217, -377, -327,
	-378, -328, -329, -5, -6, -354, -115, 64, 111, -61,
	51, 255, 729, 730, 140, -418, 742, -369, -254, -373,
	-375, -188, -147, -418, -159, -145, -144, -146, -152, 182,
	183, 277, 357, 358, -218, -188, -136, 305, 313, 96,
	-140, 102, -388, 87, 296, 392, 296, 392, 99, -411,
	328, 99, -411, -188, -82, -47, -188, -282, -282, 37,
	-386, -419, -160, -151, -124, 177, 597, -318, 604, -330,
	-330, -330, -337, -330, 347, -330, 347, -330, -419, -419,
	-419, 97, -419, 27, -419, 97, -143, 97, -93, -93,
	-93, -93, -93, -120, 493, 97, 97, -419, 96, 96,
	-419, -143, -419, -419, -419, 97, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, 97,
	-419, 97, -419, 97, -419, 97, -419, 97, -419, 97,
	-419, 97, -419, 97, -419, 97, -419, 97, -419, 97,
	-419, 97, -419, 97, -419, 97, -419, 97, -419, 97,
	-419, -419, 97, -419, -419, -419, 97, -419, 97, -419,
	97, -419, -419, -419, 97, -316, 690, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -91, -295,
	-92, 654, 654, -419, -92, -226, 97, -148, -419, -148,
	-148, -148, -419, -419, -419, 97, -419, 97, 97, -419,
	97, -419, 97, -419, -419, -419, -419, 97, -194, 27,
	-418, -194, -418, -194, -419, -260, -188, -197, -227, 21,
	-143, 237, -240, 58, 367, -251, -250, 62, 54, -248,
	24, 56, 24, 34, -265, 97, 166, -307, 97, 29,
	-419, -419, 97, 64, 237, -419, -197, -179, -178, 86,
	87, -180, 86, -178, 76, 76, -255, 97, -166, -197,
	-197, 237, 131, -418, -147, 17, 99, 99, -386, -404,
	733, 734, 35, 106, -353, -353, 152, 152, -188, 96,
	-332, 99, -332, 106, 106, 35, 92, 93, 94, 35,
	88, 89, 90, -188, -188, -188, -188, -374, 96, 24,
	-143, 96, 166, 98, -254, -254, 292, 177, -353, 727,
	298, 298, -353, -353, -353, -114, -113, 749, 98, -419,
	97, -340, 597, 600, -143, -153, -153, -255, 98, -382,
	597, -387, -294, -294, -294, -294, 106, 108, -419, 595,
	83, 598, -419, -332, -143, -143, -143, -143, -234, 99,
	-143, -143, 106, 106, -93, -419, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -143, -143, -209, -143, -419, -176,
	-175, -177, 710, 131, 35, -315, -419, -211, 290, -99,
	-98, -97, 19, -419, -143, -117, -117, -117, -117, -143,
	-143, -143, -143, -143, -143, -418, 76, 23, 21, -257,
	-294, 260, -418, -257, -418, -303, -227, -228, 22, 24,
	184, -241, 60, -239, 59, -239, -250, 24, 24, 99,
	24, 99, 152, -274, -143, -214, -302, 64, -27, -294,
	-212, -294, -229, -143, 96, -143, -156, -197, -143, -204,
	517, 519, 520, 521, 518, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 522, 533, 494, 495, 496,
	118, 120, 119, 128, 129, 497, 498, 499, 361, 545,
	546, 540, 543, 544, 542, 541, 376, 377, 500, 563,
	564, 568, 567, 565, 566, 569, 572, 573, 574, 575,
	576, 577, 579, 578, 570, 571, 548, 547, 549, 550,
	551, 552, 553, 554, 556, 555, 557, 558, 559, 560,
	561, 562, 580, 581, 582, 583, 584, 586, 585, 590,
	589, 587, 588, 592, 591, 501, 502, 121, 122, 123,
	124, 125, 126, 127, 503, 506, 504, 507, 508, 509,
	514, 515, 510, 511, 512, 513, 516, 387, 385, 386,
	382, 381, 380, 441, 446, 447, 449, 534, 535, 536,
	537, 538, 539, 691, 692, 693, 694, 695, 696, 697,
	698, 99, 99, 96, -143, 98, 98, -255, -373, -58,
	98, -256, -254, 106, 98, 293, -213, -418, 99, -353,
	-353, -353, 106, 106, -302, -419, 97, -294, -406, -375,
	601, 601, -419, 29, -381, -380, -296, 96, 87, 69,
	596, 599, -419, -419, -419, 97, -419, -419, -419, 98,
	98, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, 97, -419, -175, -177, -419, 86, -156,
	-229, 24, -96, 315, 317, -96, -419, -419, -419, -419,
	-419, 97, -419, -419, 97, -419, 97, -419, -419, -257,
	-419, 24, 24, 97, -419, -257, -419, -257, -196, -228,
	-106, -105, -104, 628, -143, -209, -242, 61, 86, 135,
	99, 99, 99, 17, -418, -212, 237, -307, -234, -254,
	-173, 401, -419, -254, 98, 29, 98, 751, 152, 98,
	-213, -123, -418, 289, -302, 99, 99, -113, -116, -27,
	97, 166, -254, -188, 69, -143, -209, -419, 86, 609,
	710, -90, -89, -86, 721, 747, -209, -92, -92, -143,
	-143, -143, -419, -294, 260, -419, -419, -106, 97, -103,
	-102, -294, -319, 597, 86, 135, -266, -254, -307, -294,
	98, -419, -418, 98, -238, -27, 96, -3, 289, -327,
	-378, -328, -329, -5, -6, -354, -80, 597, -380, -358,
	-300, -296, 99, 106, 98, 597, -419, -419, -88, 160,
	719, 687, -153, 236, -419, 97, -419, 97, -419, 97,
	-104, 97, 29, 602, -419, -303, -174, -172, -294, 651,
	-397, -396, 593, -407, -403, 131, 158, 111, -405, 689,
	645, 141, 142, -80, -143, 96, -419, -81, 304, 706,
	237, -388, 598, -88, 720, 665, 640, 665, 640, -148,
	-143, -143, -143, -102, -418, -419, 97, 27, -320, -60,
	662, -394, -395, 86, -398, 407, 661, 682, 131, 99,
	98, -254, 265, -301, -382, 599, 157, -117, -419, 97,
	-419, 97, -419, -91, -172, 658, -333, -156, -395, 86,
	-394, 86, 18, 17, -4, 750, 98, 306, -88, 665,
	640, -143, -143, -419, -59, 30, -173, -393, 273, 268,
	271, 36, -393, 106, -4, -419, -419, 662, 267, 35,
	131, -156, -176, -175, -175,
}

var yyDef = [...]int{
	887, -2, -2, 889, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 68,
	70, 71, 887, 0, 887, 0, 0, 887, -2, -2,
	887, 1647, 0, 887, 0, 882, 0, -2, 802, 808,
	0, 817, -2, 0, 0, 887, 887, 2287, 2287, 882,
	0, 0, 0, 0, 0, 887, 887, 887, 887, 1652,
	1505, 48, 887, 0, 81, 82, 837, 838, 839, 63,
	0, 2285, 888, 1, 3, 69, 73, 0, 0, 0,
	56, 1514, 0, 76, 0, 0, 891, 894, 895, 1630,
	887, 887, 0, 122, 123, 0, 0, 0, 0, -2,
	128, -2, 157, 158, 159, 0, 164, 607, 525, 577,
	523, 562, -2, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 400, 400, 0,
	0, -2, 511, 511, 511, 1632, 0, 0, 0, 559,
	462, 400, 400, 400, 0, 400, 400, 400, 400, 0,
	0, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 1532, 163,
	1648, 1645, 1646, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	0, 1624, 0, 720, 996, 0, 883, 884, 0, 791,
	791, 0, 791, 791, 791, 791, 0, 0, 0, 734,
	0, 0, 0, 0, 788, 0, 750, 751, 0, 788,
	0, 757, 794, 0, 0, 764, 791, 791, 767, 2288,
	0, 2288, 2288, 0, 0, 1615, 0, 785, 783, 797,
	798, 40, 801, 804, 805, 806, 807, 810, 0, 821,
	824, 1641, 1642, 0, 826, 831, 850, 851, 0, 43,
	1156, 0, 1020, 0, 1031, -2, 1042, 1059, 1060, 1061,
	1062, 1063, 1065, 1066, 1067, 0, 0, 0, 0, 1072,
	1073, 0, 0, 0, 0, 0, 1136, 0, 0, 0,
	0, 2010, 1476, 0, 0, 1438, 1438, 1172, 1438, 1438,
	1440, 1440, 1440, 1861, 2002, 2011, 2190, 1822, 1828, 1829,
	1830, 2136, 2137, 2138, 2139, 2231, 2232, 2236, 1924, 1817,
	2203, 2204, 0, 2284, 1963, 1971, 1972, 1948, 1957, 1996,
	2098, 2215, 1840, 1991, 2061, 1921, 1943, 1944, 2079, 2080,
	1967, 1968, 1947, 2142, 2144, 2160, 2161, 2146, 2148, 2157,
	2163, 2168, 2147, 2159, 2164, 2177, 2181, 2184, 2185, 2186,
	2154, 2152, 2165, 2169, 2171, 2173, 2179, 2182, 2155, 2153,
	2166, 2170, 2172, 2174, 2180, 2183, 2141, 2145, 2149, 2158,
	2176, 2156, 2175, 2150, 2162, 2167, 2178, 2151, 2143, 1961,
	1964, 1951, 1952, 1954, 1956, 1962, 1969, 1975, 1953, 1974,
	1973, 0, 1949, 1950, 1955, 1966, 1970, 1958, 1959, 1960,
	1965, 1976, 2017, 2016, 2015, 2060, 1987, 2059, 0, 0,
	0, 0, 0, 1811, 1866, 1867, 2187, 1360, 1361, 1362,
	1363, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	1489, 1490, 42, 1155, 1611, 1440, 1440, 1440, 1440, 1440,
	1440, 1094, 1095, 1096, 1097, 1098, 1124, 1125, 1131, 1132,
	2074, 2075, 2076, 2077, 1904, 2226, 1913, 1914, 2056, 2057,
	1926, 1927, 2258, 2259, -2, -2, -2, 230, 231, 232,
	233, 234, 235, 236, 237, 0, 1865, 2201, 2202, 226,
	0, 0, 294, 291, 292, 293, 1138, 1139, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	296, 297, 2287, 0, 860, 0, 0, 0, 0, 0,
	0, 1653, 1654, 1514, 0, 1506, 1505, 61, 0, 887,
	-2, 0, 0, 0, 0, 45, 0, 50, 951, 890,
	75, 74, 1554, 1557, 0, 0, 0, 57, 1515, 65,
	67, 1516, 0, 892, 893, 0, 1631, 1630, 1630, 98,
	0, 0, 99, 119, 120, 121, 0, 0, 105, 106,
	1617, 1618, 41, 124, 125, 0, 0, 175, 176, 0,
	1112, 427, 0, 171, 0, 420, 359, 0, 1532, 0,
	0, 0, 0, 0, 1628, 0, 1625, 152, 153, 160,
	161, 162, 400, 400, 400, 574, 0, 0, 163, 163,
	532, 533, 534, 0, 0, -2, 425, 0, 512, 0,
	0, 414, 414, 418, 416, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 0, 552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 668, 0, 401, 0,
	572, 573, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 1634, 0, 549, 550, 0, 0, 0, 400,
	400, 0, 0, 0, 0, 400, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 1545, 0, 0, 0,
	-2, 0, 712, 0, 0, 0, 1626, 1626, 0, 719,
	0, 0, 0, 724, 0, 0, 725, 0, 788, 788,
	786, 787, 727, 728, 729, 730, 791, 0, 0, 409,
	410, 411, 788, 791, 0, 791, 791, 791, 791, 788,
	788, 788, 791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2288, 794, 791, 0, 758, 0, 759, 760,
	761, 762, 765, 766, 768, 2289, 2290, 1643, 1644, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 2288, 2288, 772, 776, 780, 778, 1616, 803,
	809, 811, 812, 0, 0, 822, 825, 844, 47, 1912,
	830, 47, 832, 833, 834, 835, 836, 862, 863, 868,
	0, 0, 0, 0, 874, 875, 876, 0, 0, 879,
	880, 881, 0, 0, 0, 0, 0, 1018, 0, 0,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1043, 1044, 0, 0,
	0, 1068, 1069, 1070, 1071, 1074, 0, 1085, 0, 1087,
	1485, -2, 0, 0, 0, 1079, 1080, 0, 0, 0,
	1636, 1636, 0, 0, 0, 1477, 0, 0, 1170, 0,
	1171, 1173, 1174, 1175, 0, 1176, 1177, 899, 899, 899,
	899, 899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 1636, 1636, 0, 0, 218, 219,
	220, 221, 222, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 238,
	239, 240, 241, 242, 243, 298, 244, 245, 246, 1155,
	0, 0, 0, 44, 852, 853, 0, 977, 994, 1636,
	0, 0, 905, 0, 1651, 55, 64, 66, 1514, 59,
	1514, 0, 909, 0, 0, -2, -2, 910, 911, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 52, 2286,
	53, 0, 72, 0, 46, 0, 0, 1555, 0, 1558,
	0, 0, 0, 373, 1562, 0, 0, 1507, 1508, 1511,
	96, 0, 993, 0, 0, 0, 107, 0, 109, 110,
	0, 0, 0, 384, 1619, 1620, 1621, -2, 407, 0,
	384, 368, 306, 307, 308, 359, 310, 359, 359, 359,
	359, 373, 373, 373, 373, 341, 342, 343, 344, 345,
	0, 359, 0, 327, 359, 359, 359, 359, 349, 350,
	351, 352, 353, 354, 355, 356, 311, 312, 313, 314,
	315, 316, 317, 318, 319, 361, 361, 361, 361, 361,
	365, 365, 0, 1113, 0, 388, 0, 1511, 0, 0,
	1545, 1628, 1638, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 575, 618, 526, 563, 576, 0, 529, 530,
	-2, 0, 0, 511, 0, 513, 0, 408, 0, -2,
	0, 418, 0, 414, 418, 415, 418, 406, 419, 553,
	554, 555, 0, 557, 558, 648, 963, 0, 0, 0,
	0, 0, 654, 655, 656, 0, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 564, 565, 566, 567,
	568, 569, 570, 571, 0, 0, 0, 0, 513, 0,
	560, 0, 0, 464, 465, 466, 0, 0, 469, 470,
	471, 472, 0, 0, 475, 476, 477, 980, 981, 478,
	479, 504, 505, 506, 480, 481, 482, 483, 484, 485,
	486, 498, 499, 500, 501, 502, 503, 487, 488, 489,
	490, 491, 492, 495, 0, 145, 1536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 0, 0, 0, 0, 908,
	997, 1649, 1650, 721, 0, 0, 792, 793, 0, 412,
	413, 791, 791, 731, 773, 0, 791, 735, 774, 736,
	738, 737, 739, 752, 753, 791, 742, 789, 790, 743,
	744, 745, 746, 747, 748, 749, 769, 754, 755, 756,
	795, 0, 799, 800, 770, 771, 0, 781, 0, 0,
	0, 815, 816, 0, 823, 847, 845, 846, 848, 840,
	841, 842, 843, 0, 849, 0, 0, 865, 92, 870,
	871, 872, 873, 885, 878, 1157, 1015, 1016, 1017, 0,
	1019, 1025, 0, 1140, 1142, 1023, 1024, 1027, 0, 0,
	0, 1021, 1032, 1152, 1153, 1154, 0, 0, 0, 0,
	0, 1036, 1040, 1045, 1046, 1047, 1048, 1049, 0, 1050,
	0, 1053, 1054, 1055, 1056, 1057, 1058, 1064, 1453, 1454,
	1455, 1083, 299, 300, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1156, 0, 1637, 0, 0, 0,
	1483, 1480, 0, 0, 0, 1439, 1441, 0, 0, 0,
	900, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 0, 0, 1456,
	0, 0, 0, 0, 0, 0, 0, 1476, 0, 1089,
	1090, 1091, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 1365, 1366, 1367, 39, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 855, 856, 858, 0, 999, 978, 0,
	0, 0, 0, 861, 0, 904, 0, 907, 58, 60,
	913, 914, 0, 935, 924, 926, 930, 0, 912, 54,
	49, 0, 0, 955, 1556, 1559, 1560, 373, 1582, 0,
	382, 382, 379, 1517, 1518, 0, 1510, 1512, 1513, 0,
	0, 992, 0, 938, 940, 941, 942, -2, 0, 946,
	947, 0, 0, 0, 0, 0, 94, 996, 100, 0,
	108, 0, 0, 113, 114, 101, 102, 103, 104, 0,
	607, -2, 459, 177, 179, 180, 181, 172, -2, 371,
	369, 370, 309, 373, 373, 335, 336, 337, 338, 339,
	340, 0, 347, 0, 328, 329, 330, 331, 320, 0,
	321, 322, 323, 363, 0, 324, 325, 0, 326, 426,
	0, 1519, 389, 390, 392, 400, 0, 395, 396, 0,
	400, 400, 0, 421, 422, 0, 1511, 1536, 0, 0,
	1639, 1638, 1638, 1638, 150, 0, 165, 166, 167, 168,
	169, 170, 643, 0, 0, 619, 641, 642, 163, 0,
	0, 173, 515, 514, 0, 675, 0, 424, 0, 0,
	418, 418, 403, 404, 556, 0, 0, 650, 651, 652,
	653, 0, 0, 0, 542, 453, 0, 543, 544, 513,
	515, 0, 0, 384, 467, 468, 473, 474, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 592, 594, 597, 599, 517, 603, 605, 593,
	596, 598, 600, 517, 604, 606, 1533, 1534, 1535, 0,
	0, 713, 0, 0, 450, 90, 1627, 718, 722, 723,
	788, 741, 775, 788, 733, 740, 763, 777, 779, 813,
	814, 819, 827, 828, 829, 869, 0, 0, 0, 0,
	877, 0, 0, 1026, 1141, 1143, 1028, 1029, 1030, 1033,
	0, 1037, 1041, 0, 0, 0, 0, 0, 1088, 1086,
	1487, 0, 0, 0, 1137, 0, 0, 1160, 1161, 0,
	0, 0, 0, 1481, 0, 0, 1168, 0, 1442, 1118,
	0, 0, 0, 0, 0, 1118, 1118, 1118, 1118, 1118,
	1118, 1118, 1118, 1118, 1118, 1505, 1195, 0, 0, 0,
	0, 0, 1200, 1201, 1202, 1118, 0, 1205, 1206, 0,
	1208, 0, 1209, 0, 0, 0, 0, 1216, 1217, 1219,
	0, 0, 1222, 1223, 0, 1225, 0, 1227, 1228, 1229,
	1230, 1231, 1232, 0, 1234, 0, 1236, 1237, 1238, 0,
	1240, 0, 1242, 1243, 0, 1245, 0, 1247, 0, 1250,
	0, 1253, 0, 1256, 0, 1259, 0, 1262, 0, 1265,
	0, 1268, 0, 1271, 0, 1274, 0, 1277, 0, 1280,
	0, 1283, 0, 1286, 0, 1289, 0, 1292, 0, 1295,
	1296, 1297, 0, 1299, 0, 1301, 0, 1304, 1305, 0,
	1307, 0, 1310, 0, 1313, 0, 0, 1314, 0, 0,
	0, 1318, 0, 0, 0, 0, 1327, 1328, 1329, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 1342, 1343, 1344, 1345, 1346, 0, 1348, 0, 1119,
	0, 0, 1119, 0, 0, 0, 0, 0, 1158, 1636,
	0, 1443, 1444, 1445, 1446, 1447, 0, 0, 0, 0,
	0, 0, 1387, 1388, 1390, 0, 0, 1393, 0, 1395,
	0, 1610, 854, 857, 859, 949, 1000, 1001, 0, 0,
	0, 979, 0, 0, 1635, 902, 903, 906, 957, 0,
	1491, 0, 0, 935, 1013, 0, 936, 0, 927, 2008,
	931, 0, 933, 934, 0, 51, 952, 0, 1564, 1563,
	1576, 1589, 382, 382, 376, 377, 383, 378, 380, 381,
	1509, 1603, 0, 0, 1592, 0, 0, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 985, 0, 0, 0,
	0, 976, 947, 0, 948, 0, 1013, 0, -2, 0,
	88, 89, 0, 0, 0, 111, 112, 0, 0, 118,
	385, 386, 154, 163, 461, 178, 434, 0, 0, 305,
	372, 332, 333, 334, 0, 357, 0, 0, 0, 0,
	455, 126, 1523, 1522, 400, 400, 391, 0, 394, 0,
	0, 0, 1640, 360, 423, 0, 144, 0, 0, 0,
	0, 1629, 613, 0, 0, 620, 0, 0, 0, 524,
	0, 535, 536, 0, 647, -2, 709, 388, 0, 402,
	405, 964, 0, 0, 537, 0, 540, 541, 454, 515,
	546, 547, 561, 548, 496, 497, 494, 0, 0, 1546,
	1547, 1552, 1550, 1551, 131, 582, 584, 588, 583, 587,
	0, 0, 0, 519, 0, 519, 580, 0, 450, 1519,
	0, 717, 451, 452, 791, 791, 864, 93, 0, 867,
	0, 0, 0, 0, 1034, 1038, 1051, 1052, 1448, 1474,
	359, 359, 1461, 359, 365, 1464, 359, 1466, 359, 1469,
	359, 1472, 1473, 0, 0, 1081, 0, 0, 0, 0,
	1167, 1484, 0, 0, 1178, 1117, 1118, 1118, 1118, 1118,
	1118, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1478, 0, 0, 0, 1199, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 143,
	0, 0, 0, 0, 0, 0, 1398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 1116,
	0, 1120, 1121, 0, 0, 1350, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 1488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1002, 1009, 0,
	1009, 0, 1009, 0, 995, 0, 0, 1622, 1623, 1492,
	1493, 1013, 1494, 0, 925, 937, 932, 928, 0, 956,
	1582, 0, 1575, 0, -2, 1584, 0, 0, 0, 1590,
	374, 375, 79, 0, 1603, 1612, 0, 1600, 1605, 1607,
	0, 0, 0, 1596, 0, 1013, 939, 971, 973, 0,
	968, 983, 984, 986, 0, 988, 0, 990, 991, 951,
	945, 0, 84, 0, 1013, 1013, 95, 0, 998, 115,
	116, 117, 460, 182, 187, 0, 0, 0, 192, 0,
	194, 0, 0, 0, 199, 200, 400, 400, 435, 0,
	302, 304, 0, 0, 185, 373, 0, 373, 0, 364,
	366, 0, 436, 456, 1520, 1521, 0, 0, 393, 397,
	398, 399, 0, 146, 0, 0, 0, 616, 0, 644,
	0, 0, 0, 0, 0, 0, 174, 516, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 0, 400, 0,
	0, 0, 400, 400, 400, 0, 701, 387, 0, 0,
	672, 669, 538, 0, 216, 217, 224, 225, 227, 0,
	0, 0, 0, 0, 545, 951, 1537, 1538, 1539, 0,
	1549, 1553, 134, 0, 0, 0, 0, 590, 595, 601,
	0, 518, 602, 714, 715, 716, 91, 726, 732, 866,
	886, 1022, 1035, 1039, 0, 0, 0, 0, 1475, 1459,
	373, 1462, 1463, 1465, 1467, 1468, 1470, 1471, 1077, 1078,
	1082, 0, 1164, 0, 1166, 0, 1482, 0, 1179, 1180,
	1181, 1182, 1183, 1514, 0, 0, 0, 1198, 0, 0,
	1118, 0, 1211, 1210, 1212, 0, 1214, 1215, 1220, 1221,
	1224, 1226, 1233, 1235, 1239, 1241, 1244, 1246, 1248, 0,
	1251, 0, 1254, 0, 1257, 0, 1260, 0, 1263, 0,
	1266, 0, 1269, 0, 1272, 0, 1275, 0, 1278, 0,
	1281, 0, 1284, 0, 1287, 0, 1290, 0, 1293, 0,
	1298, 1300, 0, 1303, 1306, 1308, 0, 1311, 0, 1315,
	0, 1317, 1319, 1320, 0, 0, 0, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1347, 0, 1110,
	1349, 1122, 1123, 1128, 1352, 0, 0, 0, 1355, 0,
	0, 0, 1359, 1159, 1370, 0, 1375, 0, 0, 1381,
	0, 1385, 0, 1391, 1392, 1394, 1396, 0, 0, 0,
	0, 0, 0, 0, 977, 958, 62, 1494, 1498, 0,
	1014, 0, 1569, 1567, 1567, 1577, 1578, 0, 0, 1585,
	0, 0, 0, 0, 80, 0, 0, 1591, 0, 0,
	1608, 0, 0, 0, 0, 97, 1505, 965, 972, 0,
	0, 966, 0, 967, 987, 989, 944, 0, 1013, 86,
	87, 0, 188, 0, 190, 0, 193, 195, 196, 197,
	203, 204, 205, 198, 0, 0, 301, 303, 0, 0,
	346, 358, 348, 0, 0, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 951, 147, 148, 149, 608, 0, 618,
	0, 953, 0, 611, 0, 527, 0, 0, 0, 400,
	400, 400, 0, 0, 0, 0, 686, 0, 0, 649,
	0, 657, 0, 0, 0, 228, 229, 0, 1548, 581,
	0, 132, 133, 0, 0, 586, 520, 521, 1075, 0,
	0, 0, 1076, 1460, 0, 0, 0, 0, 0, 1479,
	0, 0, 0, 0, 1204, 1207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	0, 0, 638, 639, 0, 1399, 1115, 1505, 0, 1119,
	1129, 1130, 0, 1119, 1369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1010, 0, 0, 0,
	959, 960, 0, 0, 0, 999, 1498, 1503, 0, 0,
	929, 1572, 0, 1565, 1568, 1566, 1579, 0, 0, 1586,
	0, 1588, 0, 1613, 1614, 1606, 1601, 0, 1595, 1598,
	1600, 1597, 1514, 969, 0, 974, 0, 85, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 202, 0, 0, 362, 367, 0, 0, 0,
	609, 0, 954, 621, 612, 0, 699, 0, 703, 0,
	0, 0, 706, 707, 708, 685, 0, 689, 428, 673,
	670, 671, 539, 0, 135, 136, 0, 0, 0, 1449,
	0, 1452, 1162, 1165, 1163, 0, 1194, 1196, 1197, 1457,
	1458, 1213, 1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270,
	1273, 1276, 1279, 1282, 1285, 1288, 1291, 1294, 1302, 1309,
	1312, 1316, 1321, 0, 1324, 0, 0, 1325, 0, 640,
	1106, 0, 0, 1126, 1127, 0, 1354, 1356, 1357, 1358,
	1371, 0, 1376, 1377, 0, 1382, 0, 1386, 1397, 0,
	1004, 1011, 1012, 0, 1007, 0, 1008, 0, 950, 1503,
	78, 1504, 1501, 0, 1499, 1496, 1561, 0, 1570, 1571,
	1580, 1581, 1587, 0, 0, 1600, 0, 1594, 83, 0,
	0, 0, 189, 0, 208, 0, 617, 0, 620, 610,
	697, 698, 0, 710, 702, 704, 705, 687, -2, 1540,
	0, 0, 0, 589, 1450, 0, 0, 1326, 0, 636,
	637, 1114, 1107, 0, 1092, 1093, 1111, 1351, 1353, 0,
	0, 0, 1003, 961, 962, 1005, 1006, 77, 0, 1500,
	1134, 0, 1495, 0, 1573, 1574, 1604, 0, 1593, 1599,
	970, 977, 0, 441, 434, 1540, 0, 0, 0, 690,
	691, 692, 693, 694, 695, 696, 578, 1542, 137, 138,
	0, 508, 509, 510, 131, 0, 1169, 1322, 1108, 0,
	0, 0, 0, 0, 1372, 0, 1378, 0, 1383, 0,
	1502, 0, 0, 1497, 1602, 622, 0, 624, 0, -2,
	429, 442, 0, 183, 209, 210, 0, 0, 213, 214,
	215, 206, 207, 127, 0, 0, 711, 0, 1543, 1544,
	0, 134, 0, 0, 1099, 1100, 1101, 1102, 1104, 0,
	0, 0, 0, 1135, 1112, 623, 0, 0, 384, 0,
	633, 430, 431, 0, 437, 438, 439, 440, 211, 212,
	645, 0, 0, 507, 585, 1451, 0, 0, 1373, 0,
	1379, 0, 1384, 0, 625, 626, 634, 0, 432, 0,
	433, 0, 0, 0, 614, 0, 645, 1541, 1109, 1103,
	1105, 0, 0, 1133, 0, 635, 631, 443, 445, 446,
	0, 0, 444, 646, 615, 1374, 1380, 0, 447, 448,
	449, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 187, 179, 3,
	96, 98, 184, 182, 97, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 752,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 155, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	156, 157, 158, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:688
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:706
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:710
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:751
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:831
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Type: yyDollar[2].str, Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:891
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:912
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:916
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:946
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:950
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:979
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:994
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1004
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1017
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1029
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1033
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1039
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1043
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1047
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1051
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1057
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1061
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1065
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1071
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1075
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1081
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1091
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1095
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1099
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.str = RepeatableReadStr
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.str = ReadCommittedStr
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.str = SerializableStr
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1123
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1127
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1131
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1137
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1143
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1151
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1158
		{
			yyDollar[1].createTableUnion().Select = yyDollar[3].selStmtUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1164
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1173
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1177
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1188
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1213
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1219
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1239
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1245
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1261
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1268
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1275
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1280
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1285
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1290
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1297
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1304
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1315
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1326
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1332
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1336
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1340
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1372
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1378
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1382
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1388
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1398
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1402
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1408
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1418
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1423
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1432
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1456
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1465
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1560
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1564
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1570
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1574
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1578
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1584
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1588
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1612
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1617
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1622
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1627
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1753
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Armscii8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = ASCIIStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Big5Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = UBinaryStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp1250Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp1251Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp1256Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Cp1257Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Cp850Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Cp852Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Cp866Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Cp932Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = Dec8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = EucjpmsStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = EuckrStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = Gb18030Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Gb2312Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = GbkStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Geostd8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = GreekStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = HebrewStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Hp8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Keybcs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Koi8rStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = Koi8uStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = Latin1Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = Latin2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Latin5Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Latin7Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = MacceStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = MacromanStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = SjisStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Swe7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Tis620Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Ucs2Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = UjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf16Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = Utf16leStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = Utf32Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = Utf8mb3Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = Utf8mb4Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1933
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1937
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1947
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1951
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1961
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1965
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1975
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1981
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1985
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1989
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1993
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2237
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2246
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2275
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2285
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2301
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2306
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2351
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2380
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2389
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2395
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2405
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2409
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2426
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2450
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2458
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2462
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2466
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = yyDollar[2].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = ""
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2533
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2543
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2547
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2553
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2557
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2563
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2567
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2573
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2587
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2591
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2595
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2604
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2610
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2616
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2622
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2626
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2630
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2635
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2639
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2651
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2665
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2669
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2673
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2692
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2714
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2720
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2734
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2923
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2932
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2950
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2954
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2963
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2967
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2979
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2985
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3055
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3059
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3063
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3107
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3111
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3115
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3119
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3125
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3135
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3139
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3143
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3147
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3151
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3155
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3159
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3163
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3167
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3171
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3342
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3348
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3355
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3374
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3398
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3422
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3431
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3439
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3448
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3455
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3467
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3476
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3491
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3505
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3509
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3515
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3521
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3527
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3537
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3541
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3547
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3553
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3559
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3565
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3571
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3575
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3583
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3589
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3595
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3601
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3605
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3609
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3615
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3619
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3624
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3628
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3633
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3637
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3691
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3695
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3699
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3703
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3707
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3711
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3715
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3719
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3723
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3727
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3732
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3746
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3750
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3761
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3765
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3770
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3775
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3780
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3785
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3790
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3795
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3800
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3805
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3811
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3817
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3827
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3832
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3836
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3841
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3846
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3851
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3856
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3861
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3866
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3873
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3880
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3887
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3905
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3911
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3917
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3923
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3929
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3935
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3947
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3969
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3973
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.str = "extended "
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4272
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4310
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4314
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4324
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4358
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4388
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4392
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4401
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4407
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4417
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4421
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4425
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4438
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4464
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4469
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4473
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4477
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4481
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4485
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4490
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4494
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4498
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4502
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4506
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4510
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = yyDollar[1].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4530
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4534
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4538
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4542
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4565
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4577
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4593
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4603
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4609
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4613
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4617
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4621
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4627
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4633
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4639
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = ""
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4746
		{
			setAllowComments(yylex, true)
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4750
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4756
		{
			yyVAL.strs = nil
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4760
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = "union"
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = "union all"
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = "union distinct"
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = "except"
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = "intersect"
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4794
		{
			yyVAL.str = SQLCacheStr
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4799
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4803
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4813
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4817
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4827
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4836
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4842
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4846
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.strs = nil
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = SQLCacheStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = DistinctStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.str = DistinctStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = HighPriorityStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.str = StraightJoinHint
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4895
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.str = SQLBigResultStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4917
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4927
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4931
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4935
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4939
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4964
		{ // Add dual
			yyLOCAL = TableExprs{}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4968
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4974
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4980
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4994
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4998
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5002
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5006
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5010
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5016
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5020
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5026
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5030
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5039
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5048
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5054
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5064
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5068
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5074
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5078
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5082
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5092
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5096
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5109
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5113
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5117
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5121
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5127
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5129
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5139
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5141
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5144
		{
			yyVAL.empty = struct{}{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.empty = struct{}{}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5149
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5170
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5174
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5178
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5184
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5190
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5194
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5198
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5202
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5208
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5212
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5222
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5240
		{
			/* $$ = TableName{
			   Name: $1,
			   Args: $3,
			 } */
			yyVAL.tableName = yyDollar[1].tableName
			yyVAL.tableName.Args = yyDollar[3].exprsUnion()
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5252
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5256
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5262
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5271
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5277
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5287
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5291
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5295
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5299
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5303
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5307
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5312
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5316
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5320
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5324
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5546
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5550
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5636
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5640
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5646
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5656
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5660
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5664
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5670
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5674
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5681
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5685
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5689
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5693
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5697
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5703
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5707
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5711
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5715
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5719
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5723
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5727
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5736
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5742
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5746
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5755
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5760
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5764
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5770
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5776
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5780
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5786
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5802
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5808
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5812
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5818
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5822
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5828
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5832
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5844
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5850
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5854
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5860
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5866
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5886
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5890
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5897
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5901
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5905
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5909
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5915
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5919
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5925
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5929
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5933
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5937
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5941
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5945
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5951
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5955
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5959
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5966
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5972
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5976
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6119
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6123
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6127
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6131
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6135
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6163
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6167
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6171
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6873
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6877
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6881
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6890
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6894
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6898
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6902
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6919
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6931
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6937
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6949
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6953
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6957
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6961
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6970
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6976
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6980
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6984
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6988
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6992
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6996
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7000
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7004
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7008
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7012
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7016
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7020
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7024
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7028
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7032
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7036
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7040
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7044
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7048
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7052
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7058
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7062
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7066
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7070
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7074
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7078
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7082
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7086
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7090
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7094
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7098
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7102
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7106
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7110
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7114
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7118
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7122
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7126
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7136
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7140
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7144
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7154
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7158
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7162
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7166
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7170
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7176
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7180
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7184
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7188
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7192
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7198
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7226
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7230
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7238
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7248
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7252
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7256
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7260
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7268
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7308
		{
			yyVAL.str = string("")
		}
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7312
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7318
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7322
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7328
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7337
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7343
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7347
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7351
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7355
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7361
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7365
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7371
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7380
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7384
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7393
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7412
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7418
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7424
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7428
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7437
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7446
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7452
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7458
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7462
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7468
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7473
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7477
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7481
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7490
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7496
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7500
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7504
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7513
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7517
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7521
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7525
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7532
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7536
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7540
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7544
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7550
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7554
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7558
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7562
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = ""
		}
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7575
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7579
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7584
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7588
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7594
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7598
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7603
		{
			yyVAL.str = ""
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7607
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7612
		{
			yyVAL.str = "cascaded"
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7620
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7629
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7635
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7641
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7647
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7656
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7665
		{
			yyVAL.str = ""
		}
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7669
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7675
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7679
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7683
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7687
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7691
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7695
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7699
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7705
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7709
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7713
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7718
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7722
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7726
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7731
		{
			yyVAL.str = ""
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7735
		{
			yyVAL.str = " header"
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7744
		{
			yyVAL.str = " manifest on"
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7748
		{
			yyVAL.str = " manifest off"
		}
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7753
		{
			yyVAL.str = ""
		}
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7757
		{
			yyVAL.str = " overwrite on"
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7761
		{
			yyVAL.str = " overwrite off"
		}
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7767
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7772
		{
			yyVAL.str = ""
		}
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7776
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7782
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7786
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7792
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7796
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7801
		{
			yyVAL.str = ""
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7805
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7811
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7815
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7821
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7825
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7829
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7834
		{
			yyVAL.str = ""
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7838
		{
			yyVAL.str = " optionally"
		}
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7851
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7855
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7859
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7863
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7867
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7873
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7877
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7881
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7885
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7894
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7898
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7907
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7913
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7917
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7923
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7927
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7933
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7937
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7942
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7952
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7956
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7962
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7969
		{
			yyVAL.str = "charset"
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7979
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7983
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7987
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8013
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8016
		{
			yyVAL.empty = struct{}{}
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8018
		{
			yyVAL.empty = struct{}{}
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8020
		{
			yyVAL.empty = struct{}{}
		}
	case 1635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8024
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8033
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8040
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8044
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8050
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8054
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8061
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8067
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8071
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8077
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8081
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8088
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8094
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8100
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8104
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8108
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8767
		{
		}
	case 2286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8772
		{
		}
	case 2287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8776
		{
			skipToEnd(yylex)
		}
	case 2288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8781
		{
			skipToEnd(yylex)
		}
	case 2289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8785
		{
			skipToEnd(yylex)
		}
	case 2290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8789
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
